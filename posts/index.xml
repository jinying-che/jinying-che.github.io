<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Terminal</title><link>https://jinying-che.github.io/posts/</link><description>Recent content in Posts on Terminal</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 20 Sep 2023 11:47:31 +0800</lastBuildDate><atom:link href="https://jinying-che.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>DNS</title><link>https://jinying-che.github.io/posts/network/dns/</link><pubDate>Wed, 20 Sep 2023 11:47:31 +0800</pubDate><guid>https://jinying-che.github.io/posts/network/dns/</guid><description>Domain Name System (DNS) is the phonebook of the Internet. It translates human-readable domain names (google.com) to machine-readable IP addresses (142.251.46.238).
DNS is not very complex but super useful.
How does DNS work? The basic flow to query dns level by level as follows, the previous server stores the next server address, e.g. Root Nameserver stores TLD Nameserver addresss.
Brower cache and OS cache DNS Resolver: is responsible for initiating and sequencing the queries that ultimately lead to a full resolution (translation) of the resource sought.</description><content>&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Domain_Name_System">Domain Name System (DNS)&lt;/a> is the phonebook of the Internet. It translates human-readable domain names (google.com) to machine-readable IP addresses (142.251.46.238).&lt;/p>
&lt;p>DNS is not very complex but super useful.&lt;/p>
&lt;h2 id="how-does-dns-work">How does DNS work?&lt;/h2>
&lt;p>&lt;img src="https://jinying-che.github.io/images/dns_architecture.svg" alt="dns architecutre">&lt;/p>
&lt;p>&lt;img src="https://jinying-che.github.io/images/dns_flow.png" alt="dns flow">&lt;/p>
&lt;p>The basic flow to query dns level by level as follows, the previous server stores the next server address, e.g. Root Nameserver stores TLD Nameserver addresss.&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Brower cache and OS cache&lt;/strong>&lt;/li>
&lt;li>&lt;strong>DNS Resolver&lt;/strong>: is responsible for initiating and sequencing the queries that ultimately lead to a full resolution (translation) of the resource sought. DNS resolvers are classified by a variety of query methods, such as &lt;strong>recursive&lt;/strong>, &lt;strong>non-recursive&lt;/strong>, and &lt;strong>iterative&lt;/strong>. A resolution process may use a combination of these methods.&lt;/li>
&lt;li>&lt;strong>Root Nameserver&lt;/strong>: the first step in translating (resolving) human readable host names into IP addresses. It stores the IP addresses of TLD, There are &lt;strong>13&lt;/strong> logical Root Nameserver globally, e.g.
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>- l.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- m.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- a.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- b.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- c.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- d.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- e.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- f.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- g.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- h.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- i.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- j.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- k.root-servers.net.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>TLD Nameserver&lt;/strong> (Top Level Domain Server): It stores the IP addresses of authoritative name servers, e.g.
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>- .com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .edu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .net
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .us
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .cn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>Authoritative Nameserver&lt;/strong>: it provides the actual anwser for the dns request.&lt;/li>
&lt;/ol>
&lt;h3 id="example">Example&lt;/h3>
&lt;p>Let&amp;rsquo;s try to trace the dns request for &lt;code>jinying-che.github.io&lt;/code> from my local laptop:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>➜ ~ dig +trace jinying-che.github.io
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.10.6 &amp;lt;&amp;lt;&amp;gt;&amp;gt; +trace jinying-che.github.io
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; global options: +cmd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS l.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS m.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS a.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS b.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS c.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS d.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS e.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS f.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS g.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS h.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS i.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS j.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS k.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN RRSIG NS &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">518400&lt;/span> &lt;span style="color:#ae81ff">20231002140000&lt;/span> &lt;span style="color:#ae81ff">20230919130000&lt;/span> &lt;span style="color:#ae81ff">11019&lt;/span> . hSoNzesJLtJnf9gXYqG4SMrn8R78uNEqUgc1xcFKglavg16gnPrvQnuP sLb74PkmHE+uqQ1ZPs31X6XrA8E/yhlF8r4kPQAaEiMhkLXsZ1QPLgfj wHFWsFcVmWZTKJIQO/6H7P6ht0jhX0pLVRVRTZtIPH0uYqz6w9Z8vWuw Haaqm+48d5+cuyn2iNNqxO8omlQLALwaALu6/7hZPQfgkH6+XBPvSagj 6FOV+zun2hwKNCwrJ7elYQCfL7xi0UbjAOt+OOJYJfF9vfJq9qYnt8/O IBrfdRHtsryH/Fmk/wUPhgNEMYLwgz4n1z+a25A7q5ofocId5lsDYAUJ YxLSNA&lt;span style="color:#f92672">==&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; Received &lt;span style="color:#ae81ff">1097&lt;/span> bytes from 192.168.0.1#53&lt;span style="color:#f92672">(&lt;/span>192.168.0.1&lt;span style="color:#f92672">)&lt;/span> in &lt;span style="color:#ae81ff">11&lt;/span> ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>io. &lt;span style="color:#ae81ff">172800&lt;/span> IN NS a2.nic.io.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>io. &lt;span style="color:#ae81ff">172800&lt;/span> IN NS c0.nic.io.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>io. &lt;span style="color:#ae81ff">172800&lt;/span> IN NS a0.nic.io.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>io. &lt;span style="color:#ae81ff">172800&lt;/span> IN NS b0.nic.io.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>io. &lt;span style="color:#ae81ff">86400&lt;/span> IN DS &lt;span style="color:#ae81ff">57355&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> 95A57C3BAB7849DBCDDF7C72ADA71A88146B141110318CA5BE672057 E865C3E2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>io. &lt;span style="color:#ae81ff">86400&lt;/span> IN RRSIG DS &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">86400&lt;/span> &lt;span style="color:#ae81ff">20231003050000&lt;/span> &lt;span style="color:#ae81ff">20230920040000&lt;/span> &lt;span style="color:#ae81ff">11019&lt;/span> . TnYR1fL2pnUlBTTsJleHjjmxjLs96HwMJOtcHvTzwK31ZBoT+sp76dHq bsQfFgX7FqyTjIzF+z/W7dK1wKnO1ONvhbeWCTZO8SAIMaJU4ZyPAAMo D+xM7YpRHrAYES2wi+cX20kDDKUXauhxiesHqywSMdNK6XugyLluSaz1 J5c2Y0S2r7pZwEPV5v6w9TjzNQOfcfu0NLQx1i7JAbuLExGc7/7pjqxY XB2LH9FtyzgfAkm0ovTu5BRzbUxO/lSURlGIPsI05aFVz6HEhnl04Ujb dmir+S3ffOahHgxjD2al8yIx/FS67ZCi+va2pA6lHdHsktrNnTn2tGZt aUJrzg&lt;span style="color:#f92672">==&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; Received &lt;span style="color:#ae81ff">637&lt;/span> bytes from 192.112.36.4#53&lt;span style="color:#f92672">(&lt;/span>g.root-servers.net&lt;span style="color:#f92672">)&lt;/span> in &lt;span style="color:#ae81ff">85&lt;/span> ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN NS dns2.p05.nsone.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN NS ns-1622.awsdns-10.co.uk.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN NS dns3.p05.nsone.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN NS dns1.p05.nsone.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN NS ns-692.awsdns-22.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0d790076pp5pfktg2hrthj5bj6ckckcb.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN NSEC3 &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> 332539EE7F95C32A 0D7N522D3BFMA1LA01BUIOBUK6MROGMU NS SOA RRSIG DNSKEY NSEC3PARAM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0d790076pp5pfktg2hrthj5bj6ckckcb.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN RRSIG NSEC3 &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">3600&lt;/span> &lt;span style="color:#ae81ff">20231011082044&lt;/span> &lt;span style="color:#ae81ff">20230920072044&lt;/span> &lt;span style="color:#ae81ff">32553&lt;/span> io. hg8Fr2R0FnIfikGso1mx3B66B9QtVVcMoOL108Ahw5D7TUTo/AL+vpP9 AFEa5GMnkenQqbWsp5/xgEuhJxeMbbzF88roBy6hnSoLq21qysLpIQuC Q+TprenA+f7dKiza7RLTTPnv6qN1b50Z/VSsowMK6Fw353h2WLOUAg0G 2I4&lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0jehpe7obc68rhh4ntet0u9o44qmosmo.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN NSEC3 &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> 332539EE7F95C32A 0JES1F5OD9SG1E4CCRGBS865PMBUV4PC NS DS RRSIG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0jehpe7obc68rhh4ntet0u9o44qmosmo.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN RRSIG NSEC3 &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">3600&lt;/span> &lt;span style="color:#ae81ff">20231008005435&lt;/span> &lt;span style="color:#ae81ff">20230916235435&lt;/span> &lt;span style="color:#ae81ff">32553&lt;/span> io. b6iUJ3A5Govhm/HVZIU7ygw7l8tHsUnDFCZaR50HDmYtbmi/g83PASgw 4IgNm42FI2u8oX3HZ2ce8gBK48ts/1bbSCxthUqO2KrSlou+Okh7z+J1 TAeRsC8FkkA/RHu+ymFM1g0BB2cv23Rnftwtl9jsD4JoDKSzhVcKiOx9 WIA&lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; Received &lt;span style="color:#ae81ff">687&lt;/span> bytes from 65.22.160.17#53&lt;span style="color:#f92672">(&lt;/span>a0.nic.io&lt;span style="color:#f92672">)&lt;/span> in &lt;span style="color:#ae81ff">7&lt;/span> ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jinying-che.github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN A 185.199.108.153
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jinying-che.github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN A 185.199.109.153
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jinying-che.github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN A 185.199.110.153
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jinying-che.github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN A 185.199.111.153
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; Received &lt;span style="color:#ae81ff">114&lt;/span> bytes from 198.51.44.5#53&lt;span style="color:#f92672">(&lt;/span>dns1.p05.nsone.net&lt;span style="color:#f92672">)&lt;/span> in &lt;span style="color:#ae81ff">168&lt;/span> ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>Get NS Record: 13 Root Nameservers from &lt;code>192.168.0.1&lt;/code>(DNS Resolver) which is configured by &lt;code>/etc/resolv.conf&lt;/code>&lt;/li>
&lt;li>Get NS Record: TLD (Top Level Domain) from one of Root Nameserve &lt;code>g.root-servers.net&lt;/code>&lt;/li>
&lt;li>Get NS Record: Authoritative Nameserver from one of TLD &lt;code>a0.nic.io&lt;/code>&lt;/li>
&lt;li>Get A Record: Actual ip address from one of Authoritative Nameserver &lt;code>dns1.p05.nsone.net&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="dns-record">DNS Record&lt;/h2>
&lt;p>There&amp;rsquo;re a lot of &lt;a href="https://en.wikipedia.org/wiki/List_of_DNS_record_types">DNS Record types&lt;/a>, the follows are the common record from the client perspective:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Record&lt;/th>
&lt;th>Function&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A&lt;/td>
&lt;td>Address record: Returns a 32-bit IPv4 address&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AAAA&lt;/td>
&lt;td>IPv6 address record: Returns a 128-bit IPv6 address&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>NS&lt;/td>
&lt;td>Name server record: Delegates a DNS zone to use the given authoritative name servers&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CNAME&lt;/td>
&lt;td>Canonical name record: Alias of one name to another: the DNS lookup will continue by retrying the lookup with the new name&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Local server&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat /etc/resolv.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nameserver 114.114.114.114
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="protocol">Protocol&lt;/h2>
&lt;p>DNS originally used the &lt;code>UDP&lt;/code> as transport over IP. Reliability, security, and privacy concerns spawned the use of the &lt;code>TCP&lt;/code> as well as numerous other protocol developments.&lt;/p>
&lt;h2 id="referrence">Referrence&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.cloudflare.com/learning/dns/what-is-dns/">https://www.cloudflare.com/learning/dns/what-is-dns/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Domain_Name_System">https://en.wikipedia.org/wiki/Domain_Name_System&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.bytebytego.com/p/how-does-the-domain-name-system-dns">https://blog.bytebytego.com/p/how-does-the-domain-name-system-dns&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://draveness.me/dns-coredns/">https://draveness.me/dns-coredns/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://draveness.me/whys-the-design-dns-udp-tcp/">https://draveness.me/whys-the-design-dns-udp-tcp/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://time.geekbang.org/column/article/81850">https://time.geekbang.org/column/article/81850&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://datatracker.ietf.org/doc/html/rfc1035">RFC 1035&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/List_of_DNS_record_types">DNS Record Names&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>SLA vs SLO vs SLI</title><link>https://jinying-che.github.io/posts/sla_vs_slo_vs_sli/</link><pubDate>Sat, 09 Sep 2023 16:58:58 +0800</pubDate><guid>https://jinying-che.github.io/posts/sla_vs_slo_vs_sli/</guid><description>To dive into the terms throughly, it&amp;rsquo;s better to read Google SRE Book. This post is just a glance.
TL;DR SLIs drive SLOs which inform SLAs. (From Google SRE Team)
SLA: Service Level Agreements An SLA is an agreement between provider and client about measurable metrics like uptime, responsiveness, and responsibilities.
SRE doesn’t typically get involved in constructing SLAs, because SLAs are closely tied to business and product decisions.
e.g. Service credit if 95th percentile homepage SLI succeeds less than 99.</description><content>&lt;p>To dive into the terms throughly, it&amp;rsquo;s better to read &lt;a href="https://sre.google/sre-book/service-level-objectives/">Google SRE Book&lt;/a>. This post is just a glance.&lt;/p>
&lt;h2 id="tldr">TL;DR&lt;/h2>
&lt;p>SLIs drive SLOs which inform SLAs. (From Google SRE Team)&lt;/p>
&lt;h2 id="sla-service-level-agreements">SLA: Service Level Agreements&lt;/h2>
&lt;p>An SLA is an agreement between provider and client about measurable metrics like uptime, responsiveness, and responsibilities.&lt;/p>
&lt;blockquote>
&lt;p>SRE doesn’t typically get involved in constructing SLAs, because SLAs are closely tied to business and product decisions.&lt;/p>
&lt;/blockquote>
&lt;p>e.g. &lt;em>Service credit if 95th percentile homepage SLI succeeds less than 99.5% over tailing year&lt;/em>&lt;/p>
&lt;h2 id="slo-service-level-objectives">SLO: Service Level Objectives&lt;/h2>
&lt;p>An SLO is an agreement within an SLA about a specific metric like uptime or response time.&lt;/p>
&lt;p>Choosing an appropriate SLO is complex.&lt;/p>
&lt;p>e.g. &lt;em>95th percentile homepage SLI will succeed 99.9% over trailing year&lt;/em>&lt;/p>
&lt;h2 id="sli-service-level-indicator">SLI: Service Level Indicator&lt;/h2>
&lt;p>An SLI measures compliance with an SLO (service level objective).&lt;/p>
&lt;p>Most services consider request latency—how long it takes to return a response to a request—as a key SLI. Other common SLIs include the error rate, often expressed as a fraction of all requests received, and system throughput, typically measured in requests per second.&lt;/p>
&lt;p>e.g. &lt;em>95th percentile latency of homepage requests over past 5 minutes &amp;lt; 300ms&lt;/em>&lt;/p>
&lt;h2 id="teams-cooperation">Teams Cooperation&lt;/h2>
&lt;p>&lt;img src="https://jinying-che.github.io/images/sla_vs_slo_vs_sli.png" alt="sla_vs_slo_sli">&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.atlassian.com/incident-management/kpis/sla-vs-slo-vs-sli">https://www.atlassian.com/incident-management/kpis/sla-vs-slo-vs-sli&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=tEylFyxbDLE">https://www.youtube.com/watch?v=tEylFyxbDLE&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/blog/products/devops-sre/sre-fundamentals-slis-slas-and-slos">https://cloud.google.com/blog/products/devops-sre/sre-fundamentals-slis-slas-and-slos&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Tech Writing</title><link>https://jinying-che.github.io/posts/tech_writing/</link><pubDate>Sun, 03 Sep 2023 15:26:12 +0800</pubDate><guid>https://jinying-che.github.io/posts/tech_writing/</guid><description>Here is the colloction that I think maybe useful for technical article writting.
The Zen of Go 1 - 3
Without new blood and new ideas, our community become myopic and wither. ultimately I tend to pick on net/http a lot, and this is not because it is bad, in fact it is the opposite, it is the most successful, oldest, most used API in the Go codebase. And because of that its design, evolution, and shortcoming have been thoroughly picked over.</description><content>&lt;p>Here is the colloction that I think maybe useful for technical article writting.&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://dave.cheney.net/2020/02/23/the-zen-of-go">The Zen of Go&lt;/a> 1 - 3&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>Without new blood and new ideas, our community become &lt;strong>myopic and wither&lt;/strong>.&lt;/li>
&lt;li>ultimately&lt;/li>
&lt;li>I tend to pick on net/http a lot, and this is not because it is bad, in fact it is the opposite, it is the most successful, oldest, most used API in the Go codebase. And because of that its design, evolution, and &lt;strong>shortcoming have been thoroughly picked over&lt;/strong>. Think of this as &lt;strong>flattery&lt;/strong>, not &lt;strong>criticism&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;a href="https://research.swtch.com/hwmm">Hardware Memory Models&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol start="4">
&lt;li>Hardware designers and compiler developers need a clear answer to how &lt;strong>precisely&lt;/strong> the hardware and compiled code are allowed to behave when executing a given program.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;a href="https://github.blog/2021-09-27-partitioning-githubs-relational-databases-scale/">Partitioning GitHub’s relational databases to handle scale&lt;/a> 5 - 9&lt;/p>
&lt;/blockquote>
&lt;ol start="5">
&lt;li>Over the years, this architecture went through many iterations to support GitHub’s growth and &lt;strong>ever-evolving resiliency&lt;/strong> requirements.&lt;/li>
&lt;li>With GitHub’s growth, this &lt;strong>inevitably led to&lt;/strong> challenges.&lt;/li>
&lt;li>the linter ensures that no new violations are introduced by accident.&lt;/li>
&lt;li>MySQL’s query planner can sometimes create suboptimal query execution plans, &lt;strong>whereas&lt;/strong> an application-side join has a more stable performance cost.&lt;/li>
&lt;li>We often choose to &lt;strong>leverage&lt;/strong> “boring” technology that has been proven to work at our scale, as reliability &lt;strong>remains&lt;/strong> the primary concern.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Golang sync.Pool Doc&lt;/p>
&lt;/blockquote>
&lt;ol start="10">
&lt;li>Pool&amp;rsquo;s purpose is to cache allocated but unused items for later reuse, &lt;strong>relieving&lt;/strong> pressure on the garbage collector.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;a href="https://datatracker.ietf.org/doc/html/rfc1928">SOCKS Protocol Version 5&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol start="11">
&lt;li>there exists a need to provide a general framework for these protocols to transparently and securely &lt;strong>traverse&lt;/strong> a firewall.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;a href="https://clig.dev/">https://clig.dev/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol start="12">
&lt;li>Sometimes when using args, it’s impossible to add new input without breaking existing behavior or creating &lt;strong>ambiguity&lt;/strong>.&lt;/li>
&lt;li>Don’t have &lt;strong>ambiguous&lt;/strong> or similarly-named commands. For example, having two subcommands called “update” and “upgrade” is quite confusing. You might want to use different words, or &lt;strong>disambiguate&lt;/strong> with extra words.&lt;/li>
&lt;li>If you have to append or modify to a system-wide config file, use a dated comment in that file to &lt;strong>delineate&lt;/strong> your additions.&lt;/li>
&lt;li>Apply configuration parameters in order of &lt;strong>precedence&lt;/strong>. Here is the &lt;strong>precedence&lt;/strong> for config parameters, from highest to lowest&lt;/li>
&lt;li>You’ll &lt;strong>step on the toes&lt;/strong> of other commands and confuse users. [slang]&lt;/li>
&lt;li>The concurrency properties of HTTP/2 allow proxies to be more &lt;strong>performant&lt;/strong>.&lt;/li>
&lt;li>A failure of a single microservice can have a &lt;strong>cascading&lt;/strong> effect on all microservices and can significantly affect system availability.&lt;/li>
&lt;/ol></content></item><item><title>Mac Setup</title><link>https://jinying-che.github.io/posts/mac_setup/</link><pubDate>Sat, 01 Jul 2023 23:26:50 +0800</pubDate><guid>https://jinying-che.github.io/posts/mac_setup/</guid><description>1. Mac Setting Turn on three finger drag for your Mac trackpad Increase the cursor moving speed: System Preferences -&amp;gt; Keyboard -&amp;gt; Increase Key Repeat Rate switch the ctrl and caps lock key: https://support.apple.com/en-sg/guide/mac-help/mchlp1011/mac 2. Shell Install iterm2 theme: one dark font: source code pro Install Homebrew Install ZSH: brew install zsh Install oh-my-zsh Generating a new SSH key and adding it to the ssh-agent After ssh setup and add to the https://github.</description><content>&lt;h2 id="1-mac-setting">1. Mac Setting&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://support.apple.com/en-sg/HT204609">Turn on three finger drag for your Mac trackpad&lt;/a>&lt;/li>
&lt;li>Increase the cursor moving speed: &lt;code>System Preferences&lt;/code> -&amp;gt; &lt;code>Keyboard&lt;/code> -&amp;gt; &lt;code>Increase Key Repeat Rate&lt;/code>&lt;/li>
&lt;li>switch the &lt;code>ctrl&lt;/code> and &lt;code>caps lock&lt;/code> key: &lt;a href="https://support.apple.com/en-sg/guide/mac-help/mchlp1011/mac">https://support.apple.com/en-sg/guide/mac-help/mchlp1011/mac&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="2-shell">2. Shell&lt;/h2>
&lt;ul>
&lt;li>Install &lt;a href="https://iterm2.com/">iterm2&lt;/a>
&lt;ul>
&lt;li>theme: &lt;a href="https://github.com/one-dark/iterm-one-dark-theme">one dark&lt;/a>&lt;/li>
&lt;li>font: &lt;a href="https://github.com/adobe-fonts/source-code-pro">source code pro&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Install &lt;a href="https://brew.sh/">Homebrew&lt;/a>&lt;/li>
&lt;li>Install ZSH: &lt;code>brew install zsh&lt;/code>&lt;/li>
&lt;li>Install &lt;a href="https://ohmyz.sh/#install">oh-my-zsh&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">Generating a new SSH key and adding it to the ssh-agent&lt;/a>&lt;/li>
&lt;li>After &lt;strong>ssh&lt;/strong> setup and add to the &lt;a href="https://github.com/">https://github.com/&lt;/a>, it&amp;rsquo;s able to &lt;code>git clone&lt;/code> resource for iterm2 now:
&lt;ul>
&lt;li>theme: &lt;a href="https://github.com/projekt0n/github-nvim-theme">github-nvim-theme&lt;/a>&lt;/li>
&lt;li>font: &lt;a href="https://github.com/adobe-fonts/source-code-pro">source code pro&lt;/a>
&lt;ul>
&lt;li>To install new fonts on mac: Open &lt;code>Font Book&lt;/code> App -&amp;gt; Open File -&amp;gt; Add Fonts To Current User -&amp;gt; Choose the downlaoded font files&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Init &lt;a href="https://github.com/jinying-che/config">.gitconfig&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="21-zsh">2.1 Zsh&lt;/h3>
&lt;ul>
&lt;li>configuration (&lt;a href="https://github.com/jinying-che/config/blob/master/.zshrc">.zshrc&lt;/a>)&lt;/li>
&lt;li>setting:
&lt;ul>
&lt;li>move the cursor by words:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>1. Go to iTerm2 (in the menu bar) &amp;gt; Settings... &amp;gt; Profiles &amp;gt; Keys (not Preferences... &amp;gt; Keys)
2. On current versions (3.14+) you then switch to the Key Mappings tab
3. Press Presets... dropdown button.
4. Select Natural Text Editing
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>plugins:
&lt;ul>
&lt;li>&lt;a href="https://github.com/wting/autojump">autojump&lt;/a>: &lt;code>brew install autojump&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-autosuggestions&lt;/a>: &lt;code>git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/zsh-users/zsh-syntax-highlighting">zsh-syntax-highlighting&lt;/a>: &lt;code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/junegunn/fzf#using-homebrew">fzf&lt;/a>
&lt;ul>
&lt;li>&lt;code>brew install fzf&lt;/code>&lt;/li>
&lt;li>&lt;code>$(brew --prefix)/opt/fzf/install&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="3-vim">3. vim&lt;/h2>
&lt;ul>
&lt;li>vim (&lt;a href="https://github.com/jinying-che/config/blob/master/.vimrc">.vimrc&lt;/a>):
&lt;ul>
&lt;li>install nvim: &lt;code>brew install neovim&lt;/code>&lt;/li>
&lt;li>init nvim: &lt;a href="https://neovim.io/doc/user/nvim.html#nvim-from-vim">https://neovim.io/doc/user/nvim.html#nvim-from-vim&lt;/a>&lt;/li>
&lt;li>install &lt;a href="https://github.com/junegunn/vim-plug">vim-plug&lt;/a>, copy &lt;code>.vimrc&lt;/code> and &lt;code>:PlugInstall&lt;/code> to install plugins&lt;/li>
&lt;li>install &lt;a href="https://github.com/neoclide/coc.nvim">coc.nvim&lt;/a> (&lt;code>brew install node&lt;/code> first)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="31-cocnvimhttpsgithubcomneoclidecocnvim">3.1 &lt;a href="https://github.com/neoclide/coc.nvim/">coc.nvim&lt;/a>&lt;/h3>
&lt;p>I would say coc.nvim is VS Code in neo vim, as well as the function is also expanded by plugins. Here&amp;rsquo;s the basic plugins we used in daily development.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/neoclide/coc-lists">coc-lists&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/josa42/coc-go">coc-go&lt;/a> (for golang developer)&lt;/li>
&lt;li>&lt;a href="https://github.com/fannheyward/coc-pyright">coc-pyright&lt;/a> (for python developer)&lt;/li>
&lt;/ul>
&lt;h2 id="tmux">tmux&lt;/h2>
&lt;ul>
&lt;li>&lt;code>brew install tmux&lt;/code>&lt;/li>
&lt;li>install tmux plugin manager: &lt;a href="https://github.com/tmux-plugins/tpm">https://github.com/tmux-plugins/tpm&lt;/a>&lt;/li>
&lt;li>copy &lt;a href="https://github.com/jinying-che/config/blob/master/.tmux.conf">config&lt;/a> to &lt;code>~/.tmux.conf&lt;/code>&lt;/li>
&lt;li>&lt;code>tmux source ~/.tmux.conf&lt;/code> (type this in terminal if tmux is already running)&lt;/li>
&lt;li>theme: &lt;a href="https://github.com/catppuccin/tmux">https://github.com/catppuccin/tmux&lt;/a>
&lt;ul>
&lt;li>intall by tpm (included in the config above)&lt;/li>
&lt;li>patch font via &lt;a href="https://github.com/catppuccin/tmux#installation">https://github.com/catppuccin/tmux#installation&lt;/a> (for font installation refer to shell section 2)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="4-tool">4. Tool&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/sharkdp/fd">fd&lt;/a> is a simple, fast and user-friendly alternative to &lt;code>find&lt;/code>: &lt;code>brew install fd&lt;/code>&lt;/li>
&lt;li>Personal Script: &lt;code>git clone https://github.com/jinying-che/Geript&lt;/code>, add into &lt;strong>system path&lt;/strong> in &lt;code>.zshrc&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/gohugoio/hugo">Hugo&lt;/a> is one of the most popular open-source static site generators.: &lt;code>brew install hugo&lt;/code>&lt;/li>
&lt;li>GitHub Readme Instant Preview: &lt;code>brew install grip&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/tldr-pages/tldr">tlrd&lt;/a>: collection of community-maintained help pages for command-line tools, that aims to be a simpler, more approachable complement to traditional man pages.&lt;/li>
&lt;/ul>
&lt;h2 id="5-development">5. Development&lt;/h2>
&lt;h3 id="51-golang">5.1 golang&lt;/h3>
&lt;ul>
&lt;li>Install &lt;code>golang&lt;/code>: &lt;a href="https://go.dev/doc/install">https://go.dev/doc/install&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="52-python">5.2 python&lt;/h3>
&lt;ul>
&lt;li>Install python: &lt;code>brew install python3&lt;/code>&lt;/li>
&lt;li>Install ipython: &lt;code>pip install &amp;quot;ipython[all]&amp;quot;&lt;/code>&lt;/li>
&lt;/ul></content></item><item><title>Shell Cheatsheet</title><link>https://jinying-che.github.io/posts/shell_cheatsheet/</link><pubDate>Thu, 08 Jun 2023 15:41:00 +0800</pubDate><guid>https://jinying-che.github.io/posts/shell_cheatsheet/</guid><description>Some skills of daily commands, they are useful but not worth creating a particular cheatsheet, so I put them here generally.
fzf + zsh Add the fzf plugin for zsh, the terminal is fully enhanced!
- plugins=(git autojump zsh-autosuggestions zsh-syntax-highlighting) + plugins=(git autojump zsh-autosuggestions zsh-syntax-highlighting fzf) Try some comands to see the fzf integartion, e.g.
cd ** + TAB(key) Ctrl + r &amp;hellip; Reference:
https://github.com/junegunn/fzf#fuzzy-completion-for-bash-and-zsh mycli pager By default, mycli shows the sql result in a new window (press q to quit and all results gone), but it would be annoyed when result needs to be kept in the current window, the behavior is controlled by Pager Configuraton.</description><content>&lt;p>Some skills of daily commands, they are useful but not worth creating a particular cheatsheet, so I put them here generally.&lt;/p>
&lt;h3 id="fzfhttpsgithubcomjunegunnfzf--zsh">&lt;a href="https://github.com/junegunn/fzf">fzf&lt;/a> + zsh&lt;/h3>
&lt;p>Add the fzf plugin for zsh, the terminal is fully enhanced!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- plugins=(git autojump zsh-autosuggestions zsh-syntax-highlighting)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ plugins=(git autojump zsh-autosuggestions zsh-syntax-highlighting fzf)
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Try some comands to see the fzf integartion, e.g.&lt;/p>
&lt;ul>
&lt;li>&lt;code>cd **&lt;/code> + &lt;code>TAB(key)&lt;/code>&lt;/li>
&lt;li>&lt;code>Ctrl&lt;/code> + &lt;code>r&lt;/code>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>Reference:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/junegunn/fzf#fuzzy-completion-for-bash-and-zsh">https://github.com/junegunn/fzf#fuzzy-completion-for-bash-and-zsh&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="myclihttpsgithubcomdbclimycli-pager">&lt;a href="https://github.com/dbcli/mycli">mycli&lt;/a> pager&lt;/h3>
&lt;p>By default, &lt;code>mycli&lt;/code> shows the sql result in a new window (press &lt;code>q&lt;/code> to quit and all results gone), but it would be annoyed when result needs to be kept in the current window, the behavior is controlled by &lt;strong>Pager Configuraton&lt;/strong>.&lt;/p>
&lt;p>On macOS and Linux, the pager will default to less for most users.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># disable pager &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">enable_pager&lt;/span> = &lt;span style="color:#a6e22e">False&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Reference:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.mycli.net/pager">https://www.mycli.net/pager&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="linuxunix-os-version">linux/unix os version&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>- cat /etc/os-release
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- lsb_release -a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="批量删除进程">批量删除进程&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ps aux | grep redis | grep -v grep | awk &lt;span style="color:#e6db74">&amp;#39;{print $2}&amp;#39;&lt;/span> | xargs kill -9
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中&lt;code>awk '{print $2}' &lt;/code>是打印所有进程的&lt;strong>pid&lt;/strong>&lt;/p>
&lt;h2 id="21">2&amp;gt;&amp;amp;1&lt;/h2>
&lt;p>&lt;strong>&amp;gt; ** ：代表重定向到哪里(&lt;/strong>&amp;gt;&lt;strong>：会覆盖，&lt;/strong>&amp;raquo;**：追加，不覆盖)
**1 ** ：表示stdout标准输出，系统默认值是1（&lt;strong>0&lt;/strong>代表标准输入）
&lt;strong>2 ** ：表示stderr标准错误
&lt;strong>&amp;amp; ** ：表示等同于的意思，2&amp;gt;&amp;amp;1，表示2的输出重定向等同于1（&lt;strong>错误输出&lt;/strong>的位置同&lt;/strong>标准输出&lt;/strong>一样）&lt;/p>
&lt;h2 id="heading">#!&lt;/h2>
&lt;p>&lt;code>#!&lt;/code> 是一个约定的标记，它告诉系统这个脚本需要什么解释器来执行，即使用哪一种 Shell&lt;/p>
&lt;h2 id="shell-编程">shell 编程&lt;/h2>
&lt;h4 id="关于">关于[]&lt;/h4>
&lt;ul>
&lt;li>实际上是bash 中 test 命令的简写。即所有的 [ expr ] 等于 test expr (expr与[]之间，要有空格)&lt;/li>
&lt;li>使用逻辑判断，应该是：&lt;code>[] || []&lt;/code>和&lt;code>[] &amp;amp;&amp;amp; []&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="变量">变量&lt;/h4>
&lt;ul>
&lt;li>变量赋值不应有空格： &lt;code>param=$1&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>##ssh&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ssh 连接服务器&lt;/p>
&lt;p>&lt;code>ssh -P port username@ip&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ssh 使用scope复制本机文件到远程服务器&lt;/p>
&lt;p>&lt;code>scope local-directory/local-file username@ip:remote-directory&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ssh 公钥登陆流程：&lt;/p>
&lt;blockquote>
&lt;p>所谓&amp;quot;公钥登录&amp;quot;，原理很简单，就是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>打印连接&lt;strong>debug&lt;/strong>信息(分析连接流程)： &lt;code>ssh -v root@74.82.202.131 -p 28382&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>-v 参数：打印debug信息&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;p>##Disk&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>df&lt;/strong> displays the amount of disk space available on the file system containing each file name argument&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;code>df -lh&lt;/code> : If no file name is given, the space available on all currently mounted file systems is shown.&lt;/li>
&lt;li>&lt;code>df -lh path&lt;/code>: show information about the file system on which each path resides&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>du&lt;/strong> Summarize disk usage of the set of FILEs, recursively for directories.&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;code>du -h --max-depth=1&lt;/code> : display the usage of first depth in a human readable format&lt;/li>
&lt;li>&lt;code>du -hs * | sort -rh | head -10&lt;/code> : display the usage of this depth and sort the output in a human readable format&lt;/li>
&lt;/ul>
&lt;h2 id="查目录下的文件数">查目录下的文件数&lt;/h2>
&lt;ul>
&lt;li>ls -all | wc -l&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Linux系统中的wc(Word Count)命令的功能为统计指定文件中的字节数、字数、行数，并将统计结果显示输出。&lt;/p>
&lt;/blockquote>
&lt;h2 id="查看二进制bin文件">查看二进制(bin)文件&lt;/h2>
&lt;p>For bin :&lt;/p>
&lt;pre tabindex="0">&lt;code>xxd -b file
&lt;/code>&lt;/pre>&lt;p>For hex :&lt;/p>
&lt;pre tabindex="0">&lt;code>xxd file
&lt;/code>&lt;/pre>&lt;h2 id="进程进入后台并运行">进程进入后台并运行&lt;/h2>
&lt;blockquote>
&lt;p>这是个悲伤的故事，把socket服务通过&lt;code>ctrl-z&lt;/code>放入后台，天真地认为进程在后台运行，其实进程已被暂停&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>后台运行： &lt;code>command &amp;amp;&lt;/code>（在命令后加**&amp;amp;**）&lt;/li>
&lt;li>后台暂停： &lt;code>ctrl-z&lt;/code>（将线程放入后台，并暂停其运行）&lt;/li>
&lt;/ul>
&lt;h2 id="解压">解压&lt;/h2>
&lt;p>####tar&lt;/p>
&lt;ul>
&lt;li>解压：&lt;code>tar -xvf file.jar.gz&lt;/code>&lt;/li>
&lt;li>解压到指定文件：
&lt;ul>
&lt;li>&lt;code>mkdir directory&lt;/code>&lt;/li>
&lt;li>&lt;code>tar -xvf file.jar.gz -C directory&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>压缩：&lt;code>tar -zcvf directory/filename file||directory &lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="zip">zip&lt;/h4>
&lt;ul>
&lt;li>解压：&lt;code>gzip -d file.gz&lt;/code>&lt;/li>
&lt;li>压缩：&lt;code>gzip file&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="linux-网络">Linux 网络&lt;/h2>
&lt;blockquote>
&lt;ul>
&lt;li>nethogs: 按进程查看流量占用&lt;/li>
&lt;li>iptraf: 按连接/端口查看流量&lt;/li>
&lt;li>ifstat: 按设备查看流量&lt;/li>
&lt;li>ethtool: 诊断工具&lt;/li>
&lt;li>tcpdump: 抓包工具&lt;/li>
&lt;li>ss: 连接查看工具&lt;/li>
&lt;li>其他: dstat, slurm, nload, bmon&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>###查看tcp端口&lt;/p>
&lt;ul>
&lt;li>查看所有tcp端口的使用情况：&lt;code>netstat -nptl | grep pid/port/app&lt;/code> （可能需要root权限）&lt;/li>
&lt;li>check the TCP status : &lt;code>netstat -atp&lt;/code>
&lt;ul>
&lt;li>For Established : &lt;code>netstat -atp | grep ESTABLISHED&lt;/code>&lt;/li>
&lt;li>For Established and specific port : &lt;code>netstat -atp | grep ESTABLISHED | grep port&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>端口即文件：&lt;code>lsof -i:port&lt;/code> （可能需要root权限）&lt;/li>
&lt;li>For Mac: &lt;code>netstat -an -ptcp | grep LISTEN&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="ss">ss&lt;/h3>
&lt;blockquote>
&lt;p>它利用到了TCP协议栈中tcp_diag。tcp_diag是一个用于分析统计的模块，可以获得Linux 内核中第一手的信息，这就确保了ss的快捷高效。当然，如果你的系统中没有tcp_diag，ss也可以正常运行，只是效率会变得稍慢&lt;/p>
&lt;/blockquote>
&lt;p>ss的用法与netstat类似，比如&lt;code>ss -nptl | grep pid&lt;/code>&lt;/p>
&lt;p>###网络配置&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="http://www.cnblogs.com/xiaoluo501395377/archive/2013/05/26/3100065.html">reference:&lt;/a>&lt;/p>
&lt;p>Linux支持将多块物理网卡绑定成一块逻辑网卡，绑定后的逻辑网卡可以并行使用组成其的所有物理网卡，通过这样的方式可以提高带宽以及网路的稳定性。&lt;/p>
&lt;p>Linux下支持三种模式的网卡绑定：&lt;/p>
&lt;p>&lt;strong>①模式0&lt;/strong>：&lt;strong>平衡轮训&lt;/strong>　　使用这种模式来进行多网卡绑定时我们可以提高网络的带宽，其流量是从绑定的多块网卡上平均分配的&lt;/p>
&lt;p>&lt;strong>②模式1&lt;/strong>：&lt;strong>主动备份&lt;/strong>　　使用这种模式来进行多网卡绑定时我们可以提高网络的稳定性，这种模式不会提高网络的带宽，每次只有一块网卡在走流量，只有当这块网卡发生故障时，绑定在一起的其它物理网卡才会工作&lt;/p>
&lt;p>&lt;strong>③模式3&lt;/strong>：&lt;strong>广播模式&lt;/strong>　　这种模式一般都不用&lt;/p>
&lt;p>我们如果想通过多网卡绑定来提升网络的带宽，就选择模式0，如果想提高网络的稳定性，则选择模式1&lt;/p>
&lt;/blockquote>
&lt;p>模式由bond0配置文件中的BONDING_OPTS决定，配置文件在&lt;code>/etc/network/network-scripts&lt;/code>路径下，文件命名可能如下：ifcfg-bond0、ifcfg-eth0、ifconfig-eth1等等&lt;/p>
&lt;pre tabindex="0">&lt;code>//ifcfg-bond0 文件
DEVICE=bond0
ONBOOT=yes
BONDING_OPTS=&amp;#34;miimon=1000 mode=1&amp;#34; //模式选择
TYPE=Ethernet
BOOTPROTO=none
IPADDR=10.86.67.42
NETMASK=255.255.255.0
&lt;/code>&lt;/pre>&lt;h3 id="端口连通性测试">端口连通性测试&lt;/h3>
&lt;p>&lt;code>nc -zv ip port&lt;/code>&lt;/p>
&lt;p>&lt;code>telnet ip port&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>nc 命令可起个临时的tcp服务 : &lt;code>nc -l&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h2 id="sudo-and-su">sudo and su&lt;/h2>
&lt;p>####sudo vs su&lt;/p>
&lt;ul>
&lt;li>两个命令的最大区别是：&lt;code>sudo&lt;/code> 命令需要输入当前用户的密码，&lt;code>su&lt;/code> 命令需要输入 root 用户的密码&lt;/li>
&lt;li>两个命令之间的另外一个区别是其默认行为。&lt;code>sudo&lt;/code> 命令只允许使用提升的权限运行单个命令，而 &lt;code>su&lt;/code> 命令会启动一个新的 shell，同时允许使用 root 权限运行尽可能多的命令，直到明确退出登录####&lt;/li>
&lt;/ul>
&lt;h4 id="sudo-su">sudo su&lt;/h4>
&lt;p>以当前用户的身份（即只需要当前用户的密码），就可登录root用户，而不需要root密码&lt;/p>
&lt;h4 id="su-vs-su--">su vs su -&lt;/h4>
&lt;p>前者在切换到 root 用户之后仍然保持旧的（或者说原始用户的）环境，而后者则是创建一个新的环境（由 root 用户 &lt;code>~/.bashrc&lt;/code> 文件所设置的环境），相当于使用 root 用户正常登录（从登录屏幕登录）&lt;/p>
&lt;p>&lt;strong>所以推荐使用 &lt;code>su -&lt;/code>&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://linux.cn/article-8404-1.html">深入理解 sudo 与 su 之间的区别&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="更改文件所属用户及用户组">更改文件所属用户及用户组&lt;/h2>
&lt;p>&lt;code>chown -R user:group file/directory&lt;/code>&lt;/p>
&lt;h2 id="查看文件类型">查看文件类型&lt;/h2>
&lt;p>&lt;code>file&lt;/code> 命令：&lt;/p>
&lt;ul>
&lt;li>&lt;code>file filename&lt;/code> 若显示为data，可能为压缩文件&lt;/li>
&lt;/ul>
&lt;p>cat /etc/sysconfig/network&lt;/p>
&lt;blockquote>
&lt;p>解释：-R 递归修改&lt;/p>
&lt;/blockquote>
&lt;h2 id="查看进程所在目录">查看进程所在目录&lt;/h2>
&lt;h3 id="pwdx">pwdx&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ pwdx &amp;lt;PID&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="lsof">lsof&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ lsof -p &amp;lt;PID&amp;gt; | grep cwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="proc">/proc&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ readlink -e /proc/&amp;lt;PID&amp;gt;/cwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="linux-系统参数">Linux 系统参数&lt;/h2>
&lt;p>#####一个进程文件句柄数限制&lt;/p>
&lt;ul>
&lt;li>查看
&lt;ul>
&lt;li>&lt;code>ulimit -n&lt;/code> (默认soft)&lt;/li>
&lt;li>&lt;code>ulimit -Hn&lt;/code>(hard)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>临时修改：ulimit -n 1000000，只对当前登录用户目前的使用环境有效，系统重启或用户退出后就会失效&lt;/li>
&lt;li>永久修改：编辑 /etc/security/limits.conf 文件，( 修改完重新登录就可以见到)， 修改后内容为&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>* soft nofile 1000000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* hard nofile 1000000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>soft是一个警告值，而hard则是一个真正意义的阀值，超过就会报错。soft 指的是当前系统生效的设置值。hard 表明系统中所能设定的最大值nofile - 打开文件的最大数目星号表示针对所有用户，若仅针对某个用户登录ID，替换星号。&lt;/p>
&lt;/blockquote>
&lt;h5 id="端口数量压测客户端">端口数量（压测客户端）&lt;/h5>
&lt;ul>
&lt;li>
&lt;p>查看：&lt;code>cat /proc/sys/net/ipv4/ip_local_port_range &lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>临时修改： &lt;code>echo &amp;quot;1024 65535&amp;quot;&amp;gt; /proc/sys/net/ipv4/ip_local_port_range&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>永久修改：&lt;code>/etc/sysctl.conf 增加 net.ipv4.ip_local_port_range= 1024 65535 &lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>并令其生效sysctl -p现在可以使用的端口达到64510个&lt;/p>
&lt;/blockquote>
&lt;p>#####系统全局可用句柄数目限制&lt;/p>
&lt;ul>
&lt;li>查看：&lt;code>cat /proc/sys/fs/file-max&lt;/code>&lt;/li>
&lt;li>当前会话修改，可以这么做：&lt;code>echo 1048576 &amp;gt; /proc/sys/fs/file-max&lt;/code> 但系统重启后消失。&lt;/li>
&lt;li>永久修改，要添加到 /etc/sysctl.conf 文件中：&lt;code>fs.file-max = 1048576&lt;/code>保存并使之生效：&lt;code>sysctl -p&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="top">Top&lt;/h2>
&lt;blockquote>
&lt;p>以前只是在 linux 机器上使用 top 命令。常用的快键键是:&lt;/p>
&lt;ul>
&lt;li>p 键 - 按 cpu 使用率排序&lt;/li>
&lt;li>m 键 - 按内存使用量排序&lt;/li>
&lt;/ul>
&lt;p>这 2 个快捷键在 mac 上都不一样。对应的是，先输入 o，然后输入 cpu 则按 cpu 使用量排序，输入 rsize 则按内存使用量排序。&lt;/p>
&lt;p>如果记不清了，可以在 top 的界面上按 &lt;code>?&lt;/code>，在弹出的帮助界面中即可看到。&lt;/p>
&lt;/blockquote>
&lt;h4 id="查看进程">查看进程&lt;/h4>
&lt;p>&lt;code>top -H -p pid&lt;/code>&lt;/p>
&lt;h2 id="cpu">CPU&lt;/h2>
&lt;h4 id="查看物理cpu个数">查看物理cpu个数&lt;/h4>
&lt;p>&lt;code>grep 'physical id' /proc/cpuinfo | sort -u | wc -l&lt;/code>&lt;/p>
&lt;p>####查看核心数量&lt;/p>
&lt;p>&lt;code>grep 'core id' /proc/cpuinfo | sort -u | wc -l&lt;/code>&lt;/p>
&lt;p>####查看线程数或逻辑CPU的个数&lt;/p>
&lt;p>&lt;code>grep 'processor' /proc/cpuinfo | sort -u | wc -l&lt;/code>&lt;/p>
&lt;h3 id="docker中cpu的查看">Docker中cpu的查看&lt;/h3>
&lt;ul>
&lt;li>&lt;code>cat /sys/fs/cgroup/cpu/cpu.cfs_quota_us&lt;/code>&lt;/li>
&lt;li>&lt;code>cat /sys/fs/cgroup/cpu/cpu.cfs_period_us&lt;/code>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>cfs_quota_us&lt;/code>和&lt;code>cfs_period_us&lt;/code>两个值是联合使用的，两者的比值，即&lt;code>cfs_quota_us&lt;/code>/&lt;code>cfs_period_us&lt;/code>代表了该容器实际可用的做多的CPU核数。&lt;/p>
&lt;p>比如&lt;code>cfs_quota_us&lt;/code>=50000，&lt;code>cfs_period_us&lt;/code>=100000，那么二者的比值是0.5，也就是说该容器可以使用0.5个cpu。这样的管控粒度更细，在cgroup使用systemd时最低可以到0.01核。&lt;/p>
&lt;/blockquote>
&lt;h2 id="watch">watch&lt;/h2>
&lt;p>watch命令默认每隔2秒执行后面参数给出的命令，也可手动指定，最小间隔0.1秒&lt;/p>
&lt;p>&lt;code>watch -n 0.1 date&lt;/code>: 每隔100ms，打印日期&lt;/p>
&lt;h2 id="curl">curl&lt;/h2>
&lt;h4 id="分析http请求耗时">分析http请求耗时&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>构建输出格式&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span> curl-format.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time_namelookup: %{time_namelookup}\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time_connect: %{time_connect}\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time_appconnect: %{time_appconnect}\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time_redirect: %{time_redirect}\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time_pretransfer: %{time_pretransfer}\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time_starttransfer: %{time_starttransfer}\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ----------\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time_total: %{time_total}\n
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;ul>
&lt;li>&lt;code>time_namelookup&lt;/code>：DNS 域名解析的时候，就是把 &lt;code>https://zhihu.com&lt;/code> 转换成 ip 地址的过程&lt;/li>
&lt;li>&lt;code>time_connect&lt;/code>：TCP 连接建立的时间，就是三次握手的时间&lt;/li>
&lt;li>&lt;code>time_appconnect&lt;/code>：SSL/SSH 等上层协议建立连接的时间，比如 connect/handshake 的时间&lt;/li>
&lt;li>&lt;code>time_redirect&lt;/code>：从开始到最后一个请求事务的时间&lt;/li>
&lt;li>&lt;code>time_pretransfer&lt;/code>：从请求开始到响应开始传输的时间&lt;/li>
&lt;li>&lt;code>time_starttransfer&lt;/code>：从请求开始到第一个字节将要传输的时间&lt;/li>
&lt;li>&lt;code>time_total&lt;/code>：这次请求花费的全部时间&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>curl -w &amp;ldquo;@curl-format.txt&amp;rdquo; -o /dev/null -s -L &amp;ldquo;&lt;a href="http://cizixs.com">http://cizixs.com&lt;/a>&amp;rdquo;`&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="grep">grep&lt;/h2>
&lt;ul>
&lt;li>取反： &lt;code>-v&lt;/code>&lt;/li>
&lt;li>Ignore case: &lt;code>-i&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="lsof-1">lsof&lt;/h2>
&lt;blockquote>
&lt;p>lsof (list open files)是一个列出当前系统打开文件的工具。拥有查看你进程开打的文件，打开文件的进程，进程打开的端口(TCP、UDP)，找回/恢复删除的文件等功能&lt;/p>
&lt;/blockquote>
&lt;p>##Shell Script&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>lsof -i | awk '{print $2}' | sort | uniq -c | sort -nr&lt;/code> :&lt;/p>
&lt;blockquote>
&lt;p>sort by the internet file descriptor, in reverse order&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>Port status&lt;/p>
&lt;p>&lt;code>lsof -nP -i:8081&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>QPS&lt;/p>
&lt;p>&lt;code>grep -a &amp;quot;got job&amp;quot; notify_server.log | cut -c -19 | uniq -c&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="innotop">innotop&lt;/h2>
&lt;blockquote>
&lt;p>The monitor tool for mysql&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>login:&lt;code> innotop -uroot -p password&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="history">history&lt;/h2>
&lt;ul>
&lt;li>execute comand by number line: &lt;code>!number&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="scp">scp&lt;/h2>
&lt;ul>
&lt;li>repLocal to server (file): &lt;code>scp path/file username@ip:/where/to/put&lt;/code>&lt;/li>
&lt;li>Local to server (dir): &lt;code>scp -r path/file username@ip:/where/to/put&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>##nohup&lt;/p>
&lt;blockquote>
&lt;p>run a command immune to hangups, with output to a non-tty&lt;/p>
&lt;/blockquote>
&lt;h4 id="keep-process-running-when-ssh-log-out">keep process running when ssh log out&lt;/h4>
&lt;p>&lt;code>nohup command &amp;amp;&lt;/code>&lt;/p>
&lt;h4 id="and-no-nohupout">and no &lt;strong>nohup.out&lt;/strong>&lt;/h4>
&lt;p>&lt;code>nohup command &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/code>&lt;/p>
&lt;h2 id="ps">PS&lt;/h2>
&lt;ul>
&lt;li>To print a process tree: &lt;code>ps axjf&lt;/code> (alse add some grep: &lt;code>ps axjf | grep &amp;quot;keyname&amp;quot;&lt;/code>)&lt;/li>
&lt;/ul>
&lt;h2 id="xargs">xargs&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>list files (exclude some files that you don&amp;rsquo;t want) , then copy to some dictionary&lt;/strong>&lt;/p>
&lt;p>&lt;code>ls -S | grep -E -v 'GPNServer.log*' | xargs cp -r -t ../gpns_backup&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>list process, then get the specific process that you want to kill, then kill&lt;/strong>&lt;/p>
&lt;p>&lt;code>ps aux | grep kafka_2 | grep server | awk {'print$2'} | xargs kill -9&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="find">find&lt;/h2>
&lt;p>&lt;code>find * -name filename&lt;/code>&lt;/p></content></item><item><title>Dynamic Programming</title><link>https://jinying-che.github.io/posts/algorithm/dynamic_programming/</link><pubDate>Sat, 11 Mar 2023 23:03:37 +0800</pubDate><guid>https://jinying-che.github.io/posts/algorithm/dynamic_programming/</guid><description>Dynamic Programming is mainly an optimization over plain recursion. Wherever we see a recursive solution that has repeated calls for the same inputs, we can optimize it using Dynamic Programming. The idea is to simply store the results of subproblems so that we do not have to re-compute them when needed later. This simple optimization reduces time complexities from exponential to polynomial
Two Key Attributes How to classify a problem as a Dynamic Programming algorithm Problem?</description><content>&lt;p>Dynamic Programming is mainly an optimization over plain recursion. Wherever we see a recursive solution that has repeated calls for the same inputs, we can optimize it using Dynamic Programming. The idea is to simply store the results of subproblems so that we do not have to re-compute them when needed later. This simple optimization reduces time complexities from exponential to polynomial&lt;/p>
&lt;h2 id="two-key-attributes">Two Key Attributes&lt;/h2>
&lt;p>How to classify a problem as a Dynamic Programming algorithm Problem?&lt;/p>
&lt;h4 id="1-overlapping-subproblems">1. Overlapping Subproblems&lt;/h4>
&lt;p>The solutions to the same subproblems are needed repetitively for solving the actual problem.&lt;/p>
&lt;h4 id="2-optimal-substructure-property">2. Optimal Substructure Property&lt;/h4>
&lt;p>The solution to a given optimization problem can be obtained by the combination of optimal solutions to its sub-problems. Such optimal substructures are usually described by means of recursion.&lt;/p>
&lt;blockquote>
&lt;p>If a problem can be solved by combining optimal solutions to non-overlapping sub-problems, the strategy is called &amp;ldquo;divide and conquer&amp;rdquo; instead. This is why merge sort and quick sort are not classified as dynamic programming problems.&lt;/p>
&lt;/blockquote>
&lt;h2 id="the-steps-to-resove-the-a-dynamic-programming-problem">The Steps To Resove The A Dynamic Programming Problem&lt;/h2>
&lt;h4 id="1-identify-a-dp-problem-identify-the-subproblems">1. Identify a &lt;strong>DP&lt;/strong> problem, Identify the &lt;strong>subproblems&lt;/strong>&lt;/h4>
&lt;ol>
&lt;li>refer to two key attributes&lt;/li>
&lt;li>transfer the real world probelm to the math model, e.g. &lt;a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/">Best Time to Buy and Sell Stock&lt;/a>, actaully in the math world, which means to find the min and max value of the array, which is a significant dynamic problem flag.&lt;/li>
&lt;/ol>
&lt;h4 id="2-decide-a-state-expression-with-the-least-parameters">2. Decide a state expression with the Least parameters&lt;/h4>
&lt;p>Determine what information you need to represent the solution to each subproblem. This is often done using a state vector or matrix.&lt;/p>
&lt;h4 id="3-formulate-state-and-transition-relationships">3. Formulate state and transition relationships&lt;/h4>
&lt;p>Determine the relationship between the solution to a subproblem and the solutions to its smaller subproblems. This is often done using a recursive formula or a set of rules.&lt;/p>
&lt;h4 id="4-adding-memoization-or-tabulation-for-the-state">4. Adding memoization or tabulation for the state&lt;/h4>
&lt;p>Simply storing the state solution will allow us to access it from memory the next time that state is needed. Solve the subproblems in a bottom-up (tabulation) or top-down (memorization) manner.&lt;/p>
&lt;h4 id="5-compute-the-final-solution-using-the-solutions-to-the-subproblems">5. Compute the final solution using the solutions to the subproblems.&lt;/h4>
&lt;p>TODO: Example&lt;/p>
&lt;h2 id="memoization-vs-tabulation-todo">memoization vs tabulation (TODO)&lt;/h2></content></item><item><title>API Design</title><link>https://jinying-che.github.io/posts/api_design/</link><pubDate>Mon, 13 Feb 2023 22:27:32 +0800</pubDate><guid>https://jinying-che.github.io/posts/api_design/</guid><description>There are some similar technologies as Rest, OpenAPI, gRPC and GraphQL which are popular design or standard or framework that related to API design, meanwhile, they are prone to make people confused for the use case.
Simple Put:
REST is a software architectural and common communication standard. OpenAPI is a specification, which defines a standard, programming language-agnostic interface description for HTTP APIs. gRPC is a high performance Remote Procedure Call (RPC) framework.</description><content>&lt;p>There are some similar technologies as Rest, OpenAPI, gRPC and GraphQL which are popular design or standard or framework that related to API design, meanwhile, they are prone to make people confused for the use case.&lt;/p>
&lt;p>Simple Put:&lt;/p>
&lt;ul>
&lt;li>&lt;code>REST&lt;/code> is a software &lt;strong>architectural&lt;/strong> and common communication &lt;strong>standard&lt;/strong>.&lt;/li>
&lt;li>&lt;code>OpenAPI&lt;/code> is a &lt;strong>specification&lt;/strong>, which defines a standard, programming language-agnostic interface description for HTTP APIs.&lt;/li>
&lt;li>&lt;code>gRPC&lt;/code> is a high performance Remote Procedure Call (RPC) &lt;strong>framework&lt;/strong>.&lt;/li>
&lt;li>&lt;code>GraphQL&lt;/code> is a &lt;strong>query language&lt;/strong> for your API.&lt;/li>
&lt;/ul>
&lt;h2 id="1-rest">1. Rest&lt;/h2>
&lt;p>Representational state transfer (REST) is a software architectural style that describes a uniform interface between physically separate components, often across the Internet in a client-server architecture.&lt;/p>
&lt;p>REST is the most common communication standard between computers over the internet, an API that follows the REST standard is called a RESTful API.&lt;/p>
&lt;h3 id="11-architectural-constraints">1.1 Architectural Constraints&lt;/h3>
&lt;ul>
&lt;li>Client–server architecture&lt;/li>
&lt;li>Statelessness&lt;/li>
&lt;li>Cacheability&lt;/li>
&lt;li>Layered system&lt;/li>
&lt;li>Code on demand (optional)&lt;/li>
&lt;li>Uniform interface&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>refer to &lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer#Architectural_constraints">wikipedia&lt;/a> for more details&lt;/p>
&lt;/blockquote>
&lt;h3 id="12-applied-to-web-services">1.2 Applied to web services&lt;/h3>
&lt;ul>
&lt;li>a base URI, such as &lt;a href="http://api.example.com/">http://api.example.com/&lt;/a>&lt;/li>
&lt;li>standard HTTP methods (e.g., GET, POST, PUT, and DELETE)&lt;/li>
&lt;li>a media type that defines state transition data elements&lt;/li>
&lt;/ul>
&lt;h3 id="13-crud">1.3 CRUD&lt;/h3>
&lt;ul>
&lt;li>POST &amp;ndash;&amp;gt; CREATE &lt;em>(non-idempotent)&lt;/em>&lt;/li>
&lt;li>GET &amp;ndash;&amp;gt; READ &lt;em>(idempotent)&lt;/em>&lt;/li>
&lt;li>PUT &amp;ndash;&amp;gt; UPDATE &lt;em>(idempotent)&lt;/em>&lt;/li>
&lt;li>DELETE &amp;ndash;&amp;gt; DELETE &lt;em>(idempotent)&lt;/em>&lt;/li>
&lt;/ul>
&lt;h3 id="14-version">1.4 Version&lt;/h3>
&lt;p>Versioning allows an implementation to provide backward compatibility so that if we introduce breaking changes from one version to another, consumers get enough time to move to the next version.&lt;/p>
&lt;p>There are many ways to version an API. The most straightforward is to prefix the version before the resource on the URI. For instance:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://shopee.com/v1/products">https://shopee.com/v1/products&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://shopee.com/v2/products">https://shopee.com/v2/products&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="15-example">1.5 Example&lt;/h3>
&lt;p>This API has four endpoints:&lt;/p>
&lt;ul>
&lt;li>POST &lt;code>/users&lt;/code> Creates a new user with the specified name and email.&lt;/li>
&lt;li>GET &lt;code>/users/:id&lt;/code> Retrieves an existing user with the specified ID.&lt;/li>
&lt;li>PUT &lt;code>/users/:id&lt;/code> Updates an existing user with the specified ID.&lt;/li>
&lt;li>DELETE &lt;code>/users/:id&lt;/code> Deletes an existing user with the specified ID.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>POST /users
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;John Smith&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;john@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET /users/:id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PUT /users/:id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;John Smith&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;john@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DELETE /users/:id
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-grpc">2. gRPC&lt;/h2>
&lt;ol>
&lt;li>gPRC is an implementation of Remote Procedure Call (RPC)&lt;/li>
&lt;li>It is modern open source high performance RPC framework that can run in any environment.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>RPC (Remote Procedure Call) is called “remote” because it enables communications between remote services when services are deployed to different servers under microservice architecture. From the user’s point of view, it acts like a local function call.&lt;/p>
&lt;/blockquote>
&lt;h3 id="21-core-concepts">2.1 Core Concepts&lt;/h3>
&lt;ul>
&lt;li>Design service API using &lt;a href="https://developers.google.com/protocol-buffers">protocol buffers&lt;/a> as Interface Definition Language (IDL)&lt;/li>
&lt;li>protocol buffers TODO?&lt;/li>
&lt;li>gRPC builds on &lt;a href="https://www.rfc-editor.org/rfc/rfc7540">HTTP/2&lt;/a> long-lived connections for inter-service communication&lt;/li>
&lt;/ul>
&lt;h3 id="22-overall">2.2 Overall&lt;/h3>
&lt;p>&lt;img src="https://jinying-che.github.io/images/grpc_overall.jpeg" alt="gprc overall">&lt;/p>
&lt;h3 id="23-quick-start">2.3 Quick Start&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://grpc.io/docs/languages/go/quickstart/">https://grpc.io/docs/languages/go/quickstart/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="3-openapi">3. OpenAPI&lt;/h2>
&lt;p>First of all, I&amp;rsquo;d like to recommend to take an overview of some &lt;a href="https://github.com/OAI/OpenAPI-Specification/tree/main/examples">examples&lt;/a> for OpenAPI Spec. For details, can read the &lt;a href="https://swagger.io/docs/specification/basic-structure/">basic structure&lt;/a>&lt;/p>
&lt;ol>
&lt;li>The OpenAPI Specification (OAS) defines an &lt;strong>interface description&lt;/strong> for HTTP APIs&lt;/li>
&lt;li>It&amp;rsquo;s tend to be industry standard&lt;/li>
&lt;li>It&amp;rsquo;s programming language-agnostic&lt;/li>
&lt;li>Both human and computers can understand and discover the capabilities of a service&lt;/li>
&lt;li>It removes the guesswork in calling a service and saves the communication effort&lt;/li>
&lt;li>Consumer can interact the remote service with minimal implementation logic (with the rich &lt;a href="https://openapi.tools">OpenAPI Tools&lt;/a>)&lt;/li>
&lt;li>It boost the &lt;a href="https://swagger.io/resources/articles/adopting-an-api-first-approach/">API driven development&lt;/a>&lt;/li>
&lt;li>It supports Restful API&lt;/li>
&lt;li>The OpenAPI doc are represented in YAML or JSON format which may be produced and served statically or &lt;strong>generated dynamically&lt;/strong> from an application. (e.g. &lt;a href="https://github.com/swaggo/swag">generate RESTful API documentation with Swagger 2.0 for Go&lt;/a>)&lt;/li>
&lt;/ol>
&lt;p>Generally, we would have the best practice in API desgin as long as we follow the OAS and use the related toolset.&lt;/p>
&lt;h3 id="31-what-we-can-do-with-openapi-spec">3.1 What we can do with OpenAPI Spec&lt;/h3>
&lt;ol>
&lt;li>Interactive documentation&lt;/li>
&lt;li>Code generation for documentation, clients, and servers&lt;/li>
&lt;li>automation of test cases&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ol>
&lt;h3 id="32-quick-start">3.2 Quick Start&lt;/h3>
&lt;h4 id="321-api-definition">3.2.1 API Definition&lt;/h4>
&lt;p>API is a contract followed by all stakeholders across the whole organization, traditionally, two main approaches exist when creating OpenAPI documents: Code-first and Design-first.&lt;/p>
&lt;h5 id="design-first">Design First&lt;/h5>
&lt;p>API Design First approach is being more and more pupular to build systems today as it provides many &lt;a href="https://swagger.io/resources/articles/adopting-an-api-first-approach/#the-benefits-of-an-api-first-approach-2">benefits&lt;/a>.&lt;/p>
&lt;p>To design the API from the scratch, we can use &lt;a href="https://swagger.io/tools/swagger-editor/">swagger editor&lt;/a> to create API in an interactive way where you can see if your changes is valid and what they would like in the real time. Personal speaking, learning by doing is the best way to understand and write OpenAPI docs, you can simply import and update the example like &lt;code>Petstore&lt;/code> in the editor and kick off your OpenAPI journey.&lt;/p>
&lt;h5 id="code-first">Code First&lt;/h5>
&lt;p>Code First is possibly adopted by some devs for some fast and easy API building, whereas it&amp;rsquo;s an old school and not recommeded at all, unless you have an exist project which requires to follow the OpenAPI spec after the code has been finished already, with that saying, there are some tools like &lt;a href="https://github.com/go-swagger/go-swagger">go-swagger&lt;/a> to generate OpenAPI documents automatically by parsing code annotations.&lt;/p>
&lt;h4 id="322-code-generation">3.2.2 Code Generation&lt;/h4>
&lt;p>Once we got the standard OpenAPI docs from wherever it&amp;rsquo;s generated from the code or created by any stakeholders, there are some tools for you to generate the code, for example:&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://openapi-generator.tech/">OpenAPI Generator&lt;/a> - A template-driven engine to generate documentation, API clients and server stubs in different languages by parsing your OpenAPI Description (community-driven fork of swagger-codegen)&lt;/p>
&lt;/blockquote>
&lt;h4 id="333-mock-server-and-testing">3.3.3 Mock Server and Testing&lt;/h4>
&lt;p>TBD&lt;/p>
&lt;h2 id="4-reference">4. Reference&lt;/h2>
&lt;h4 id="rest">Rest&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://blog.bytebytego.com/p/why-is-restful-api-so-popular">https://blog.bytebytego.com/p/why-is-restful-api-so-popular&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer">https://en.wikipedia.org/wiki/Representational_state_transfer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/blog/products/api-management/understanding-grpc-openapi-and-rest-and-when-to-use-them">gRPC vs REST: Understanding gRPC, OpenAPI and REST and when to use them in API design&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="grpc">gRPC&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://blog.bytebytego.com/i/84137023/how-does-grpc-work">https://blog.bytebytego.com/i/84137023/how-does-grpc-work&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://grpc.io/blog/grpc-on-http2/">https://grpc.io/blog/grpc-on-http2/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="openapi">OpenAPI&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://spec.openapis.org/oas/v3.1.0">https://spec.openapis.org/oas/v3.1.0&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=uBs6dfUgxcI">Better API Design With OpenAPI&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/OAI/OpenAPI-Specification/">https://github.com/OAI/OpenAPI-Specification/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://swagger.io/resources/articles/adopting-an-api-first-approach/">https://swagger.io/resources/articles/adopting-an-api-first-approach/&lt;/a>&lt;/li>
&lt;li>Examples: &lt;a href="https://github.com/OAI/OpenAPI-Specification/tree/main/examples">https://github.com/OAI/OpenAPI-Specification/tree/main/examples&lt;/a>&lt;/li>
&lt;li>Best Practice: &lt;a href="https://oai.github.io/Documentation/best-practices.html">https://oai.github.io/Documentation/best-practices.html&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Git Cheatsheet</title><link>https://jinying-che.github.io/posts/git_cheatsheet/</link><pubDate>Tue, 31 Jan 2023 16:14:39 +0800</pubDate><guid>https://jinying-che.github.io/posts/git_cheatsheet/</guid><description>Overall Everything about the changes rollback code changed without git add
# `git add .` and `git checkout .` is a pair of inverse operations git checkout . or git reset --hard git add . done without git commit
git reset + git chekcout . or git reset --hard git commit done
# option 1: keep the changes in worksapce, rollback committed chagnes in local repo git reset head^ # option 2: rollback the changes in both workspace and local repo git reset --hard head^ git push done</description><content>&lt;h3 id="overall">Overall&lt;/h3>
&lt;p>&lt;img src="https://jinying-che.github.io/images/git.svg" alt="git architecture">&lt;/p>
&lt;h3 id="everything-about-the-changes-rollback">Everything about the changes rollback&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>code changed without &lt;code>git add&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># `git add .` and `git checkout .` is a pair of inverse operations&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>or
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>git add .&lt;/code> done without &lt;code>git commit&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git reset + git chekcout .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>or
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>git commit&lt;/code> done&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># option 1: keep the changes in worksapce, rollback committed chagnes in local repo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset head^
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># option 2: rollback the changes in both workspace and local repo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard head^
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>git push&lt;/code> done&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># overwrite remote via the local&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard HEAD^
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="how-can-i-see-the-changes-in-a-git-commithttpsstackoverflowcomquestions17563726how-can-i-see-the-changes-in-a-git-commit">&lt;a href="https://stackoverflow.com/questions/17563726/how-can-i-see-the-changes-in-a-git-commit">How can I see the changes in a git commit&lt;/a>?&lt;/h3>
&lt;p>&lt;code>git diff COMMIT~ COMMIT&lt;/code> or &lt;code>git show COMMIT&lt;/code>&lt;/p>
&lt;h3 id="how-to-include-config-directives-from-another-source">How to include config directives from another source?&lt;/h3>
&lt;p>setup a &lt;code>.gitconfig&lt;/code>, &lt;code>.gitconfig-garena&lt;/code>, and &lt;code>.gitconfig-github&lt;/code> at $HOME as follows, all the projects under the folder will be configured recursively:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># .gitconfig&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">includeIf&lt;/span> &lt;span style="color:#e6db74">&amp;#34;gitdir:~/workspace/garena.com/&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">path&lt;/span> = &lt;span style="color:#960050;background-color:#1e0010">~/&lt;/span>.&lt;span style="color:#a6e22e">gitconfig-garena&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">includeIf&lt;/span> &lt;span style="color:#e6db74">&amp;#34;gitdir:~/workspace/github.com/&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">path&lt;/span> = &lt;span style="color:#960050;background-color:#1e0010">~/&lt;/span>.&lt;span style="color:#a6e22e">gitconfig-github&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># .gitconfig-garena&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">user&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#a6e22e">Jinying&lt;/span> &lt;span style="color:#a6e22e">Che&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">email&lt;/span> = &lt;span style="color:#a6e22e">jinying&lt;/span>.&lt;span style="color:#a6e22e">che&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#a6e22e">shopee&lt;/span>.&lt;span style="color:#a6e22e">com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># .gitconfig-github&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">user&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#a6e22e">Jinying&lt;/span> &lt;span style="color:#a6e22e">Che&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">email&lt;/span> = &lt;span style="color:#a6e22e">chejinying&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#a6e22e">me&lt;/span>.&lt;span style="color:#a6e22e">com&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="keep-the-local-changes-delete-the-remote-changes">Keep the local changes, delete the remote changes&lt;/h3>
&lt;p>delete the local cache, push to the remote&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>1. git rm —cache -r directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. git commit -m &lt;span style="color:#e6db74">&amp;#34;del&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3. git pushf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="git-merge-the-update-from-the-forked-project">Git merge the update from the forked project&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>1. git remote add upstream url
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. git fetch upstream
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3. git merge upsteam/master
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># NOTE check the remote brach status:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git remote -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="git-merge-the-file-from-the-other-branch">Git merge the file from the other branch&lt;/h3>
&lt;p>exactly, it&amp;rsquo;s &lt;code>checkout&lt;/code>, pls be reminded that this command will overwrite the local file without merging process&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git checkout branch_name filename
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="overwrite-the-local-via-the-remote">Overwrite the local via the remote&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>1. git fetch --all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. git reset --hard origin/master
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="squash-commits">Squash commits&lt;/h3>
&lt;ol>
&lt;li>&lt;code>git rebase -i commit-version&lt;/code> (which is earlist one that squash beginning from)&lt;/li>
&lt;li>change &lt;code>pick&lt;/code> to &lt;code>s&lt;/code>(squash) manually by edting the file, leave the first &lt;code>pick&lt;/code>, then &lt;code>:wq&lt;/code>(for vim)&lt;/li>
&lt;li>Edit the commit message, leave the msg for the final commiting, then&lt;code>:wq&lt;/code>(for vim)&lt;/li>
&lt;/ol>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.fengerzh.com/git-reset/">https://www.fengerzh.com/git-reset/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Python Cheatsheet</title><link>https://jinying-che.github.io/posts/python/python_cheatsheet/</link><pubDate>Tue, 31 Jan 2023 11:40:49 +0800</pubDate><guid>https://jinying-che.github.io/posts/python/python_cheatsheet/</guid><description>Pass By Reference Python passes arguments neither by reference nor by value, but by assignment. The parameter passed in is actually a reference to an object (but the reference is passed by value)
def main(): n = 9001 print(f&amp;#34;[main] before n: {hex(id(n))} # same&amp;#34;) increment(n) print(f&amp;#34;[main] after n: {hex(id(n))} # same&amp;#34;) def increment(x): print(f&amp;#34;[func] before x: {hex(id(x))} # same&amp;#34;) x += 1 print(f&amp;#34;[func] after x: {hex(id(x))} # address altered after the assignment&amp;#34;) main() # output [main] before n: 0x11035a0b0 # same [func] before x: 0x11035a0b0 # same [func] after x: 0x11035a190 # address altered after the assignment [main] after n: 0x11035a0b0 # same Mutability, an object is mutable if its structure can be changed in place rather than requiring reassignment.</description><content>&lt;h3 id="pass-by-reference">Pass By Reference&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Python passes arguments neither by reference nor by value, but by assignment. The parameter passed in is actually a reference to an object (but the reference is passed by value)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">9001&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[main] before n: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(n))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # same&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> increment(n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[main] after n: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(n))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # same&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">increment&lt;/span>(x):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[func] before x: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(x))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # same&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[func] after x: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(x))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # address altered after the assignment&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>main()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[main] before n: &lt;span style="color:#ae81ff">0x11035a0b0&lt;/span> &lt;span style="color:#75715e"># same&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[func] before x: &lt;span style="color:#ae81ff">0x11035a0b0&lt;/span> &lt;span style="color:#75715e"># same&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[func] after x: &lt;span style="color:#ae81ff">0x11035a190&lt;/span> &lt;span style="color:#75715e"># address altered after the assignment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[main] after n: &lt;span style="color:#ae81ff">0x11035a0b0&lt;/span> &lt;span style="color:#75715e"># same&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Mutability, an object is &lt;strong>mutable&lt;/strong> if its structure can be changed in place rather than requiring reassignment.&lt;/p>
&lt;blockquote>
&lt;p>If you pass a mutable object into a method, the method gets a reference to that same object and you can mutate it to your heart&amp;rsquo;s delight, but if you rebind the reference in the method, the outer scope will know nothing about it, and after you&amp;rsquo;re done, the outer reference will still point at the original object.&lt;/p>
&lt;/blockquote>
&lt;p>The followings are the mutable objects in Python:&lt;/p>
&lt;ul>
&lt;li>Dictionary
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Dictionaries are mapping types.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mt &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;n&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">4&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Define a function to operate on a key:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">square&lt;/span>(num_dict):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> num_dict[&lt;span style="color:#e6db74">&amp;#34;n&amp;#34;&lt;/span>] &lt;span style="color:#f92672">*=&lt;/span> num_dict[&lt;span style="color:#e6db74">&amp;#34;n&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>square(mt)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># output: 16&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>List
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Lists are both subscriptable and mutable.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sm &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">4&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Define a function to operate on an index:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">square&lt;/span>(num_list):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> num_list[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">*=&lt;/span> num_list[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>square(sm)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># output: [16]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Object Attributes
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># For the purpose of this example, let&amp;#39;s use SimpleNamespace.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> types &lt;span style="color:#f92672">import&lt;/span> SimpleNamespace
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SimpleNamespace allows us to set arbitrary attributes.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># It is an explicit, handy replacement for &amp;#34;class X: pass&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ns &lt;span style="color:#f92672">=&lt;/span> SimpleNamespace()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Define a function to operate on an object&amp;#39;s attribute.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">square&lt;/span>(instance):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> instance&lt;span style="color:#f92672">.&lt;/span>n &lt;span style="color:#f92672">*=&lt;/span> instance&lt;span style="color:#f92672">.&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ns&lt;span style="color:#f92672">.&lt;/span>n &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>square(ns)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ns&lt;span style="color:#f92672">.&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># output: 16&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="reference">Reference&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://realpython.com/python-pass-by-reference/#toc">Pass by Reference in Python: Background and Best Practices&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.python.org/3/faq/programming.html#how-do-i-write-a-function-with-output-parameters-call-by-reference">How do I write a function with output parameters (call by reference)?&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Iptables</title><link>https://jinying-che.github.io/posts/network/iptables/</link><pubDate>Thu, 26 Jan 2023 16:22:21 +0800</pubDate><guid>https://jinying-che.github.io/posts/network/iptables/</guid><description>iptables is a user-space utility program that allows a system administrator to configure the IP packet filter rules of the Linux kernel firewall, implemented as different Netfilter modules. The filters are organized in different tables, which contain chains of rules for how to treat network traffic packets.
In a nutshell: Relationship: Tables -&amp;gt; Chains -&amp;gt; Rules Tables There are five tables, the Priority is: filter, nat, mangle, raw, security
https://www.thegeekstuff.com/2011/01/iptables-fundamentals/ https://linux.</description><content>&lt;p>iptables is a user-space utility program that allows a system administrator to configure the IP packet filter rules of the Linux kernel firewall, implemented as different &lt;a href="https://www.netfilter.org/">Netfilter&lt;/a> modules. The filters are organized in different tables, which contain chains of rules for how to treat network traffic packets.&lt;/p>
&lt;h2 id="in-a-nutshell">In a nutshell:&lt;/h2>
&lt;ul>
&lt;li>Relationship: Tables -&amp;gt; Chains -&amp;gt; Rules
&lt;img src="https://jinying-che.github.io/images/iptable.png" alt="package flow through iptables">&lt;/li>
&lt;/ul>
&lt;h2 id="tables">Tables&lt;/h2>
&lt;p>There are five tables, the &lt;em>Priority&lt;/em> is: &lt;strong>filter, nat, mangle, raw, security&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://www.thegeekstuff.com/2011/01/iptables-fundamentals/">https://www.thegeekstuff.com/2011/01/iptables-fundamentals/&lt;/a>
&lt;a href="https://linux.die.net/man/8/iptables">https://linux.die.net/man/8/iptables&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># show filter table by default&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iptables -L -v -n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># which is equal to &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iptables -t filter -L -v -n
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="chains">Chains&lt;/h2>
&lt;p>There are five predefined chains (mapping to the five available Netfilter hooks), though a table may not have all chains.&lt;/p>
&lt;ul>
&lt;li>PREROUTING: Packets will enter this chain before a routing decision is made.&lt;/li>
&lt;li>INPUT: Packet is going to be locally delivered. It does not have anything to do with processes having an opened socket; local delivery is controlled by the &amp;ldquo;local-delivery&amp;rdquo; routing table: ip route show table local.&lt;/li>
&lt;li>FORWARD: All packets that have been routed and were not for local delivery will traverse this chain.&lt;/li>
&lt;li>OUTPUT: Packets sent from the machine itself will be visiting this chain.&lt;/li>
&lt;li>POSTROUTING: Routing decision has been made. Packets enter this chain just before handing them off to the hardware.&lt;/li>
&lt;/ul>
&lt;p>The system administrator can create as many other chains as desired.&lt;/p>
&lt;h2 id="rules">Rules&lt;/h2>
&lt;ul>
&lt;li>ACCEPT – Firewall will accept the packet.&lt;/li>
&lt;li>DROP – Firewall will drop the packet.&lt;/li>
&lt;li>QUEUE – Firewall will pass the packet to the userspace.&lt;/li>
&lt;li>RETURN – Firewall will stop executing the next set of rules in the current chain for this packet. The control will be returned to the calling chain.&lt;/li>
&lt;/ul>
&lt;h2 id="cheat-sheet">Cheat Sheet&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># drop ip packet:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># modify the filter table, insert the rule DROP into the INPUT chain at the specific number (1 by default)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -A means append the rule at the end of the chain&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo iptables -I INPUT -s 10.129.106.98 -j DROP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># delele drop ip packet &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo iptables -D INPUT -s 10.129.106.98 -j DROP
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.netfilter.org/documentation/HOWTO/netfilter-hacking-HOWTO-3.html">https://www.netfilter.org/documentation/HOWTO/netfilter-hacking-HOWTO-3.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://lartc.org/">Linux Advanced Routing &amp;amp; Traffic Control How To&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.docker.com/network/iptables/">https://docs.docker.com/network/iptables/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.linode.com/docs/guides/control-network-traffic-with-iptables/">https://www.linode.com/docs/guides/control-network-traffic-with-iptables/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cyberciti.biz/faq/linux-iptables-drop/">https://www.cyberciti.biz/faq/linux-iptables-drop/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Container Networking</title><link>https://jinying-che.github.io/posts/network/container_networking/</link><pubDate>Thu, 26 Aug 2021 10:27:13 +0800</pubDate><guid>https://jinying-che.github.io/posts/network/container_networking/</guid><description>Before VETH The veth devices are virtual Ethernet devices. They can act as tunnels between network namespaces to create a bridge to a physical network device in another namespace, but can also be used as standalone network devices.
veth device pairs are useful for combining the network facilities of the kernel together in interesting ways. A particularly interesting use case is to place one end of a veth pair in one network namespace and the other end in another network namespace, thus allowing communication between network namespaces.</description><content>&lt;h1 id="before">Before&lt;/h1>
&lt;hr>
&lt;h3 id="veth">VETH&lt;/h3>
&lt;p>The veth devices are virtual Ethernet devices. They can act as tunnels between network namespaces to create a bridge to a physical network device in another namespace, but can also be used as standalone network devices.&lt;/p>
&lt;p>veth device pairs are useful for combining the network facilities of the kernel together in interesting ways. A particularly interesting use case is to place one end of a veth pair in one network namespace and the other end in another network namespace, thus allowing communication between network namespaces.&lt;/p>
&lt;h3 id="bridge">Bridge&lt;/h3>
&lt;p>A Linux bridge behaves like a network switch. It forwards packets between interfaces that are connected to it.&lt;/p>
&lt;p>It&amp;rsquo;s usually used for forwarding packets on routers, on gateways, or between VMs and network namespaces on a host.
It also supports STP, VLAN filter, and multicast snooping.&lt;/p>
&lt;h3 id="iptables">Iptables&lt;/h3>
&lt;p>iptables is a user-space utility program that allows a system administrator to configure the IP packet filter rules of the Linux kernel firewall, implemented as different &lt;a href="https://www.netfilter.org/">Netfilter&lt;/a> modules. The filters are organized in different tables, which contain chains of rules for how to treat network traffic packets.&lt;/p>
&lt;p>For details, pls refer to another &lt;a href="https://jinying-che.github.io/posts/network/iptables/">blog&lt;/a>&lt;/p>
&lt;h1 id="bridge-networking">Bridge Networking&lt;/h1>
&lt;h1 id="calico-networking">Calico Networking&lt;/h1>
&lt;h2 id="reference">Reference:&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man4/veth.4.html">https://man7.org/linux/man-pages/man4/veth.4.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking">https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/mz1999/blog/blob/master/docs/docker-network-bridge.md">https://github.com/mz1999/blog/blob/master/docs/docker-network-bridge.md&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://time.geekbang.org/column/article/64948?cid=100015201">https://time.geekbang.org/column/article/64948?cid=100015201&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Iptables">https://en.wikipedia.org/wiki/Iptables&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Vim Cheat Sheet</title><link>https://jinying-che.github.io/posts/vim/</link><pubDate>Sat, 10 Jul 2021 11:20:07 +0800</pubDate><guid>https://jinying-che.github.io/posts/vim/</guid><description>Basic Usage delete inside parentheses (which can be replaced with any symbol) di( di&amp;quot; di' &amp;hellip; Split Horizontal: ctrl + w + s Vertical: ctrl + w + v Replace a word with yanked text yiw Yank inner word (copy word under cursor, say &amp;#34;first&amp;#34;). Move the cursor to another word (say &amp;#34;second&amp;#34;). ciw Ctrl-R 0 Esc Change &amp;#34;second&amp;#34;, replacing it with &amp;#34;first&amp;#34;. (Ctrl-R: paste `0` register in insert mode) Move the cursor to another word (say &amp;#34;third&amp;#34;).</description><content>&lt;h3 id="basic-usage">Basic Usage&lt;/h3>
&lt;ul>
&lt;li>delete inside parentheses (which can be replaced with any symbol)
&lt;ul>
&lt;li>&lt;code>di(&lt;/code>&lt;/li>
&lt;li>&lt;code>di&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>di'&lt;/code>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="split">Split&lt;/h3>
&lt;ul>
&lt;li>Horizontal: &lt;code>ctrl + w + s&lt;/code>&lt;/li>
&lt;li>Vertical: &lt;code>ctrl + w + v&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="replace-a-word-with-yanked-text">Replace a word with yanked text&lt;/h3>
&lt;pre tabindex="0">&lt;code>yiw Yank inner word (copy word under cursor, say &amp;#34;first&amp;#34;).
Move the cursor to another word (say &amp;#34;second&amp;#34;).
ciw Ctrl-R 0 Esc Change &amp;#34;second&amp;#34;, replacing it with &amp;#34;first&amp;#34;. (Ctrl-R: paste `0` register in insert mode)
Move the cursor to another word (say &amp;#34;third&amp;#34;).
. Repeat the operation (change word and replace it with &amp;#34;first&amp;#34;).
Move the cursor to another word and press . to repeat the change.
ref: https://vim.fandom.com/wiki/Replace_a_word_with_yanked_text
&lt;/code>&lt;/pre></content></item><item><title>Tmux Cheat Sheet</title><link>https://jinying-che.github.io/posts/tmux/</link><pubDate>Sat, 10 Jul 2021 11:18:14 +0800</pubDate><guid>https://jinying-che.github.io/posts/tmux/</guid><description>Session new session: tmux new -s name show session: tmux ls attach session with name: tmux a -t name detach from session: ctrl+b then d Panes split pane horizontally: ctrl+b then % split pane vertically: ctrl+b then &amp;quot; cloes current pane: ctrl+b then x swap panes: ctrl+b then o swan and rotate panes: ctrl+b then ctrl+o Window Create current window: ctrl+b then c Close current window: ctrl+b then &amp;amp; Rename current window: ctrl+b then , Next window: ctrl+b then p Previous window: ctrl+b then n View in tmux ctrl+b then [</description><content>&lt;h3 id="session">Session&lt;/h3>
&lt;ul>
&lt;li>new session: &lt;code>tmux new -s name&lt;/code>&lt;/li>
&lt;li>show session: &lt;code>tmux ls&lt;/code>&lt;/li>
&lt;li>attach session with name: &lt;code>tmux a -t name&lt;/code>&lt;/li>
&lt;li>detach from session: &lt;code>ctrl+b&lt;/code> then &lt;code>d&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="panes">Panes&lt;/h3>
&lt;ul>
&lt;li>split pane horizontally: &lt;code>ctrl+b&lt;/code> then &lt;code>%&lt;/code>&lt;/li>
&lt;li>split pane vertically: &lt;code>ctrl+b&lt;/code> then &lt;code>&amp;quot;&lt;/code>&lt;/li>
&lt;li>cloes current pane: &lt;code>ctrl+b&lt;/code> then &lt;code>x&lt;/code>&lt;/li>
&lt;li>swap panes: &lt;code>ctrl+b&lt;/code> then &lt;code>o&lt;/code>&lt;/li>
&lt;li>swan and rotate panes: &lt;code>ctrl+b&lt;/code> then &lt;code>ctrl+o&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="window">Window&lt;/h3>
&lt;ul>
&lt;li>Create current window: &lt;code>ctrl+b&lt;/code> then &lt;code>c&lt;/code>&lt;/li>
&lt;li>Close current window: &lt;code>ctrl+b&lt;/code> then &lt;code>&amp;amp;&lt;/code>&lt;/li>
&lt;li>Rename current window: &lt;code>ctrl+b&lt;/code> then &lt;code>,&lt;/code>&lt;/li>
&lt;li>Next window: &lt;code>ctrl+b&lt;/code> then &lt;code>p&lt;/code>&lt;/li>
&lt;li>Previous window: &lt;code>ctrl+b&lt;/code> then &lt;code>n&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="view-in-tmux">View in tmux&lt;/h3>
&lt;p>&lt;code>ctrl+b&lt;/code> then &lt;code>[&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>The better way to use tmux is to customize in your way, feel free to refer my &lt;a href="https://github.com/jinying-che/config/blob/master/.tmux.conf">tmux config&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>Reference&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://tmuxcheatsheet.com/">https://tmuxcheatsheet.com/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Golang Standard Library</title><link>https://jinying-che.github.io/posts/go/go_std/</link><pubDate>Sun, 27 Jun 2021 17:34:13 +0800</pubDate><guid>https://jinying-che.github.io/posts/go/go_std/</guid><description>&lt;p>Dive into golang standard library, where we can learn how high quality code is written and what the golang convention and style is.&lt;/p></description><content>&lt;p>Dive into golang standard library, where we can learn how high quality code is written and what the golang convention and style is.&lt;/p>
&lt;h3 id="syncwaitgroup">sync.WaitGroup&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// go version 1.18rc1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">WaitGroup&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">noCopy&lt;/span> &lt;span style="color:#a6e22e">noCopy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 64-bit value: high 32 bits are counter, low 32 bits are waiter count.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 64-bit atomic operations require 64-bit alignment, but 32-bit
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// compilers only guarantee that 64-bit fields are 32-bit aligned.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// For this reason on 32 bit architectures we need to check in state()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// if state1 is aligned or not, and dynamically &amp;#34;swap&amp;#34; the field order if
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// needed.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">state1&lt;/span> &lt;span style="color:#66d9ef">uint64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">state2&lt;/span> &lt;span style="color:#66d9ef">uint32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://jinying-che.github.io/images/wait_group.png" alt="wait group state byte representation">&lt;/p>
&lt;p>It&amp;rsquo;s based on golang &lt;strong>semaphore&lt;/strong> model, implemented by &lt;code>runtime_Semrelease&lt;/code> and &lt;code>runtime_Semacquire&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>semaphore is common mechanism used in concurrent progamming, like &lt;a href="https://en.wikipedia.org/wiki/Readers%E2%80%93writers_problem">Readers–writers problem&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>Here is an example demostrating how it works, there are three tasks added, one task is done before &lt;code>Wait()&lt;/code>, the other two are done after &lt;code>Wait()&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;code>Add()&lt;/code> increases or decreases the counter, only reset waiter to 0 when waiter != 0 (which means &lt;code>Wait&lt;/code> has already been called then) and release the semaphore.&lt;/li>
&lt;li>&lt;code>Wait()&lt;/code> increases the waiter and try to acquire the semaphore.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://jinying-che.github.io/images/wait_group_case.png" alt="wait group case">&lt;/p>
&lt;h3 id="syncpool">sync.Pool&lt;/h3></content></item><item><title>HHKB</title><link>https://jinying-che.github.io/posts/hhkb/</link><pubDate>Thu, 24 Jun 2021 21:20:23 +0800</pubDate><guid>https://jinying-che.github.io/posts/hhkb/</guid><description>CheatSheet BS and Delete Win mode: Fn+Control+w Mac mode: Fn+Control+m</description><content>&lt;h4 id="cheatsheet">CheatSheet&lt;/h4>
&lt;ul>
&lt;li>BS and Delete
&lt;ul>
&lt;li>Win mode: &lt;code>Fn+Control+w&lt;/code>&lt;/li>
&lt;li>Mac mode: &lt;code>Fn+Control+m&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://jinying-che.github.io/images/hhkb.png" alt="KKHB CheatSheet">&lt;/p></content></item><item><title>Setup Shadowsocks Server And Client</title><link>https://jinying-che.github.io/posts/shadowsocks/</link><pubDate>Fri, 23 Apr 2021 09:22:08 +0800</pubDate><guid>https://jinying-che.github.io/posts/shadowsocks/</guid><description>&lt;p>In this article, we will setup the Shadowsock Server and Client from scratch and solve the issue during and after the setup.&lt;/p></description><content>&lt;p>In this article, we will setup the Shadowsock Server and Client from scratch and solve the issue during and after the setup.&lt;/p>
&lt;h2 id="shadowsocks-server">Shadowsocks Server&lt;/h2>
&lt;hr>
&lt;p>Install the latest &lt;code>Ubuntu&lt;/code> in vps, my vps provier is &lt;a href="https://bandwagonhost.com/index.php">https://bandwagonhost.com/index.php&lt;/a>, the route is: &lt;em>My Service &amp;gt; KiwiVM Control Panel &amp;gt; Install new OS&lt;/em>&lt;/p>
&lt;h3 id="1-installing-shadowsocks-libev">1. Installing Shadowsocks-libev&lt;/h3>
&lt;h4 id="install-snaphttpssnapcraftioabout">Install &lt;a href="https://snapcraft.io/about">Snap&lt;/a>&lt;/h4>
&lt;pre tabindex="0">&lt;code>$ sudo apt update
$ sudo apt install snapd
$ sudo reboot
&lt;/code>&lt;/pre>&lt;h4 id="install-shadowsocks-libevhttpsgithubcomshadowsocksshadowsocks-libev">Install &lt;a href="https://github.com/shadowsocks/shadowsocks-libev">Shadowsocks-libev&lt;/a>&lt;/h4>
&lt;pre tabindex="0">&lt;code>$ sudo snap install shadowsocks-libev
&lt;/code>&lt;/pre>&lt;h3 id="2-configuring-proxy-server">2. Configuring proxy server&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># first time to use snap, this path should be the config convention of Snap apps &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mkdir -p /var/snap/shadowsocks-libev/common/etc/shadowsocks-libev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo vim /var/snap/shadowsocks-libev/common/etc/shadowsocks-libev/config.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="configjson">config.json&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;server&amp;#34;&lt;/span>:[&lt;span style="color:#e6db74">&amp;#34;::0&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;0.0.0.0&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;server_port&amp;#34;&lt;/span>:&lt;span style="color:#ae81ff">4443&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;password&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;your password&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;timeout&amp;#34;&lt;/span>:&lt;span style="color:#ae81ff">300&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;method&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;aes-256-gcm&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;nameserver&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;1.1.1.1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;mode&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;tcp_and_udp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note&lt;/strong>: &amp;ldquo;server&amp;rdquo;:[&amp;quot;::0&amp;quot;, &amp;ldquo;0.0.0.0&amp;rdquo;] &amp;ndash;&amp;gt; support IPv4 and IPv6&lt;/p>
&lt;h3 id="3-creating-systemd-service-unit-config">3. Creating systemd service unit config&lt;/h3>
&lt;h4 id="shadowsocks-libev-serverservice">shadowsocks-libev-server@.service&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ sudo vim /etc/systemd/system/shadowsocks-libev-server@.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Unit&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Description&lt;span style="color:#f92672">=&lt;/span>Shadowsocks-Libev Custom Server Service &lt;span style="color:#66d9ef">for&lt;/span> %I
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Documentation&lt;span style="color:#f92672">=&lt;/span>man:ss-server&lt;span style="color:#f92672">(&lt;/span>1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>After&lt;span style="color:#f92672">=&lt;/span>network-online.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>StartLimitIntervalSec&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">500&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>StartLimitBurst&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Service&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Type&lt;span style="color:#f92672">=&lt;/span>simple
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Restart&lt;span style="color:#f92672">=&lt;/span>always
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RestartSec&lt;span style="color:#f92672">=&lt;/span>5s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecStart&lt;span style="color:#f92672">=&lt;/span>/usr/bin/snap run shadowsocks-libev.ss-server -c /var/snap/shadowsocks-libev/common/etc/shadowsocks-libev/%i.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Install&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WantedBy&lt;span style="color:#f92672">=&lt;/span>multi-user.target
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Two things to take note:&lt;/p>
&lt;ul>
&lt;li>&lt;code>shadowsocks-libev-server@.service&lt;/code> is a filename (&lt;em>systemd style&lt;/em>)&lt;/li>
&lt;li>&lt;code>man systemd.service&lt;/code> to understand the details, btw it&amp;rsquo;s better to set &lt;code>Restart=always&lt;/code> if you prefer the log-term running&lt;/li>
&lt;/ul>
&lt;p>Start the service and make it managed by systemd&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Note that the @config is used to select the configuration file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo systemctl enable --now shadowsocks-libev-server@config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-troubleshooting">4. Troubleshooting&lt;/h3>
&lt;h4 id="command">Command&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Status&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo systemctl status shadowsocks-libev-server@config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Log&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Check the certain process that managed by systemd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># journalctl is a command for viewing logs collected by systemd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ journalctl -u shadowsocks-libev-server@config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Check all the processes log&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cd /var/log/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ less syslog &lt;span style="color:#75715e"># can check any related log, TBD&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="cases">Cases&lt;/h4>
&lt;h5 id="process-stopped-unexpectedly">Process stopped unexpectedly&lt;/h5>
&lt;ul>
&lt;li>Root Cause: process that managed by systemd will stop when user exit the session&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;a href="https://github.com/systemd/systemd/issues/8486">https://github.com/systemd/systemd/issues/8486&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>Fix: &lt;code>loginctl enable-linger&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="shadowsocks-client">Shadowsocks Client&lt;/h2>
&lt;hr>
&lt;h3 id="chrome">Chrome&lt;/h3>
&lt;p>Enable the socks5 proxy for Chrome in macOS&lt;/p>
&lt;ol>
&lt;li>&lt;code>brew install shadowsocks-libev&lt;/code>&lt;/li>
&lt;li>run &lt;code>ss-local -h&lt;/code> to understand how to setup shadowsocks client locally, for example:
&lt;ul>
&lt;li>&lt;code>ss-local -s server_ip -p port -k password -m aes-256-cfb -l 1081 -v&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>install and setup SwitchyOmeg for Chrome:&lt;/li>
&lt;li>import &lt;a href="https://shadowsockshelp.github.io/Shadowsocks/Chrome.html">GFW List&lt;/a> and enable the auto-switch&lt;/li>
&lt;/ol>
&lt;h3 id="global-terminal">Global (Terminal)&lt;/h3>
&lt;p>Some request from termial or other Apps are supposed to go through the socks5 tunnel as well, the following steps will forward the traffic to the local port that listened by the shadowsocks client:&lt;/p>
&lt;ol>
&lt;li>setup helper function in bash or zsh profile, so that it&amp;rsquo;s able to control the proxy manually in the current terminal session via &lt;code>proxy-on&lt;/code> or &lt;code>proxy-off&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> proxy-off&lt;span style="color:#f92672">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unset http_proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unset https_proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;proxy off&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> proxy-on&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export no_proxy&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;localhost,127.0.0.1,localaddress,.localdomain.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export http_proxy&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;socks5://127.0.0.1:1081&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export https_proxy&lt;span style="color:#f92672">=&lt;/span>$http_proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;proxy on: &lt;/span>$http_proxy&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>run &lt;code>ss-local ... -v&lt;/code>&lt;/li>
&lt;li>test via &lt;code>curl cip.cc&lt;/code> or &lt;code>curl ifconfig.me&lt;/code>, by right the ip that running shadowsocks server should be printed&lt;/li>
&lt;/ol>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.freedesktop.org/software/systemd/man/systemd.service.html">systemd config&lt;/a> or check by &lt;code>man systemd.service&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://www.linuxbabe.com/ubuntu/shadowsocks-libev-proxy-server-ubuntu">https://www.linuxbabe.com/ubuntu/shadowsocks-libev-proxy-server-ubuntu&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://upcloud.com/community/tutorials/install-shadowsocks-libev-socks5-proxy/">https://upcloud.com/community/tutorials/install-shadowsocks-libev-socks5-proxy/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://unix.stackexchange.com/questions/225401/how-to-see-full-log-from-systemctl-status-service">https://unix.stackexchange.com/questions/225401/how-to-see-full-log-from-systemctl-status-service&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://shadowsockshelp.github.io/Shadowsocks/Chrome.html">https://shadowsockshelp.github.io/Shadowsocks/Chrome.html&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Brief Introduction of Network Hardware</title><link>https://jinying-che.github.io/posts/network/hardware/</link><pubDate>Mon, 05 Apr 2021 23:11:29 +0800</pubDate><guid>https://jinying-che.github.io/posts/network/hardware/</guid><description>&lt;p>The hardware inlucded in this post are Hub, Switch, Router, Modem, AP&lt;/p></description><content>&lt;p>The hardware inlucded in this post are Hub, Switch, Router, Modem, AP&lt;/p>
&lt;h4 id="hub-and-switch">Hub and Switch&lt;/h4>
&lt;p>The purpose of both is to connect the internal network (LAN), they do not know IP&lt;/p>
&lt;h5 id="hub">Hub&lt;/h5>
&lt;ul>
&lt;li>It is not intelligent, what it knows is only the ports and the devices that is connected to the ports&lt;/li>
&lt;li>It does not filter any data or has intelligence as to where the data is supposed to be sent&lt;/li>
&lt;li>When a data packet comes into one port, it will rebroadcast the data to every port that has a device connected to it&lt;/li>
&lt;li>It operates at the &lt;a href="https://en.wikipedia.org/wiki/OSI_model#Layer_1:_Physical_Layer">Physical Layer of OSI&lt;/a>&lt;/li>
&lt;/ul>
&lt;h5 id="switch">Switch&lt;/h5>
&lt;ul>
&lt;li>It&amp;rsquo;s intelligent and able to learn physical(MAC) address of devices that are connected to it&lt;/li>
&lt;li>When a data packet is sent to a switch, it&amp;rsquo;s only directed to the intended destination port&lt;/li>
&lt;li>It operates at the &lt;a href="https://en.wikipedia.org/wiki/OSI_model#Layer_2:_Data_Link_Layer">Data Link Layer of OSI&lt;/a> (not including the &lt;strong>multilayer&lt;/strong> switch)&lt;/li>
&lt;/ul>
&lt;h4 id="router">Router&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>It routes or forwards data from network to another base on IP address&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It&amp;rsquo;s the &lt;strong>Gateway&lt;/strong> of a network, it detemines if the packet was meant for it&amp;rsquo;s own network&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It normally works at the &lt;a href="https://en.wikipedia.org/wiki/OSI_model#Layer_3:_Network_Layer">Network layer of OSI&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://jinying-che.github.io/images/hub_switch_router.png" alt="Hub vs Switch vs Router">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="modem">Modem&lt;/h4>
&lt;p>Modems (modulators-demodulators) are used to transmit digital signals over analog telephone lines&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Modulators: it modulates &lt;strong>outgoing&lt;/strong> digital signals into an analog signal&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Demodulator: it demodulate &lt;strong>incoming&lt;/strong> analog signals into a digital signal&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Modems work on both the Physical and Data Link layers.&lt;/p>
&lt;p>&lt;img src="https://jinying-che.github.io/images/modem.png" alt="Modem">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="access-point">Access Point&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>A Wireless AP relays data &lt;strong>a wired network&lt;/strong> and &lt;strong>wireless devices&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It&amp;rsquo;s basically wireless &lt;strong>hub&lt;/strong> or &lt;strong>bridge&lt;/strong> that&amp;rsquo;s used by wireless device to connect to an existing wired network&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A Wireless AP connects directly to an organization&amp;rsquo;s router where the router is connected directly to a modem, which gives the wireless device access to the internet&lt;/p>
&lt;/li>
&lt;li>
&lt;p>An AP works at the second OSI layer, the Data Link layer&lt;/p>
&lt;p>&lt;img src="https://jinying-che.github.io/images/ap.png" alt="Wireless Access Point">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="reference">Reference:&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://blog.netwrix.com/2019/01/08/network-devices-explained/">https://blog.netwrix.com/2019/01/08/network-devices-explained/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Ethernet_hub">https://en.wikipedia.org/wiki/Ethernet_hub&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/OSI_model">https://en.wikipedia.org/wiki/OSI_model&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=OxiY4yf6GGg">https://www.youtube.com/watch?v=OxiY4yf6GGg&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=Mad4kQ5835Y">https://www.youtube.com/watch?v=Mad4kQ5835Y&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=1z0ULvg_pW8">https://www.youtube.com/watch?v=1z0ULvg_pW8&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Algorithm: How I leetcode</title><link>https://jinying-che.github.io/posts/algorithm/leetcode/</link><pubDate>Sat, 13 Feb 2021 16:31:28 +0800</pubDate><guid>https://jinying-che.github.io/posts/algorithm/leetcode/</guid><description>When do you play with leetcode? Personally, I open it only before the algorithm interview.
It&amp;rsquo;s wrong actually, the algorithm is not only used in the interview but also really useful in the production, which also make you write the effective code in the daily work. Leetcode helps interview a lot indeed, I sometimes can see some guys who get the Google offer by leetcode, moreover, I believe more algorithm we learned better engineer we can be.</description><content>&lt;p>When do you play with &lt;a href="https://leetcode.com/">leetcode&lt;/a>? Personally, I open it only before the algorithm interview.&lt;/p>
&lt;p>It&amp;rsquo;s wrong actually, the algorithm is not only used in the interview but also really useful in the production, which also make you write the effective code in the daily work. Leetcode helps interview a lot indeed, I sometimes can see some guys who get the Google offer by leetcode, moreover, I believe more algorithm we learned better engineer we can be.&lt;/p>
&lt;p>This post is showing that how I leetcode, it&amp;rsquo;s only my personal approach, I usually try to understand the one algorithm completely, then try to search by tag and resolve the problems from easy to hard.&lt;/p>
&lt;p>Enjoy the Algorithm, let&amp;rsquo;s leetcode!&lt;/p>
&lt;h3 id="data-structure">Data Structure&lt;/h3>
&lt;h4 id="array">Array&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/first-missing-positive/">41. First Missing Positive&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/first-missing-positive/discuss/1076050/Golang41one-general-way-on-geek-way">discussion&lt;/a>]&lt;/li>
&lt;/ul>
&lt;h4 id="linked-list">Linked List&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/reverse-linked-list/">206. Reverse Linked List&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/reverse-linked-list/discuss/1057045/golang206recursion-is-beautiful">discussion&lt;/a>]&lt;/li>
&lt;/ul>
&lt;h4 id="tree">Tree&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/invert-binary-tree/">226. Invert Binary Tree&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/maximum-depth-of-binary-tree/">104. maximum-depth-of-binary-tree&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;blockquote>
&lt;p>The solutions for following three problems are similiar, which all base on the inorder traversal with stack&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/validate-binary-search-tree/discuss/32112/Learn-one-iterative-inorder-traversal-apply-it-to-multiple-tree-questions-(Java-Solution)">Discussion - Learn one iterative inorder traversal, apply it to multiple tree questions (Java Solution)&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/binary-tree-inorder-traversal/">94. Binary Tree Inorder Traversal&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/validate-binary-search-tree/">98. Validate Binary Search Tree&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/kth-smallest-element-in-a-bst/">230. Kth Smallest Element in a BST&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="heap">Heap&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/top-k-frequent-elements/">347. Top K Frequent Elements&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/top-k-frequent-elements/discuss/1108972/Golang347-Implement-the-Min-Heap-on-my-own">disscussion: Implement the Min Heap on my own&lt;/a>]&lt;/li>
&lt;/ul>
&lt;h3 id="algorithm">Algorithm&lt;/h3>
&lt;h4 id="recursion">Recursion&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/reverse-linked-list/">206. Reverse Linked List&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/reverse-linked-list/discuss/1057045/golang206recursion-is-beautiful">discussion&lt;/a>]&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/fibonacci-number/">509. Fibonacci Number&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/fibonacci-number/discuss/1057880/golang509four-ways-to-resolve-fibonacci-number">discussion&lt;/a>]&lt;/li>
&lt;/ul>
&lt;h4 id="dynamic-programming">Dynamic Programming&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/fibonacci-number/">509. Fibonacci Number&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/fibonacci-number/discuss/1057880/golang509four-ways-to-resolve-fibonacci-number">discussion&lt;/a>]&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/climbing-stairs/">70. Climbing Stairs&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="binary-search">Binary Search&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/binary-search/">704. Binary Search&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/binary-search/discuss/1055849/golang704beautiful-code-of-binary-search">discussion&lt;/a>]&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/">34. Find First and Last Position of Element in Sorted Array&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/discuss/1056313/golang34easy-way-to-understand-with-two-binary-search">discussion&lt;/a>]&lt;/li>
&lt;/ul>
&lt;h4 id="quick-sort">Quick Sort&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/kth-largest-element-in-an-array/">215. Kth Largest Element in an Array&lt;/a> &amp;ndash; &lt;a href="https://leetcode.com/problems/kth-largest-element-in-an-array/discuss/1108891/Golang215two-partition-schema-of-quick-select">[discussion: two partition schema]&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/submissions/detail/465797355/">347. Top K Frequent Elements&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="greedy">Greedy&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/partition-labels/">763. Partition Labels&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended/">1353. Maximum Number of Events That Can Be Attended&lt;/a> &amp;ndash; &lt;a href="https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended/solutions/4066650/1353-python-maximum-number-of-events-that-can-be-attended">[solution]&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="design">Design&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/lru-cache/">146. LRU Cache&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/lfu-cache/">460. LFU Cache&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/lfu-cache/discuss/1086255/Golang460two-ways-to-resolve-LFU-Cache">discussion&lt;/a>]&lt;/li>
&lt;/ul></content></item><item><title>TCP</title><link>https://jinying-che.github.io/posts/network/tcp/</link><pubDate>Mon, 01 Feb 2021 23:25:26 +0800</pubDate><guid>https://jinying-che.github.io/posts/network/tcp/</guid><description>TCP is really complex protocol and there&amp;rsquo;s a lot of tutorials online to learn TCP, however as time being, it&amp;rsquo;s probably being outdated, same as my post. Hence I would recommend the official RFC 793 as the only true source. Here&amp;rsquo;s a summary of RFC 793.
TCP Header TCP Header Format
0 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Source Port | Destination Port | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Sequence Number | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Acknowledgment Number | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Data | |U|A|P|R|S|F| | | Offset| Reserved |R|C|S|S|Y|I| Window | | | |G|K|H|T|N|N| | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Checksum | Urgent Pointer | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Options | Padding | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | data | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ TCP State Machine Be noted that 11 TCP Connection States Diagram indicating state to state transformation not cliet to server communication.</description><content>&lt;p>TCP is really complex protocol and there&amp;rsquo;s a lot of tutorials online to learn TCP, however as time being, it&amp;rsquo;s probably being outdated, same as my post. Hence I would recommend the official &lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-16">RFC 793&lt;/a> as the only true source. Here&amp;rsquo;s a summary of &lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-16">RFC 793&lt;/a>.&lt;/p>
&lt;h3 id="tcp-header">TCP Header&lt;/h3>
&lt;p>&lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-16">TCP Header Format&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code> 0 1 2 3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Source Port | Destination Port |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Sequence Number |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Acknowledgment Number |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Data | |U|A|P|R|S|F| |
| Offset| Reserved |R|C|S|S|Y|I| Window |
| | |G|K|H|T|N|N| |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Checksum | Urgent Pointer |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Options | Padding |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| data |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/code>&lt;/pre>&lt;h3 id="tcp-state-machine">TCP State Machine&lt;/h3>
&lt;p>Be noted that 11 &lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-17">TCP Connection States Diagram&lt;/a> indicating state to state transformation not cliet to server communication.&lt;/p>
&lt;pre tabindex="0">&lt;code>
+---------+ ---------\ active OPEN
| CLOSED | \ -----------
+---------+&amp;lt;---------\ \ create TCB
| ^ \ \ snd SYN
passive OPEN | | CLOSE \ \
------------ | | ---------- \ \
create TCB | | delete TCB \ \
V | \ \
+---------+ CLOSE | \
| LISTEN | ---------- | |
+---------+ delete TCB | |
rcv SYN | | SEND | |
----------- | | ------- | V
+---------+ snd SYN,ACK / \ snd SYN +---------+
| |&amp;lt;----------------- ------------------&amp;gt;| |
| SYN | rcv SYN | SYN |
| RCVD |&amp;lt;-----------------------------------------------| SENT |
| | snd ACK | |
| |------------------ -------------------| |
+---------+ rcv ACK of SYN \ / rcv SYN,ACK +---------+
| -------------- | | -----------
| x | | snd ACK
| V V
| CLOSE +---------+
| ------- | ESTAB |
| snd FIN +---------+
| CLOSE | | rcv FIN
V ------- | | -------
+---------+ snd FIN / \ snd ACK +---------+
| FIN |&amp;lt;----------------- ------------------&amp;gt;| CLOSE |
| WAIT-1 |------------------ | WAIT |
+---------+ rcv FIN \ +---------+
| rcv ACK of FIN ------- | CLOSE |
| -------------- snd ACK | ------- |
V x V snd FIN V
+---------+ +---------+ +---------+
|FINWAIT-2| | CLOSING | | LAST-ACK|
+---------+ +---------+ +---------+
| rcv ACK of FIN | rcv ACK of FIN |
| rcv FIN -------------- | Timeout=2MSL -------------- |
| ------- x V ------------ x V
\ snd ACK +---------+delete TCB +---------+
------------------------&amp;gt;|TIME WAIT|------------------&amp;gt;| CLOSED |
+---------+ +---------+
&lt;/code>&lt;/pre>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Head&lt;/th>
&lt;th>Meaning&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>LISTEN&lt;/td>
&lt;td>represents waiting for a connection request from any remote TCP and port&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SYN-SENT&lt;/td>
&lt;td>represents waiting for a matching connection request after having sent a connection request&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SYN-RECEIVED&lt;/td>
&lt;td>represents waiting for a confirming connection request acknowledgment after having both received and sent a connection request&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ESTABLISHED&lt;/td>
&lt;td>represents an open connection, data received can be delivered to the user. The normal state for the data transfer phase of the connection&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FIN-WAIT-1&lt;/td>
&lt;td>represents waiting for a connection termination request from the remote TCP, or an acknowledgment of the connection termination request previously sent&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FIN-WAIT-2&lt;/td>
&lt;td>represents waiting for a connection termination request from the remote TCP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CLOSE-WAIT&lt;/td>
&lt;td>represents waiting for a connection termination request from the local user&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CLOSING&lt;/td>
&lt;td>represents waiting for a connection termination request acknowledgment from the remote TCP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>LAST-ACK&lt;/td>
&lt;td>represents waiting for an acknowledgment of the connection termination request previously sent to the remote TCP (which includes an acknowledgment of its connection termination request)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TIME-WAIT&lt;/td>
&lt;td>represents waiting for enough time to pass to be sure the remote TCP received the acknowledgment of its connection termination request&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CLOSED&lt;/td>
&lt;td>represents no connection state at all&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Here may be a more readable diagram.
&lt;img src="https://jinying-che.github.io/images/tcpfsm.png" alt="tcp state Machine">&lt;/p>
&lt;h4 id="tcp-open-three-way-handshake">TCP Open: Three-Way Handshake&lt;/h4>
&lt;p>&lt;img src="https://jinying-che.github.io/images/tcp_open.svg" alt="tcp open">&lt;/p>
&lt;p>&lt;img src="https://jinying-che.github.io/images/tcp_open_bytebytego.png" alt="tcp open">&lt;/p>
&lt;h4 id="tcp-close-four-way-handshake">TCP Close: Four-Way Handshake&lt;/h4>
&lt;p>&lt;img src="https://jinying-che.github.io/images/tcp_close_bytebytego.png" alt="tcp close">&lt;/p>
&lt;h3 id="reference">Reference&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="http://www.tcpipguide.com/free/t_TCPConnectionEstablishmentProcessTheThreeWayHandsh-3.htm">http://www.tcpipguide.com/free/t_TCPConnectionEstablishmentProcessTheThreeWayHandsh-3.htm&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.tcpipguide.com/free/t_TCPConnectionTermination-2.htm">http://www.tcpipguide.com/free/t_TCPConnectionTermination-2.htm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-16">RFC 793&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://draveness.me/whys-the-design-tcp-three-way-handshake/">https://draveness.me/whys-the-design-tcp-three-way-handshake/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.bytebytego.com/p/everything-you-always-wanted-to-know">https://blog.bytebytego.com/p/everything-you-always-wanted-to-know&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.alibabacloud.com/blog/tcp-syn-queue-and-accept-queue-overflow-explained_599203">Alibaba: TCP SYN Queue and Accept Queue Overflow Explained&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Setup Universal Ctags for Mac</title><link>https://jinying-che.github.io/posts/c/ctags/</link><pubDate>Sat, 23 Jan 2021 15:16:29 +0800</pubDate><guid>https://jinying-che.github.io/posts/c/ctags/</guid><description>&lt;p>At the Beginning of this year, I&amp;rsquo;m going to start reading &lt;em>Computer System A Programmer's Perspective&lt;/em>, this whole book introduces the different aspects of computer system basing on C language, and there&amp;rsquo;s also plenty of C demos provided in the &lt;a href="http://csapp.cs.cmu.edu/3e/code.html">web&lt;/a>, to navigate the code, I try to use &lt;strong>ctags&lt;/strong>.&lt;/p></description><content>&lt;p>At the Beginning of this year, I&amp;rsquo;m going to start reading &lt;em>Computer System A Programmer's Perspective&lt;/em>, this whole book introduces the different aspects of computer system basing on C language, and there&amp;rsquo;s also plenty of C demos provided in the &lt;a href="http://csapp.cs.cmu.edu/3e/code.html">web&lt;/a>, to navigate the code, I try to use &lt;strong>ctags&lt;/strong>.&lt;/p>
&lt;h3 id="what-is-universal-ctags">What is Universal Ctags?&lt;/h3>
&lt;p>&lt;a href="https://ctags.io/">Universal Ctags&lt;/a> (abbreviated as u-ctags) is a maintained implementation of ctags. ctags generates an index (or tag) file of language objects found in source files for programming languages. This index makes it easy for text editors and other tools to locate the indexed items.&lt;/p>
&lt;h3 id="install-in-mac">Install in Mac&lt;/h3>
&lt;p>&lt;strong>brew tap&lt;/strong>: A &lt;a href="https://docs.brew.sh/Taps">tap&lt;/a> is Homebrew-speak for a Git repository containing extra formulae.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>brew tap universal-ctags/universal-ctags
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brew install --HEAD universal-ctags
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configure-vimrc">Configure .vimrc&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#search the .tags in the current directory, will keep searching the upper directory if not found&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set tags&lt;span style="color:#f92672">=&lt;/span>./.tags;,.tags
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="setup-alias-for-ctags">Setup alias for ctags&lt;/h3>
&lt;p>Because there is already a &lt;strong>ctags&lt;/strong> command in Mac, which is &lt;strong>/usr/bin/ctags&lt;/strong>, we need to create an alias of &lt;code>ctags&lt;/code> for overwriting.&lt;/p>
&lt;p>Add this in &lt;strong>.zshrc&lt;/strong> (suppose to use &lt;strong>zsh&lt;/strong>)&lt;/p>
&lt;ul>
&lt;li>&lt;code>alias ctags=&amp;quot;/usr/local/bin/ctags&amp;quot;&lt;/code>
&lt;blockquote>
&lt;p>&lt;strong>&lt;code>which ctags&lt;/code>&lt;/strong> to verify&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h3 id="generate-tag-recursively">Generate tag recursively&lt;/h3>
&lt;p>In the root of the project:&lt;/p>
&lt;ul>
&lt;li>&lt;code>ctags -f .tags -R .&lt;/code>
&lt;ul>
&lt;li>&lt;strong>-f .tags&lt;/strong> indicates that the output file is &lt;strong>.tags&lt;/strong>&lt;/li>
&lt;li>&lt;strong>-R&lt;/strong> means &lt;strong>--recurse&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></content></item><item><title>How to profile Golang Program</title><link>https://jinying-che.github.io/posts/go/diagnostics/</link><pubDate>Mon, 30 Nov 2020 08:35:51 +0800</pubDate><guid>https://jinying-che.github.io/posts/go/diagnostics/</guid><description>First of all, this document is in progress and will keep updated.
Diagnostic by the http call is usually a convinient way in pratice. What we need to do is only two steps before starting the program:
import _ &amp;quot;net/http/pprof&amp;quot; http.ListenAndServe(&amp;quot;the address that defined in advance&amp;quot;, better use privaty ServerMux instead of the default one) Profile The port 6060 is an example that defined for the http listening. The default time is 30s that go pprof will collect the samples which used to profile without the specificatoin.</description><content>&lt;p>First of all, this document is in progress and will keep updated.&lt;/p>
&lt;p>Diagnostic by the http call is usually a convinient way in pratice. What we need to do is only two steps before starting the program:&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;code>import _ &amp;quot;net/http/pprof&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>http.ListenAndServe(&amp;quot;the address that defined in advance&amp;quot;, better use privaty ServerMux instead of the default one)&lt;/code>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="profile">Profile&lt;/h2>
&lt;p>The port 6060 is an example that defined for the http listening. The default time is 30s that go pprof will collect the samples which used to profile without the specificatoin.(I have not find the way to specify btw)&lt;/p>
&lt;ul>
&lt;li>http://localhost:6060/debug/pprof/goroutine&lt;/li>
&lt;li>http://localhost:6060/debug/pprof/heap&lt;/li>
&lt;li>http://localhost:6060/debug/pprof/threadcreate&lt;/li>
&lt;li>http://localhost:6060/debug/pprof/block&lt;/li>
&lt;li>http://localhost:6060/debug/pprof/mutex&lt;/li>
&lt;li>http://localhost:6060/debug/pprof/profile&lt;/li>
&lt;/ul>
&lt;p>Here is a demo of the profilling.&lt;/p>
&lt;ul>
&lt;li>trigger:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>curl localhost:6060/debug/pprof/profile &amp;gt; profile.pprof&lt;/code> (the filename can arbitrary)&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>analyse:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>go tool pprof -http :6060 ./profile.pprof&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h2 id="trace">Trace&lt;/h2>
&lt;ul>
&lt;li>http://localhost:6060/debug/pprof/trace&lt;/li>
&lt;/ul>
&lt;p>Here is a demo of the trace.&lt;/p>
&lt;ul>
&lt;li>trigger:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>curl localhost:6060/debug/pprof/trace &amp;gt; profile.trace&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>analyse:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>go tool trace -http :6060 ./profile.trace&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="ref">Ref&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/google/pprof">https://github.com/google/pprof&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://golang.org/doc/diagnostics.html">https://golang.org/doc/diagnostics.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://golang.org/pkg/runtime/pprof/">https://golang.org/pkg/runtime/pprof/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jvns.ca/blog/2017/09/24/profiling-go-with-pprof/">https://jvns.ca/blog/2017/09/24/profiling-go-with-pprof/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>How does golang implement the Rate Limiter</title><link>https://jinying-che.github.io/posts/go/ratelimiter/</link><pubDate>Fri, 20 Nov 2020 12:04:09 +0800</pubDate><guid>https://jinying-che.github.io/posts/go/ratelimiter/</guid><description>Core concept burst: the size of the bucket which is possible more than the limit token: refer to https://en.wikipedia.org/wiki/Token_bucket limit: the number of tokens that is obtained per second Core function // reserveN is a helper method for AllowN, ReserveN, and WaitN. // maxFutureReserve specifies the maximum reservation wait duration allowed. // reserveN returns Reservation, not *Reservation, to avoid allocation in AllowN and WaitN. func (lim *Limiter) reserveN(now time.Time, n int, maxFutureReserve time.</description><content>&lt;h2 id="core-concept">Core concept&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>burst&lt;/strong>: the size of the bucket which is possible more than the limit&lt;/li>
&lt;li>&lt;strong>token&lt;/strong>: refer to &lt;a href="https://en.wikipedia.org/wiki/Token_bucket">https://en.wikipedia.org/wiki/Token_bucket&lt;/a>&lt;/li>
&lt;li>&lt;strong>limit&lt;/strong>: the number of tokens that is obtained per second&lt;/li>
&lt;/ul>
&lt;h2 id="core-function">Core function&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// reserveN is a helper method for AllowN, ReserveN, and WaitN.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// maxFutureReserve specifies the maximum reservation wait duration allowed.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// reserveN returns Reservation, not *Reservation, to avoid allocation in AllowN and WaitN.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">lim&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Limiter&lt;/span>) &lt;span style="color:#a6e22e">reserveN&lt;/span>(&lt;span style="color:#a6e22e">now&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Time&lt;/span>, &lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>, &lt;span style="color:#a6e22e">maxFutureReserve&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Duration&lt;/span>) &lt;span style="color:#a6e22e">Reservation&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">mu&lt;/span>.&lt;span style="color:#a6e22e">Lock&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">limit&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#a6e22e">Inf&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">mu&lt;/span>.&lt;span style="color:#a6e22e">Unlock&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">Reservation&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ok&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>: &lt;span style="color:#a6e22e">lim&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">tokens&lt;/span>: &lt;span style="color:#a6e22e">n&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">timeToAct&lt;/span>: &lt;span style="color:#a6e22e">now&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">now&lt;/span>, &lt;span style="color:#a6e22e">last&lt;/span>, &lt;span style="color:#a6e22e">tokens&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">advance&lt;/span>(&lt;span style="color:#a6e22e">now&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Calculate the remaining number of tokens resulting from the request.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">tokens&lt;/span> &lt;span style="color:#f92672">-=&lt;/span> float64(&lt;span style="color:#a6e22e">n&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Calculate the wait duration
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">waitDuration&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Duration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">tokens&lt;/span> &amp;lt; &lt;span style="color:#ae81ff">0&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">waitDuration&lt;/span> = &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">limit&lt;/span>.&lt;span style="color:#a6e22e">durationFromTokens&lt;/span>(&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">tokens&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Decide result
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">ok&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">burst&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a6e22e">waitDuration&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#a6e22e">maxFutureReserve&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Prepare reservation
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">Reservation&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ok&lt;/span>: &lt;span style="color:#a6e22e">ok&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>: &lt;span style="color:#a6e22e">lim&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">limit&lt;/span>: &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">limit&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">ok&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">tokens&lt;/span> = &lt;span style="color:#a6e22e">n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">timeToAct&lt;/span> = &lt;span style="color:#a6e22e">now&lt;/span>.&lt;span style="color:#a6e22e">Add&lt;/span>(&lt;span style="color:#a6e22e">waitDuration&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Update state
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">ok&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">last&lt;/span> = &lt;span style="color:#a6e22e">now&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">tokens&lt;/span> = &lt;span style="color:#a6e22e">tokens&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">lastEvent&lt;/span> = &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">timeToAct&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">last&lt;/span> = &lt;span style="color:#a6e22e">last&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">mu&lt;/span>.&lt;span style="color:#a6e22e">Unlock&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">r&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item></channel></rss>