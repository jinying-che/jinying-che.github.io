<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Terminal</title><link>https://jinying-che.github.io/posts/</link><description>Recent content in Posts on Terminal</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 11 Mar 2023 23:03:37 +0800</lastBuildDate><atom:link href="https://jinying-che.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Dynamic Programming</title><link>https://jinying-che.github.io/posts/algorithm/dynamic_programming/</link><pubDate>Sat, 11 Mar 2023 23:03:37 +0800</pubDate><guid>https://jinying-che.github.io/posts/algorithm/dynamic_programming/</guid><description/><content/></item><item><title>API Design</title><link>https://jinying-che.github.io/posts/api_design/</link><pubDate>Mon, 13 Feb 2023 22:27:32 +0800</pubDate><guid>https://jinying-che.github.io/posts/api_design/</guid><description>There are some similar technologies as Rest, OpenAPI, gRPC and GraphQL which are popular design or standard or framework that related to API design, meanwhile, they are prone to make people confused for the use case.
Simple Put:
REST is a software architectural and common communication standard. OpenAPI is a specification, which defines a standard, programming language-agnostic interface description for HTTP APIs. gRPC is a high performance Remote Procedure Call (RPC) framework.</description><content>&lt;p>There are some similar technologies as Rest, OpenAPI, gRPC and GraphQL which are popular design or standard or framework that related to API design, meanwhile, they are prone to make people confused for the use case.&lt;/p>
&lt;p>Simple Put:&lt;/p>
&lt;ul>
&lt;li>&lt;code>REST&lt;/code> is a software &lt;strong>architectural&lt;/strong> and common communication &lt;strong>standard&lt;/strong>.&lt;/li>
&lt;li>&lt;code>OpenAPI&lt;/code> is a &lt;strong>specification&lt;/strong>, which defines a standard, programming language-agnostic interface description for HTTP APIs.&lt;/li>
&lt;li>&lt;code>gRPC&lt;/code> is a high performance Remote Procedure Call (RPC) &lt;strong>framework&lt;/strong>.&lt;/li>
&lt;li>&lt;code>GraphQL&lt;/code> is a &lt;strong>query language&lt;/strong> for your API.&lt;/li>
&lt;/ul>
&lt;h2 id="1-rest">1. Rest&lt;/h2>
&lt;p>Representational state transfer (REST) is a software architectural style that describes a uniform interface between physically separate components, often across the Internet in a client-server architecture.&lt;/p>
&lt;p>REST is the most common communication standard between computers over the internet, an API that follows the REST standard is called a RESTful API.&lt;/p>
&lt;h3 id="11-architectural-constraints">1.1 Architectural Constraints&lt;/h3>
&lt;ul>
&lt;li>Client–server architecture&lt;/li>
&lt;li>Statelessness&lt;/li>
&lt;li>Cacheability&lt;/li>
&lt;li>Layered system&lt;/li>
&lt;li>Code on demand (optional)&lt;/li>
&lt;li>Uniform interface&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>refer to &lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer#Architectural_constraints">wikipedia&lt;/a> for more details&lt;/p>
&lt;/blockquote>
&lt;h3 id="12-applied-to-web-services">1.2 Applied to web services&lt;/h3>
&lt;ul>
&lt;li>a base URI, such as &lt;a href="http://api.example.com/">http://api.example.com/&lt;/a>&lt;/li>
&lt;li>standard HTTP methods (e.g., GET, POST, PUT, and DELETE)&lt;/li>
&lt;li>a media type that defines state transition data elements&lt;/li>
&lt;/ul>
&lt;h3 id="13-crud">1.3 CRUD&lt;/h3>
&lt;ul>
&lt;li>POST &amp;ndash;&amp;gt; CREATE &lt;em>(non-idempotent)&lt;/em>&lt;/li>
&lt;li>GET &amp;ndash;&amp;gt; READ &lt;em>(idempotent)&lt;/em>&lt;/li>
&lt;li>PUT &amp;ndash;&amp;gt; UPDATE &lt;em>(idempotent)&lt;/em>&lt;/li>
&lt;li>DELETE &amp;ndash;&amp;gt; DELETE &lt;em>(idempotent)&lt;/em>&lt;/li>
&lt;/ul>
&lt;h3 id="14-version">1.4 Version&lt;/h3>
&lt;p>Versioning allows an implementation to provide backward compatibility so that if we introduce breaking changes from one version to another, consumers get enough time to move to the next version.&lt;/p>
&lt;p>There are many ways to version an API. The most straightforward is to prefix the version before the resource on the URI. For instance:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://shopee.com/v1/products">https://shopee.com/v1/products&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://shopee.com/v2/products">https://shopee.com/v2/products&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="15-example">1.5 Example&lt;/h3>
&lt;p>This API has four endpoints:&lt;/p>
&lt;ul>
&lt;li>POST &lt;code>/users&lt;/code> Creates a new user with the specified name and email.&lt;/li>
&lt;li>GET &lt;code>/users/:id&lt;/code> Retrieves an existing user with the specified ID.&lt;/li>
&lt;li>PUT &lt;code>/users/:id&lt;/code> Updates an existing user with the specified ID.&lt;/li>
&lt;li>DELETE &lt;code>/users/:id&lt;/code> Deletes an existing user with the specified ID.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>POST /users
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;John Smith&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;john@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET /users/:id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PUT /users/:id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;John Smith&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;john@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DELETE /users/:id
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-grpc">2. gRPC&lt;/h2>
&lt;ol>
&lt;li>gPRC is an implementation of Remote Procedure Call (RPC)&lt;/li>
&lt;li>It is modern open source high performance RPC framework that can run in any environment.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>RPC (Remote Procedure Call) is called “remote” because it enables communications between remote services when services are deployed to different servers under microservice architecture. From the user’s point of view, it acts like a local function call.&lt;/p>
&lt;/blockquote>
&lt;h3 id="21-core-concepts">2.1 Core Concepts&lt;/h3>
&lt;ul>
&lt;li>Design service API using &lt;a href="https://developers.google.com/protocol-buffers">protocol buffers&lt;/a> as Interface Definition Language (IDL)&lt;/li>
&lt;li>protocol buffers TODO?&lt;/li>
&lt;li>gRPC builds on &lt;a href="https://www.rfc-editor.org/rfc/rfc7540">HTTP/2&lt;/a> long-lived connections for inter-service communication&lt;/li>
&lt;/ul>
&lt;h3 id="22-overall">2.2 Overall&lt;/h3>
&lt;p>&lt;img src="https://jinying-che.github.io/images/grpc_overall.jpeg" alt="gprc overall">&lt;/p>
&lt;h3 id="23-quick-start">2.3 Quick Start&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://grpc.io/docs/languages/go/quickstart/">https://grpc.io/docs/languages/go/quickstart/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="3-openapi">3. OpenAPI&lt;/h2>
&lt;p>First of all, I&amp;rsquo;d like to recommend to take an overview of some &lt;a href="https://github.com/OAI/OpenAPI-Specification/tree/main/examples">examples&lt;/a> for OpenAPI Spec. For details, can read the &lt;a href="https://swagger.io/docs/specification/basic-structure/">basic structure&lt;/a>&lt;/p>
&lt;ol>
&lt;li>The OpenAPI Specification (OAS) defines an &lt;strong>interface description&lt;/strong> for HTTP APIs&lt;/li>
&lt;li>It&amp;rsquo;s tend to be industry standard&lt;/li>
&lt;li>It&amp;rsquo;s programming language-agnostic&lt;/li>
&lt;li>Both human and computers can understand and discover the capabilities of a service&lt;/li>
&lt;li>It removes the guesswork in calling a service and saves the communication effort&lt;/li>
&lt;li>Consumer can interact the remote service with minimal implementation logic (with the rich &lt;a href="https://openapi.tools">OpenAPI Tools&lt;/a>)&lt;/li>
&lt;li>It boost the &lt;a href="https://swagger.io/resources/articles/adopting-an-api-first-approach/">API driven development&lt;/a>&lt;/li>
&lt;li>It supports Restful API&lt;/li>
&lt;li>The OpenAPI doc are represented in YAML or JSON format which may be produced and served statically or &lt;strong>generated dynamically&lt;/strong> from an application. (e.g. &lt;a href="https://github.com/swaggo/swag">generate RESTful API documentation with Swagger 2.0 for Go&lt;/a>)&lt;/li>
&lt;/ol>
&lt;p>Generally, we would have the best practice in API desgin as long as we follow the OAS and use the related toolset.&lt;/p>
&lt;h3 id="31-what-we-can-do-with-openapi-spec">3.1 What we can do with OpenAPI Spec&lt;/h3>
&lt;ol>
&lt;li>Interactive documentation&lt;/li>
&lt;li>Code generation for documentation, clients, and servers&lt;/li>
&lt;li>automation of test cases&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ol>
&lt;h3 id="32-quick-start">3.2 Quick Start&lt;/h3>
&lt;h4 id="321-api-definition">3.2.1 API Definition&lt;/h4>
&lt;p>API is a contract followed by all stakeholders across the whole organization, traditionally, two main approaches exist when creating OpenAPI documents: Code-first and Design-first.&lt;/p>
&lt;h5 id="design-first">Design First&lt;/h5>
&lt;p>API Design First approach is being more and more pupular to build systems today as it provides many &lt;a href="https://swagger.io/resources/articles/adopting-an-api-first-approach/#the-benefits-of-an-api-first-approach-2">benefits&lt;/a>.&lt;/p>
&lt;p>To design the API from the scratch, we can use &lt;a href="https://swagger.io/tools/swagger-editor/">swagger editor&lt;/a> to create API in an interactive way where you can see if your changes is valid and what they would like in the real time. Personal speaking, learning by doing is the best way to understand and write OpenAPI docs, you can simply import and update the example like &lt;code>Petstore&lt;/code> in the editor and kick off your OpenAPI journey.&lt;/p>
&lt;h5 id="code-first">Code First&lt;/h5>
&lt;p>Code First is possibly adopted by some devs for some fast and easy API building, whereas it&amp;rsquo;s an old school and not recommeded at all, unless you have an exist project which requires to follow the OpenAPI spec after the code has been finished already, with that saying, there are some tools like &lt;a href="https://github.com/go-swagger/go-swagger">go-swagger&lt;/a> to generate OpenAPI documents automatically by parsing code annotations.&lt;/p>
&lt;h4 id="322-code-generation">3.2.2 Code Generation&lt;/h4>
&lt;p>Once we got the standard OpenAPI docs from wherever it&amp;rsquo;s generated from the code or created by any stakeholders, there are some tools for you to generate the code, for example:&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://openapi-generator.tech/">OpenAPI Generator&lt;/a> - A template-driven engine to generate documentation, API clients and server stubs in different languages by parsing your OpenAPI Description (community-driven fork of swagger-codegen)&lt;/p>
&lt;/blockquote>
&lt;h4 id="333-mock-server-and-testing">3.3.3 Mock Server and Testing&lt;/h4>
&lt;p>TBD&lt;/p>
&lt;h2 id="4-reference">4. Reference&lt;/h2>
&lt;h4 id="rest">Rest&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://blog.bytebytego.com/p/why-is-restful-api-so-popular">https://blog.bytebytego.com/p/why-is-restful-api-so-popular&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer">https://en.wikipedia.org/wiki/Representational_state_transfer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/blog/products/api-management/understanding-grpc-openapi-and-rest-and-when-to-use-them">gRPC vs REST: Understanding gRPC, OpenAPI and REST and when to use them in API design&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="grpc">gRPC&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://blog.bytebytego.com/i/84137023/how-does-grpc-work">https://blog.bytebytego.com/i/84137023/how-does-grpc-work&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://grpc.io/blog/grpc-on-http2/">https://grpc.io/blog/grpc-on-http2/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="openapi">OpenAPI&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://spec.openapis.org/oas/v3.1.0">https://spec.openapis.org/oas/v3.1.0&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=uBs6dfUgxcI">Better API Design With OpenAPI&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/OAI/OpenAPI-Specification/">https://github.com/OAI/OpenAPI-Specification/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://swagger.io/resources/articles/adopting-an-api-first-approach/">https://swagger.io/resources/articles/adopting-an-api-first-approach/&lt;/a>&lt;/li>
&lt;li>Examples: &lt;a href="https://github.com/OAI/OpenAPI-Specification/tree/main/examples">https://github.com/OAI/OpenAPI-Specification/tree/main/examples&lt;/a>&lt;/li>
&lt;li>Best Practice: &lt;a href="https://oai.github.io/Documentation/best-practices.html">https://oai.github.io/Documentation/best-practices.html&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Git Cheatsheet</title><link>https://jinying-che.github.io/posts/git_cheatsheet/</link><pubDate>Tue, 31 Jan 2023 16:14:39 +0800</pubDate><guid>https://jinying-che.github.io/posts/git_cheatsheet/</guid><description>Overall Everything about the changes rollback code changed without git add
# `git add .` and `git checkout .` is a pair of inverse operations git checkout . or git reset --hard git add . done without git commit
git reset + git chekcout . or git reset --hard git commit done
# option 1: keep the changes in worksapce, rollback committed chagnes in local repo git reset head^ # option 2: rollback the changes in both workspace and local repo git reset --hard head^ git push done</description><content>&lt;h3 id="overall">Overall&lt;/h3>
&lt;p>&lt;img src="https://jinying-che.github.io/images/git.svg" alt="git architecture">&lt;/p>
&lt;h3 id="everything-about-the-changes-rollback">Everything about the changes rollback&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>code changed without &lt;code>git add&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># `git add .` and `git checkout .` is a pair of inverse operations&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>or
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>git add .&lt;/code> done without &lt;code>git commit&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git reset + git chekcout .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>or
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>git commit&lt;/code> done&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># option 1: keep the changes in worksapce, rollback committed chagnes in local repo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset head^
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># option 2: rollback the changes in both workspace and local repo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard head^
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>git push&lt;/code> done&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># overwrite remote via the local&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard HEAD^
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="how-can-i-see-the-changes-in-a-git-commithttpsstackoverflowcomquestions17563726how-can-i-see-the-changes-in-a-git-commit">&lt;a href="https://stackoverflow.com/questions/17563726/how-can-i-see-the-changes-in-a-git-commit">How can I see the changes in a git commit&lt;/a>?&lt;/h3>
&lt;p>&lt;code>git diff COMMIT~ COMMIT&lt;/code> or &lt;code>git show COMMIT&lt;/code>&lt;/p>
&lt;h3 id="how-to-include-config-directives-from-another-source">How to include config directives from another source?&lt;/h3>
&lt;p>setup a &lt;code>.gitconfig&lt;/code>, &lt;code>.gitconfig-garena&lt;/code>, and &lt;code>.gitconfig-github&lt;/code> at $HOME as follows, all the projects under the folder will be configured recursively:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># .gitconfig&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">includeIf&lt;/span> &lt;span style="color:#e6db74">&amp;#34;gitdir:~/workspace/garena.com/&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">path&lt;/span> = &lt;span style="color:#960050;background-color:#1e0010">~/&lt;/span>.&lt;span style="color:#a6e22e">gitconfig-garena&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">includeIf&lt;/span> &lt;span style="color:#e6db74">&amp;#34;gitdir:~/workspace/github.com/&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">path&lt;/span> = &lt;span style="color:#960050;background-color:#1e0010">~/&lt;/span>.&lt;span style="color:#a6e22e">gitconfig-github&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># .gitconfig-garena&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">user&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#a6e22e">Jinying&lt;/span> &lt;span style="color:#a6e22e">Che&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">email&lt;/span> = &lt;span style="color:#a6e22e">jinying&lt;/span>.&lt;span style="color:#a6e22e">che&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#a6e22e">shopee&lt;/span>.&lt;span style="color:#a6e22e">com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># .gitconfig-github&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">user&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#a6e22e">Jinying&lt;/span> &lt;span style="color:#a6e22e">Che&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">email&lt;/span> = &lt;span style="color:#a6e22e">chejinying&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#a6e22e">me&lt;/span>.&lt;span style="color:#a6e22e">com&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="keep-the-local-changes-delete-the-remote-changes">Keep the local changes, delete the remote changes&lt;/h3>
&lt;p>delete the local cache, push to the remote&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>1. git rm —cache -r directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. git commit -m &lt;span style="color:#e6db74">&amp;#34;del&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3. git pushf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="git-merge-the-update-from-the-forked-project">Git merge the update from the forked project&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>1. git remote add upstream url
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. git fetch upstream
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3. git merge upsteam/master
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># NOTE check the remote brach status:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git remote -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="git-merge-the-file-from-the-other-branch">Git merge the file from the other branch&lt;/h3>
&lt;p>exactly, it&amp;rsquo;s &lt;code>checkout&lt;/code>, pls be reminded that this command will overwrite the local file without merging process&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git checkout branch_name filename
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="overwrite-the-local-via-the-remote">Overwrite the local via the remote&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>1. git fetch --all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. git reset --hard origin/master
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="squash-commits">Squash commits&lt;/h3>
&lt;ol>
&lt;li>&lt;code>git rebase -i commit-version&lt;/code> (which is earlist one that squash beginning from)&lt;/li>
&lt;li>change &lt;code>pick&lt;/code> to &lt;code>s&lt;/code>(squash) manually by edting the file, leave the first &lt;code>pick&lt;/code>, then &lt;code>:wq&lt;/code>(for vim)&lt;/li>
&lt;li>Edit the commit message, leave the msg for the final commiting, then&lt;code>:wq&lt;/code>(for vim)&lt;/li>
&lt;/ol>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.fengerzh.com/git-reset/">https://www.fengerzh.com/git-reset/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Python Cheatsheet</title><link>https://jinying-che.github.io/posts/python/python_cheatsheet/</link><pubDate>Tue, 31 Jan 2023 11:40:49 +0800</pubDate><guid>https://jinying-che.github.io/posts/python/python_cheatsheet/</guid><description>Pass By Reference Python passes arguments neither by reference nor by value, but by assignment. The parameter passed in is actually a reference to an object (but the reference is passed by value)
def main(): n = 9001 print(f&amp;#34;[main] before n: {hex(id(n))} # same&amp;#34;) increment(n) print(f&amp;#34;[main] after n: {hex(id(n))} # same&amp;#34;) def increment(x): print(f&amp;#34;[func] before x: {hex(id(x))} # same&amp;#34;) x += 1 print(f&amp;#34;[func] after x: {hex(id(x))} # address altered after the assignment&amp;#34;) main() # output [main] before n: 0x11035a0b0 # same [func] before x: 0x11035a0b0 # same [func] after x: 0x11035a190 # address altered after the assignment [main] after n: 0x11035a0b0 # same Mutability, an object is mutable if its structure can be changed in place rather than requiring reassignment.</description><content>&lt;h3 id="pass-by-reference">Pass By Reference&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Python passes arguments neither by reference nor by value, but by assignment. The parameter passed in is actually a reference to an object (but the reference is passed by value)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">9001&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[main] before n: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(n))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # same&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> increment(n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[main] after n: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(n))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # same&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">increment&lt;/span>(x):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[func] before x: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(x))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # same&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[func] after x: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(x))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # address altered after the assignment&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>main()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[main] before n: &lt;span style="color:#ae81ff">0x11035a0b0&lt;/span> &lt;span style="color:#75715e"># same&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[func] before x: &lt;span style="color:#ae81ff">0x11035a0b0&lt;/span> &lt;span style="color:#75715e"># same&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[func] after x: &lt;span style="color:#ae81ff">0x11035a190&lt;/span> &lt;span style="color:#75715e"># address altered after the assignment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[main] after n: &lt;span style="color:#ae81ff">0x11035a0b0&lt;/span> &lt;span style="color:#75715e"># same&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Mutability, an object is &lt;strong>mutable&lt;/strong> if its structure can be changed in place rather than requiring reassignment.&lt;/p>
&lt;blockquote>
&lt;p>If you pass a mutable object into a method, the method gets a reference to that same object and you can mutate it to your heart&amp;rsquo;s delight, but if you rebind the reference in the method, the outer scope will know nothing about it, and after you&amp;rsquo;re done, the outer reference will still point at the original object.&lt;/p>
&lt;/blockquote>
&lt;p>The followings are the mutable objects in Python:&lt;/p>
&lt;ul>
&lt;li>Dictionary
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Dictionaries are mapping types.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mt &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;n&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">4&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Define a function to operate on a key:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">square&lt;/span>(num_dict):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> num_dict[&lt;span style="color:#e6db74">&amp;#34;n&amp;#34;&lt;/span>] &lt;span style="color:#f92672">*=&lt;/span> num_dict[&lt;span style="color:#e6db74">&amp;#34;n&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>square(mt)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># output: 16&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>List
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Lists are both subscriptable and mutable.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sm &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">4&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Define a function to operate on an index:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">square&lt;/span>(num_list):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> num_list[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">*=&lt;/span> num_list[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>square(sm)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># output: [16]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Object Attributes
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># For the purpose of this example, let&amp;#39;s use SimpleNamespace.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> types &lt;span style="color:#f92672">import&lt;/span> SimpleNamespace
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SimpleNamespace allows us to set arbitrary attributes.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># It is an explicit, handy replacement for &amp;#34;class X: pass&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ns &lt;span style="color:#f92672">=&lt;/span> SimpleNamespace()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Define a function to operate on an object&amp;#39;s attribute.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">square&lt;/span>(instance):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> instance&lt;span style="color:#f92672">.&lt;/span>n &lt;span style="color:#f92672">*=&lt;/span> instance&lt;span style="color:#f92672">.&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ns&lt;span style="color:#f92672">.&lt;/span>n &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>square(ns)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ns&lt;span style="color:#f92672">.&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># output: 16&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="reference">Reference&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://realpython.com/python-pass-by-reference/#toc">Pass by Reference in Python: Background and Best Practices&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.python.org/3/faq/programming.html#how-do-i-write-a-function-with-output-parameters-call-by-reference">How do I write a function with output parameters (call by reference)?&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Iptables</title><link>https://jinying-che.github.io/posts/network/iptables/</link><pubDate>Thu, 26 Jan 2023 16:22:21 +0800</pubDate><guid>https://jinying-che.github.io/posts/network/iptables/</guid><description>iptables is a user-space utility program that allows a system administrator to configure the IP packet filter rules of the Linux kernel firewall, implemented as different Netfilter modules. The filters are organized in different tables, which contain chains of rules for how to treat network traffic packets.
In a nutshell: Relationship: Tables -&amp;gt; Chains -&amp;gt; Rules Tables There are five tables, the Priority is: filter, nat, mangle, raw, security
https://www.thegeekstuff.com/2011/01/iptables-fundamentals/ https://linux.</description><content>&lt;p>iptables is a user-space utility program that allows a system administrator to configure the IP packet filter rules of the Linux kernel firewall, implemented as different &lt;a href="https://www.netfilter.org/">Netfilter&lt;/a> modules. The filters are organized in different tables, which contain chains of rules for how to treat network traffic packets.&lt;/p>
&lt;h2 id="in-a-nutshell">In a nutshell:&lt;/h2>
&lt;ul>
&lt;li>Relationship: Tables -&amp;gt; Chains -&amp;gt; Rules
&lt;img src="https://jinying-che.github.io/images/iptable.png" alt="package flow through iptables">&lt;/li>
&lt;/ul>
&lt;h2 id="tables">Tables&lt;/h2>
&lt;p>There are five tables, the &lt;em>Priority&lt;/em> is: &lt;strong>filter, nat, mangle, raw, security&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://www.thegeekstuff.com/2011/01/iptables-fundamentals/">https://www.thegeekstuff.com/2011/01/iptables-fundamentals/&lt;/a>
&lt;a href="https://linux.die.net/man/8/iptables">https://linux.die.net/man/8/iptables&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># show filter table by default&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iptables -L -v -n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># which is equal to &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iptables -t filter -L -v -n
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="chains">Chains&lt;/h2>
&lt;p>There are five predefined chains (mapping to the five available Netfilter hooks), though a table may not have all chains.&lt;/p>
&lt;ul>
&lt;li>PREROUTING: Packets will enter this chain before a routing decision is made.&lt;/li>
&lt;li>INPUT: Packet is going to be locally delivered. It does not have anything to do with processes having an opened socket; local delivery is controlled by the &amp;ldquo;local-delivery&amp;rdquo; routing table: ip route show table local.&lt;/li>
&lt;li>FORWARD: All packets that have been routed and were not for local delivery will traverse this chain.&lt;/li>
&lt;li>OUTPUT: Packets sent from the machine itself will be visiting this chain.&lt;/li>
&lt;li>POSTROUTING: Routing decision has been made. Packets enter this chain just before handing them off to the hardware.&lt;/li>
&lt;/ul>
&lt;p>The system administrator can create as many other chains as desired.&lt;/p>
&lt;h2 id="rules">Rules&lt;/h2>
&lt;ul>
&lt;li>ACCEPT – Firewall will accept the packet.&lt;/li>
&lt;li>DROP – Firewall will drop the packet.&lt;/li>
&lt;li>QUEUE – Firewall will pass the packet to the userspace.&lt;/li>
&lt;li>RETURN – Firewall will stop executing the next set of rules in the current chain for this packet. The control will be returned to the calling chain.&lt;/li>
&lt;/ul>
&lt;h2 id="cheat-sheet">Cheat Sheet&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># drop ip packet:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># modify the filter table, insert the rule DROP into the INPUT chain at the specific number (1 by default)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -A means append the rule at the end of the chain&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo iptables -I INPUT -s 10.129.106.98 -j DROP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># delele drop ip packet &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo iptables -D INPUT -s 10.129.106.98 -j DROP
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.netfilter.org/documentation/HOWTO/netfilter-hacking-HOWTO-3.html">https://www.netfilter.org/documentation/HOWTO/netfilter-hacking-HOWTO-3.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://lartc.org/">Linux Advanced Routing &amp;amp; Traffic Control How To&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.docker.com/network/iptables/">https://docs.docker.com/network/iptables/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.linode.com/docs/guides/control-network-traffic-with-iptables/">https://www.linode.com/docs/guides/control-network-traffic-with-iptables/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cyberciti.biz/faq/linux-iptables-drop/">https://www.cyberciti.biz/faq/linux-iptables-drop/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Container Networking</title><link>https://jinying-che.github.io/posts/network/container_networking/</link><pubDate>Thu, 26 Aug 2021 10:27:13 +0800</pubDate><guid>https://jinying-che.github.io/posts/network/container_networking/</guid><description>Before VETH The veth devices are virtual Ethernet devices. They can act as tunnels between network namespaces to create a bridge to a physical network device in another namespace, but can also be used as standalone network devices.
veth device pairs are useful for combining the network facilities of the kernel together in interesting ways. A particularly interesting use case is to place one end of a veth pair in one network namespace and the other end in another network namespace, thus allowing communication between network namespaces.</description><content>&lt;h1 id="before">Before&lt;/h1>
&lt;hr>
&lt;h3 id="veth">VETH&lt;/h3>
&lt;p>The veth devices are virtual Ethernet devices. They can act as tunnels between network namespaces to create a bridge to a physical network device in another namespace, but can also be used as standalone network devices.&lt;/p>
&lt;p>veth device pairs are useful for combining the network facilities of the kernel together in interesting ways. A particularly interesting use case is to place one end of a veth pair in one network namespace and the other end in another network namespace, thus allowing communication between network namespaces.&lt;/p>
&lt;h3 id="bridge">Bridge&lt;/h3>
&lt;p>A Linux bridge behaves like a network switch. It forwards packets between interfaces that are connected to it.&lt;/p>
&lt;p>It&amp;rsquo;s usually used for forwarding packets on routers, on gateways, or between VMs and network namespaces on a host.
It also supports STP, VLAN filter, and multicast snooping.&lt;/p>
&lt;h3 id="iptables">Iptables&lt;/h3>
&lt;p>iptables is a user-space utility program that allows a system administrator to configure the IP packet filter rules of the Linux kernel firewall, implemented as different &lt;a href="https://www.netfilter.org/">Netfilter&lt;/a> modules. The filters are organized in different tables, which contain chains of rules for how to treat network traffic packets.&lt;/p>
&lt;p>For details, pls refer to another &lt;a href="https://jinying-che.github.io/posts/network/iptables/">blog&lt;/a>&lt;/p>
&lt;h1 id="bridge-networking">Bridge Networking&lt;/h1>
&lt;h1 id="calico-networking">Calico Networking&lt;/h1>
&lt;h2 id="reference">Reference:&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man4/veth.4.html">https://man7.org/linux/man-pages/man4/veth.4.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking">https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/mz1999/blog/blob/master/docs/docker-network-bridge.md">https://github.com/mz1999/blog/blob/master/docs/docker-network-bridge.md&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://time.geekbang.org/column/article/64948?cid=100015201">https://time.geekbang.org/column/article/64948?cid=100015201&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Iptables">https://en.wikipedia.org/wiki/Iptables&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Vim Cheat Sheet</title><link>https://jinying-che.github.io/posts/vim/</link><pubDate>Sat, 10 Jul 2021 11:20:07 +0800</pubDate><guid>https://jinying-che.github.io/posts/vim/</guid><description>Basic Usage delete inside parentheses (which can be replaced with any symbol) di( di&amp;quot; di' &amp;hellip; Split Horizontal: ctrl + w + s Vertical: ctrl + w + v Replace a word with yanked text yiw Yank inner word (copy word under cursor, say &amp;#34;first&amp;#34;). Move the cursor to another word (say &amp;#34;second&amp;#34;). ciw Ctrl-R 0 Esc Change &amp;#34;second&amp;#34;, replacing it with &amp;#34;first&amp;#34;. (Ctrl-R: paste `0` register in insert mode) Move the cursor to another word (say &amp;#34;third&amp;#34;).</description><content>&lt;h3 id="basic-usage">Basic Usage&lt;/h3>
&lt;ul>
&lt;li>delete inside parentheses (which can be replaced with any symbol)
&lt;ul>
&lt;li>&lt;code>di(&lt;/code>&lt;/li>
&lt;li>&lt;code>di&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>di'&lt;/code>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="split">Split&lt;/h3>
&lt;ul>
&lt;li>Horizontal: &lt;code>ctrl + w + s&lt;/code>&lt;/li>
&lt;li>Vertical: &lt;code>ctrl + w + v&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="replace-a-word-with-yanked-text">Replace a word with yanked text&lt;/h3>
&lt;pre tabindex="0">&lt;code>yiw Yank inner word (copy word under cursor, say &amp;#34;first&amp;#34;).
Move the cursor to another word (say &amp;#34;second&amp;#34;).
ciw Ctrl-R 0 Esc Change &amp;#34;second&amp;#34;, replacing it with &amp;#34;first&amp;#34;. (Ctrl-R: paste `0` register in insert mode)
Move the cursor to another word (say &amp;#34;third&amp;#34;).
. Repeat the operation (change word and replace it with &amp;#34;first&amp;#34;).
Move the cursor to another word and press . to repeat the change.
ref: https://vim.fandom.com/wiki/Replace_a_word_with_yanked_text
&lt;/code>&lt;/pre></content></item><item><title>Tmux Cheat Sheet</title><link>https://jinying-che.github.io/posts/tmux/</link><pubDate>Sat, 10 Jul 2021 11:18:14 +0800</pubDate><guid>https://jinying-che.github.io/posts/tmux/</guid><description>Session new session: tmux new -s name show session: tmux ls attach session with name: tmux a -t name detach from session: ctrl+b then d Panes split pane horizontally: ctrl+b then % split pane vertically: ctrl+b then &amp;quot; cloes current pane: ctrl+b then x Window Create current window: ctrl+b then c Close current window: ctrl+b then &amp;amp; Rename current window: ctrl+b then , Next window: ctrl+b then p Previous window: ctrl+b then n View in tmux ctrl+b then [</description><content>&lt;h3 id="session">Session&lt;/h3>
&lt;ul>
&lt;li>new session: &lt;code>tmux new -s name&lt;/code>&lt;/li>
&lt;li>show session: &lt;code>tmux ls&lt;/code>&lt;/li>
&lt;li>attach session with name: &lt;code>tmux a -t name&lt;/code>&lt;/li>
&lt;li>detach from session: &lt;code>ctrl+b&lt;/code> then &lt;code>d&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="panes">Panes&lt;/h3>
&lt;ul>
&lt;li>split pane horizontally: &lt;code>ctrl+b&lt;/code> then &lt;code>%&lt;/code>&lt;/li>
&lt;li>split pane vertically: &lt;code>ctrl+b&lt;/code> then &lt;code>&amp;quot;&lt;/code>&lt;/li>
&lt;li>cloes current pane: &lt;code>ctrl+b&lt;/code> then &lt;code>x&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="window">Window&lt;/h3>
&lt;ul>
&lt;li>Create current window: &lt;code>ctrl+b&lt;/code> then &lt;code>c&lt;/code>&lt;/li>
&lt;li>Close current window: &lt;code>ctrl+b&lt;/code> then &lt;code>&amp;amp;&lt;/code>&lt;/li>
&lt;li>Rename current window: &lt;code>ctrl+b&lt;/code> then &lt;code>,&lt;/code>&lt;/li>
&lt;li>Next window: &lt;code>ctrl+b&lt;/code> then &lt;code>p&lt;/code>&lt;/li>
&lt;li>Previous window: &lt;code>ctrl+b&lt;/code> then &lt;code>n&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="view-in-tmux">View in tmux&lt;/h3>
&lt;p>&lt;code>ctrl+b&lt;/code> then &lt;code>[&lt;/code>&lt;/p>
&lt;hr>
&lt;p>Reference&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://tmuxcheatsheet.com/">https://tmuxcheatsheet.com/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Golang Standard Library</title><link>https://jinying-che.github.io/posts/go/go_std/</link><pubDate>Sun, 27 Jun 2021 17:34:13 +0800</pubDate><guid>https://jinying-che.github.io/posts/go/go_std/</guid><description>&lt;p>Dive into golang standard library, where we can learn how high quality code is written and what the golang convention and style is.&lt;/p></description><content>&lt;p>Dive into golang standard library, where we can learn how high quality code is written and what the golang convention and style is.&lt;/p>
&lt;h3 id="syncwaitgroup">sync.WaitGroup&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// go version 1.18rc1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">WaitGroup&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">noCopy&lt;/span> &lt;span style="color:#a6e22e">noCopy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 64-bit value: high 32 bits are counter, low 32 bits are waiter count.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 64-bit atomic operations require 64-bit alignment, but 32-bit
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// compilers only guarantee that 64-bit fields are 32-bit aligned.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// For this reason on 32 bit architectures we need to check in state()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// if state1 is aligned or not, and dynamically &amp;#34;swap&amp;#34; the field order if
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// needed.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">state1&lt;/span> &lt;span style="color:#66d9ef">uint64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">state2&lt;/span> &lt;span style="color:#66d9ef">uint32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://jinying-che.github.io/images/wait_group.png" alt="wait group state byte representation">&lt;/p>
&lt;p>It&amp;rsquo;s based on golang &lt;strong>semaphore&lt;/strong> model, implemented by &lt;code>runtime_Semrelease&lt;/code> and &lt;code>runtime_Semacquire&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>semaphore is common mechanism used in concurrent progamming, like &lt;a href="https://en.wikipedia.org/wiki/Readers%E2%80%93writers_problem">Readers–writers problem&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>Here is an example demostrating how it works, there are three tasks added, one task is done before &lt;code>Wait()&lt;/code>, the other two are done after &lt;code>Wait()&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;code>Add()&lt;/code> increases or decreases the counter, only reset waiter to 0 when waiter != 0 (which means &lt;code>Wait&lt;/code> has already been called then) and release the semaphore.&lt;/li>
&lt;li>&lt;code>Wait()&lt;/code> increases the waiter and try to acquire the semaphore.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://jinying-che.github.io/images/wait_group_case.png" alt="wait group case">&lt;/p>
&lt;h3 id="syncpool">sync.Pool&lt;/h3></content></item><item><title>HHKB</title><link>https://jinying-che.github.io/posts/hhkb/</link><pubDate>Thu, 24 Jun 2021 21:20:23 +0800</pubDate><guid>https://jinying-che.github.io/posts/hhkb/</guid><description>CheatSheet BS and Delete Win mode: Fn+Control+w Mac mode: Fn+Control+m</description><content>&lt;h4 id="cheatsheet">CheatSheet&lt;/h4>
&lt;ul>
&lt;li>BS and Delete
&lt;ul>
&lt;li>Win mode: &lt;code>Fn+Control+w&lt;/code>&lt;/li>
&lt;li>Mac mode: &lt;code>Fn+Control+m&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://jinying-che.github.io/images/hhkb.png" alt="KKHB CheatSheet">&lt;/p></content></item><item><title>Setup Shadowsocks Server And Client</title><link>https://jinying-che.github.io/posts/shadowsocks/</link><pubDate>Fri, 23 Apr 2021 09:22:08 +0800</pubDate><guid>https://jinying-che.github.io/posts/shadowsocks/</guid><description>&lt;p>In this article, we will setup the Shadowsock Server and Client from scratch and solve the issue during and after the setup.&lt;/p></description><content>&lt;p>In this article, we will setup the Shadowsock Server and Client from scratch and solve the issue during and after the setup.&lt;/p>
&lt;h2 id="shadowsocks-server">Shadowsocks Server&lt;/h2>
&lt;hr>
&lt;p>Install the latest &lt;code>Ubuntu&lt;/code> in vps, my vps provier is &lt;a href="https://bandwagonhost.com/index.php">https://bandwagonhost.com/index.php&lt;/a>, the route is: &lt;em>My Service &amp;gt; KiwiVM Control Panel &amp;gt; Install new OS&lt;/em>&lt;/p>
&lt;h3 id="1-installing-shadowsocks-libev">1. Installing Shadowsocks-libev&lt;/h3>
&lt;h4 id="install-snaphttpssnapcraftioabout">Install &lt;a href="https://snapcraft.io/about">Snap&lt;/a>&lt;/h4>
&lt;pre tabindex="0">&lt;code>$ sudo apt update
$ sudo apt install snapd
$ sudo reboot
&lt;/code>&lt;/pre>&lt;h4 id="install-shadowsocks-libevhttpsgithubcomshadowsocksshadowsocks-libev">Install &lt;a href="https://github.com/shadowsocks/shadowsocks-libev">Shadowsocks-libev&lt;/a>&lt;/h4>
&lt;pre tabindex="0">&lt;code>$ sudo snap install shadowsocks-libev
&lt;/code>&lt;/pre>&lt;h3 id="2-configuring-proxy-server">2. Configuring proxy server&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># first time to use snap, this path should be the config convention of Snap apps &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mkdir -p /var/snap/shadowsocks-libev/common/etc/shadowsocks-libev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo vim /var/snap/shadowsocks-libev/common/etc/shadowsocks-libev/config.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="configjson">config.json&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;server&amp;#34;&lt;/span>:[&lt;span style="color:#e6db74">&amp;#34;::0&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;0.0.0.0&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;server_port&amp;#34;&lt;/span>:&lt;span style="color:#ae81ff">4443&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;password&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;your password&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;timeout&amp;#34;&lt;/span>:&lt;span style="color:#ae81ff">300&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;method&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;aes-256-gcm&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;nameserver&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;1.1.1.1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;mode&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;tcp_and_udp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note&lt;/strong>: &amp;ldquo;server&amp;rdquo;:[&amp;quot;::0&amp;quot;, &amp;ldquo;0.0.0.0&amp;rdquo;] &amp;ndash;&amp;gt; support IPv4 and IPv6&lt;/p>
&lt;h3 id="3-creating-systemd-service-unit-config">3. Creating systemd service unit config&lt;/h3>
&lt;h4 id="shadowsocks-libev-serverservice">shadowsocks-libev-server@.service&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ sudo vim /etc/systemd/system/shadowsocks-libev-server@.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Unit&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Description&lt;span style="color:#f92672">=&lt;/span>Shadowsocks-Libev Custom Server Service &lt;span style="color:#66d9ef">for&lt;/span> %I
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Documentation&lt;span style="color:#f92672">=&lt;/span>man:ss-server&lt;span style="color:#f92672">(&lt;/span>1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>After&lt;span style="color:#f92672">=&lt;/span>network-online.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>StartLimitIntervalSec&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">500&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>StartLimitBurst&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Service&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Type&lt;span style="color:#f92672">=&lt;/span>simple
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Restart&lt;span style="color:#f92672">=&lt;/span>always
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RestartSec&lt;span style="color:#f92672">=&lt;/span>5s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecStart&lt;span style="color:#f92672">=&lt;/span>/usr/bin/snap run shadowsocks-libev.ss-server -c /var/snap/shadowsocks-libev/common/etc/shadowsocks-libev/%i.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Install&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WantedBy&lt;span style="color:#f92672">=&lt;/span>multi-user.target
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Two things to take note:&lt;/p>
&lt;ul>
&lt;li>&lt;code>shadowsocks-libev-server@.service&lt;/code> is a filename (&lt;em>systemd style&lt;/em>)&lt;/li>
&lt;li>&lt;code>man systemd.service&lt;/code> to understand the details, btw it&amp;rsquo;s better to set &lt;code>Restart=always&lt;/code> if you prefer the log-term running&lt;/li>
&lt;/ul>
&lt;p>Start the service and make it managed by systemd&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Note that the @config is used to select the configuration file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo systemctl enable --now shadowsocks-libev-server@config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-troubleshooting">4. Troubleshooting&lt;/h3>
&lt;h4 id="command">Command&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Status&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo systemctl status shadowsocks-libev-server@config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Log&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Check the certain process that managed by systemd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># journalctl is a command for viewing logs collected by systemd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ journalctl -u shadowsocks-libev-server@config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Check all the processes log&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cd /var/log/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ less syslog &lt;span style="color:#75715e"># can check any related log, TBD&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="cases">Cases&lt;/h4>
&lt;h5 id="process-stopped-unexpectedly">Process stopped unexpectedly&lt;/h5>
&lt;ul>
&lt;li>Root Cause: process that managed by systemd will stop when user exit the session&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;a href="https://github.com/systemd/systemd/issues/8486">https://github.com/systemd/systemd/issues/8486&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>Fix: &lt;code>loginctl enable-linger&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="shadowsocks-client">Shadowsocks Client&lt;/h2>
&lt;hr>
&lt;h3 id="chrome">Chrome&lt;/h3>
&lt;p>Enable the socks5 proxy for Chrome in macOS&lt;/p>
&lt;ol>
&lt;li>&lt;code>brew install shadowsocks-libev&lt;/code>&lt;/li>
&lt;li>run &lt;code>ss-local -h&lt;/code> to understand how to setup shadowsocks client locally, for example:
&lt;ul>
&lt;li>&lt;code>ss-local -s server_ip -p port -k password -m aes-256-cfb -l 1081 -v&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>install and setup SwitchyOmeg for Chrome:&lt;/li>
&lt;li>import &lt;a href="https://shadowsockshelp.github.io/Shadowsocks/Chrome.html">GFW List&lt;/a> and enable the auto-switch&lt;/li>
&lt;/ol>
&lt;h3 id="global-terminal">Global (Terminal)&lt;/h3>
&lt;p>Some request from termial or other Apps are supposed to go through the socks5 tunnel as well, the following steps will forward the traffic to the local port that listened by the shadowsocks client:&lt;/p>
&lt;ol>
&lt;li>setup helper function in bash or zsh profile, so that it&amp;rsquo;s able to control the proxy manually in the current terminal session via &lt;code>proxy-on&lt;/code> or &lt;code>proxy-off&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> proxy-off&lt;span style="color:#f92672">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unset http_proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unset https_proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;proxy off&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> proxy-on&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export no_proxy&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;localhost,127.0.0.1,localaddress,.localdomain.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export http_proxy&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;socks5://127.0.0.1:1081&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export https_proxy&lt;span style="color:#f92672">=&lt;/span>$http_proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;proxy on: &lt;/span>$http_proxy&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>run &lt;code>ss-local ... -v&lt;/code>&lt;/li>
&lt;li>test via &lt;code>curl cip.cc&lt;/code> or &lt;code>curl ifconfig.me&lt;/code>, by right the ip that running shadowsocks server should be printed&lt;/li>
&lt;/ol>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.freedesktop.org/software/systemd/man/systemd.service.html">systemd config&lt;/a> or check by &lt;code>man systemd.service&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://www.linuxbabe.com/ubuntu/shadowsocks-libev-proxy-server-ubuntu">https://www.linuxbabe.com/ubuntu/shadowsocks-libev-proxy-server-ubuntu&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://upcloud.com/community/tutorials/install-shadowsocks-libev-socks5-proxy/">https://upcloud.com/community/tutorials/install-shadowsocks-libev-socks5-proxy/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://unix.stackexchange.com/questions/225401/how-to-see-full-log-from-systemctl-status-service">https://unix.stackexchange.com/questions/225401/how-to-see-full-log-from-systemctl-status-service&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://shadowsockshelp.github.io/Shadowsocks/Chrome.html">https://shadowsockshelp.github.io/Shadowsocks/Chrome.html&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Brief Introduction of Network Hardware</title><link>https://jinying-che.github.io/posts/network/hardware/</link><pubDate>Mon, 05 Apr 2021 23:11:29 +0800</pubDate><guid>https://jinying-che.github.io/posts/network/hardware/</guid><description>&lt;p>The hardware inlucded in this post are Hub, Switch, Router, Modem, AP&lt;/p></description><content>&lt;p>The hardware inlucded in this post are Hub, Switch, Router, Modem, AP&lt;/p>
&lt;h4 id="hub-and-switch">Hub and Switch&lt;/h4>
&lt;p>The purpose of both is to connect the internal network (LAN), they do not know IP&lt;/p>
&lt;h5 id="hub">Hub&lt;/h5>
&lt;ul>
&lt;li>It is not intelligent, what it knows is only the ports and the devices that is connected to the ports&lt;/li>
&lt;li>It does not filter any data or has intelligence as to where the data is supposed to be sent&lt;/li>
&lt;li>When a data packet comes into one port, it will rebroadcast the data to every port that has a device connected to it&lt;/li>
&lt;li>It operates at the &lt;a href="https://en.wikipedia.org/wiki/OSI_model#Layer_1:_Physical_Layer">Physical Layer of OSI&lt;/a>&lt;/li>
&lt;/ul>
&lt;h5 id="switch">Switch&lt;/h5>
&lt;ul>
&lt;li>It&amp;rsquo;s intelligent and able to learn physical(MAC) address of devices that are connected to it&lt;/li>
&lt;li>When a data packet is sent to a switch, it&amp;rsquo;s only directed to the intended destination port&lt;/li>
&lt;li>It operates at the &lt;a href="https://en.wikipedia.org/wiki/OSI_model#Layer_2:_Data_Link_Layer">Data Link Layer of OSI&lt;/a> (not including the &lt;strong>multilayer&lt;/strong> switch)&lt;/li>
&lt;/ul>
&lt;h4 id="router">Router&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>It routes or forwards data from network to another base on IP address&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It&amp;rsquo;s the &lt;strong>Gateway&lt;/strong> of a network, it detemines if the packet was meant for it&amp;rsquo;s own network&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It normally works at the &lt;a href="https://en.wikipedia.org/wiki/OSI_model#Layer_3:_Network_Layer">Network layer of OSI&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://jinying-che.github.io/images/hub_switch_router.png" alt="Hub vs Switch vs Router">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="modem">Modem&lt;/h4>
&lt;p>Modems (modulators-demodulators) are used to transmit digital signals over analog telephone lines&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Modulators: it modulates &lt;strong>outgoing&lt;/strong> digital signals into an analog signal&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Demodulator: it demodulate &lt;strong>incoming&lt;/strong> analog signals into a digital signal&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Modems work on both the Physical and Data Link layers.&lt;/p>
&lt;p>&lt;img src="https://jinying-che.github.io/images/modem.png" alt="Modem">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="access-point">Access Point&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>A Wireless AP relays data &lt;strong>a wired network&lt;/strong> and &lt;strong>wireless devices&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It&amp;rsquo;s basically wireless &lt;strong>hub&lt;/strong> or &lt;strong>bridge&lt;/strong> that&amp;rsquo;s used by wireless device to connect to an existing wired network&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A Wireless AP connects directly to an organization&amp;rsquo;s router where the router is connected directly to a modem, which gives the wireless device access to the internet&lt;/p>
&lt;/li>
&lt;li>
&lt;p>An AP works at the second OSI layer, the Data Link layer&lt;/p>
&lt;p>&lt;img src="https://jinying-che.github.io/images/ap.png" alt="Wireless Access Point">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="reference">Reference:&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://blog.netwrix.com/2019/01/08/network-devices-explained/">https://blog.netwrix.com/2019/01/08/network-devices-explained/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Ethernet_hub">https://en.wikipedia.org/wiki/Ethernet_hub&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/OSI_model">https://en.wikipedia.org/wiki/OSI_model&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=OxiY4yf6GGg">https://www.youtube.com/watch?v=OxiY4yf6GGg&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=Mad4kQ5835Y">https://www.youtube.com/watch?v=Mad4kQ5835Y&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=1z0ULvg_pW8">https://www.youtube.com/watch?v=1z0ULvg_pW8&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Algorithm: How I leetcode</title><link>https://jinying-che.github.io/posts/algorithm/</link><pubDate>Sat, 13 Feb 2021 16:31:28 +0800</pubDate><guid>https://jinying-che.github.io/posts/algorithm/</guid><description>&lt;p>When do you usually use &lt;a href="https://leetcode.com/">leetcode&lt;/a>? For most of people, I think, the answer is to prepare the interview, me too.&lt;/p>
&lt;p>&lt;em>This post will be kept updating&lt;/em>&lt;/p></description><content>&lt;p>When do you usually use &lt;a href="https://leetcode.com/">leetcode&lt;/a>? For most of people, I think, the answer is to prepare the interview, me too.&lt;/p>
&lt;p>&lt;em>This post will be kept updating&lt;/em>&lt;/p>
&lt;blockquote>
&lt;p>Algorithm is basing on the &lt;strong>Data Structure&lt;/strong>, the algorithm that I mentioned below includes the Data Structure by default.&lt;/p>
&lt;/blockquote>
&lt;p>But more than that, the algorithm that you used to resolve the problem is really useful in the production, which also make you write the effective code in the daily work. Leetcode helps interview a lot, yes indeed, we sometimes can see that there are some guys who get the Google offer by leetcode, it&amp;rsquo;s cool, meanwhile I believe that algorithm we learned can makes us become a better engineer or a real &lt;strong>Geek&lt;/strong>.&lt;/p>
&lt;p>This post is showing that how I leetcode, it&amp;rsquo;s only my personal approach, I usually try to understand the one algorithm completely, then try to search by tag and resolve the problems from easy to hard.&lt;/p>
&lt;p>Enjoy the Algorithm, let&amp;rsquo;s leetcode!&lt;/p>
&lt;h3 id="data-structure">Data Structure&lt;/h3>
&lt;h4 id="array">Array&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/first-missing-positive/">41. First Missing Positive&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/first-missing-positive/discuss/1076050/Golang41one-general-way-on-geek-way">discussion&lt;/a>]&lt;/li>
&lt;/ul>
&lt;h4 id="linked-list">Linked List&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/reverse-linked-list/">206. Reverse Linked List&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/reverse-linked-list/discuss/1057045/golang206recursion-is-beautiful">discussion&lt;/a>]&lt;/li>
&lt;/ul>
&lt;h4 id="tree">Tree&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/invert-binary-tree/">226. Invert Binary Tree&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/maximum-depth-of-binary-tree/">104. maximum-depth-of-binary-tree&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;blockquote>
&lt;p>The solutions for following three problems are similiar, which all base on the inorder traversal with stack&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/validate-binary-search-tree/discuss/32112/Learn-one-iterative-inorder-traversal-apply-it-to-multiple-tree-questions-(Java-Solution)">Discussion - Learn one iterative inorder traversal, apply it to multiple tree questions (Java Solution)&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/binary-tree-inorder-traversal/">94. Binary Tree Inorder Traversal&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/validate-binary-search-tree/">98. Validate Binary Search Tree&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/kth-smallest-element-in-a-bst/">230. Kth Smallest Element in a BST&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="heap">Heap&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/top-k-frequent-elements/">347. Top K Frequent Elements&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/top-k-frequent-elements/discuss/1108972/Golang347-Implement-the-Min-Heap-on-my-own">disscussion: Implement the Min Heap on my own&lt;/a>]&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended/">1353. Maximum Number of Events That Can Be Attended&lt;/a> &amp;ndash; [heap, breedy, sort]&lt;/li>
&lt;/ul>
&lt;h3 id="algorithm">Algorithm&lt;/h3>
&lt;h4 id="recursion">Recursion&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/reverse-linked-list/">206. Reverse Linked List&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/reverse-linked-list/discuss/1057045/golang206recursion-is-beautiful">discussion&lt;/a>]&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/fibonacci-number/">509. Fibonacci Number&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/fibonacci-number/discuss/1057880/golang509four-ways-to-resolve-fibonacci-number">discussion&lt;/a>]&lt;/li>
&lt;/ul>
&lt;h4 id="dynamic-programming">Dynamic Programming&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/fibonacci-number/">509. Fibonacci Number&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/fibonacci-number/discuss/1057880/golang509four-ways-to-resolve-fibonacci-number">discussion&lt;/a>]&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/climbing-stairs/">70. Climbing Stairs&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="binary-search">Binary Search&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/binary-search/">704. Binary Search&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/binary-search/discuss/1055849/golang704beautiful-code-of-binary-search">discussion&lt;/a>]&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/">34. Find First and Last Position of Element in Sorted Array&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/discuss/1056313/golang34easy-way-to-understand-with-two-binary-search">discussion&lt;/a>]&lt;/li>
&lt;/ul>
&lt;h4 id="quick-sort">Quick Sort&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/kth-largest-element-in-an-array/">215. Kth Largest Element in an Array&lt;/a> &amp;ndash; &lt;a href="https://leetcode.com/problems/kth-largest-element-in-an-array/discuss/1108891/Golang215two-partition-schema-of-quick-select">[discussion: two partition schema]&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/submissions/detail/465797355/">347. Top K Frequent Elements&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="greedy">Greedy&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/partition-labels/">763. Partition Labels&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="design">Design&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/lru-cache/">146. LRU Cache&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/lfu-cache/">460. LFU Cache&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/lfu-cache/discuss/1086255/Golang460two-ways-to-resolve-LFU-Cache">discussion&lt;/a>]&lt;/li>
&lt;/ul></content></item><item><title>Setup Universal Ctags for Mac</title><link>https://jinying-che.github.io/posts/c/ctags/</link><pubDate>Sat, 23 Jan 2021 15:16:29 +0800</pubDate><guid>https://jinying-che.github.io/posts/c/ctags/</guid><description>&lt;p>At the Beginning of this year, I&amp;rsquo;m going to start reading &lt;em>Computer System A Programmer's Perspective&lt;/em>, this whole book introduces the different aspects of computer system basing on C language, and there&amp;rsquo;s also plenty of C demos provided in the &lt;a href="http://csapp.cs.cmu.edu/3e/code.html">web&lt;/a>, to navigate the code, I try to use &lt;strong>ctags&lt;/strong>.&lt;/p></description><content>&lt;p>At the Beginning of this year, I&amp;rsquo;m going to start reading &lt;em>Computer System A Programmer's Perspective&lt;/em>, this whole book introduces the different aspects of computer system basing on C language, and there&amp;rsquo;s also plenty of C demos provided in the &lt;a href="http://csapp.cs.cmu.edu/3e/code.html">web&lt;/a>, to navigate the code, I try to use &lt;strong>ctags&lt;/strong>.&lt;/p>
&lt;h3 id="what-is-universal-ctags">What is Universal Ctags?&lt;/h3>
&lt;p>&lt;a href="https://ctags.io/">Universal Ctags&lt;/a> (abbreviated as u-ctags) is a maintained implementation of ctags. ctags generates an index (or tag) file of language objects found in source files for programming languages. This index makes it easy for text editors and other tools to locate the indexed items.&lt;/p>
&lt;h3 id="install-in-mac">Install in Mac&lt;/h3>
&lt;p>&lt;strong>brew tap&lt;/strong>: A &lt;a href="https://docs.brew.sh/Taps">tap&lt;/a> is Homebrew-speak for a Git repository containing extra formulae.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>brew tap universal-ctags/universal-ctags
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brew install --HEAD universal-ctags
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configure-vimrc">Configure .vimrc&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#search the .tags in the current directory, will keep searching the upper directory if not found&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set tags&lt;span style="color:#f92672">=&lt;/span>./.tags;,.tags
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="setup-alias-for-ctags">Setup alias for ctags&lt;/h3>
&lt;p>Because there is already a &lt;strong>ctags&lt;/strong> command in Mac, which is &lt;strong>/usr/bin/ctags&lt;/strong>, we need to create an alias of &lt;code>ctags&lt;/code> for overwriting.&lt;/p>
&lt;p>Add this in &lt;strong>.zshrc&lt;/strong> (suppose to use &lt;strong>zsh&lt;/strong>)&lt;/p>
&lt;ul>
&lt;li>&lt;code>alias ctags=&amp;quot;/usr/local/bin/ctags&amp;quot;&lt;/code>
&lt;blockquote>
&lt;p>&lt;strong>&lt;code>which ctags&lt;/code>&lt;/strong> to verify&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h3 id="generate-tag-recursively">Generate tag recursively&lt;/h3>
&lt;p>In the root of the project:&lt;/p>
&lt;ul>
&lt;li>&lt;code>ctags -f .tags -R .&lt;/code>
&lt;ul>
&lt;li>&lt;strong>-f .tags&lt;/strong> indicates that the output file is &lt;strong>.tags&lt;/strong>&lt;/li>
&lt;li>&lt;strong>-R&lt;/strong> means &lt;strong>--recurse&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></content></item><item><title>How to profile Golang Program</title><link>https://jinying-che.github.io/posts/go/diagnostics/</link><pubDate>Mon, 30 Nov 2020 08:35:51 +0800</pubDate><guid>https://jinying-che.github.io/posts/go/diagnostics/</guid><description>First of all, this document is in progress and will keep updated.
Diagnostic by the http call is usually a convinient way in pratice. What we need to do is only two steps before starting the program:
import _ &amp;quot;net/http/pprof&amp;quot; http.ListenAndServe(&amp;quot;the address that defined in advance&amp;quot;, better use privaty ServerMux instead of the default one) Profile The port 6060 is an example that defined for the http listening. The default time is 30s that go pprof will collect the samples which used to profile without the specificatoin.</description><content>&lt;p>First of all, this document is in progress and will keep updated.&lt;/p>
&lt;p>Diagnostic by the http call is usually a convinient way in pratice. What we need to do is only two steps before starting the program:&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;code>import _ &amp;quot;net/http/pprof&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>http.ListenAndServe(&amp;quot;the address that defined in advance&amp;quot;, better use privaty ServerMux instead of the default one)&lt;/code>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="profile">Profile&lt;/h2>
&lt;p>The port 6060 is an example that defined for the http listening. The default time is 30s that go pprof will collect the samples which used to profile without the specificatoin.(I have not find the way to specify btw)&lt;/p>
&lt;ul>
&lt;li>http://localhost:6060/debug/pprof/goroutine&lt;/li>
&lt;li>http://localhost:6060/debug/pprof/heap&lt;/li>
&lt;li>http://localhost:6060/debug/pprof/threadcreate&lt;/li>
&lt;li>http://localhost:6060/debug/pprof/block&lt;/li>
&lt;li>http://localhost:6060/debug/pprof/mutex&lt;/li>
&lt;li>http://localhost:6060/debug/pprof/profile&lt;/li>
&lt;/ul>
&lt;p>Here is a demo of the profilling.&lt;/p>
&lt;ul>
&lt;li>trigger:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>curl localhost:6060/debug/pprof/profile &amp;gt; profile.pprof&lt;/code> (the filename can arbitrary)&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>analyse:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>go tool pprof -http :6060 ./profile.pprof&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h2 id="trace">Trace&lt;/h2>
&lt;ul>
&lt;li>http://localhost:6060/debug/pprof/trace&lt;/li>
&lt;/ul>
&lt;p>Here is a demo of the trace.&lt;/p>
&lt;ul>
&lt;li>trigger:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>curl localhost:6060/debug/pprof/trace &amp;gt; profile.trace&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>analyse:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>go tool trace -http :6060 ./profile.trace&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="ref">Ref&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/google/pprof">https://github.com/google/pprof&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://golang.org/doc/diagnostics.html">https://golang.org/doc/diagnostics.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://golang.org/pkg/runtime/pprof/">https://golang.org/pkg/runtime/pprof/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jvns.ca/blog/2017/09/24/profiling-go-with-pprof/">https://jvns.ca/blog/2017/09/24/profiling-go-with-pprof/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>How does golang implement the Rate Limiter</title><link>https://jinying-che.github.io/posts/go/ratelimiter/</link><pubDate>Fri, 20 Nov 2020 12:04:09 +0800</pubDate><guid>https://jinying-che.github.io/posts/go/ratelimiter/</guid><description>Core concept burst: the size of the bucket which is possible more than the limit token: refer to https://en.wikipedia.org/wiki/Token_bucket limit: the number of tokens that is obtained per second Core function // reserveN is a helper method for AllowN, ReserveN, and WaitN. // maxFutureReserve specifies the maximum reservation wait duration allowed. // reserveN returns Reservation, not *Reservation, to avoid allocation in AllowN and WaitN. func (lim *Limiter) reserveN(now time.Time, n int, maxFutureReserve time.</description><content>&lt;h2 id="core-concept">Core concept&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>burst&lt;/strong>: the size of the bucket which is possible more than the limit&lt;/li>
&lt;li>&lt;strong>token&lt;/strong>: refer to &lt;a href="https://en.wikipedia.org/wiki/Token_bucket">https://en.wikipedia.org/wiki/Token_bucket&lt;/a>&lt;/li>
&lt;li>&lt;strong>limit&lt;/strong>: the number of tokens that is obtained per second&lt;/li>
&lt;/ul>
&lt;h2 id="core-function">Core function&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// reserveN is a helper method for AllowN, ReserveN, and WaitN.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// maxFutureReserve specifies the maximum reservation wait duration allowed.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// reserveN returns Reservation, not *Reservation, to avoid allocation in AllowN and WaitN.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">lim&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Limiter&lt;/span>) &lt;span style="color:#a6e22e">reserveN&lt;/span>(&lt;span style="color:#a6e22e">now&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Time&lt;/span>, &lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>, &lt;span style="color:#a6e22e">maxFutureReserve&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Duration&lt;/span>) &lt;span style="color:#a6e22e">Reservation&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">mu&lt;/span>.&lt;span style="color:#a6e22e">Lock&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">limit&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#a6e22e">Inf&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">mu&lt;/span>.&lt;span style="color:#a6e22e">Unlock&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">Reservation&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ok&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>: &lt;span style="color:#a6e22e">lim&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">tokens&lt;/span>: &lt;span style="color:#a6e22e">n&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">timeToAct&lt;/span>: &lt;span style="color:#a6e22e">now&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">now&lt;/span>, &lt;span style="color:#a6e22e">last&lt;/span>, &lt;span style="color:#a6e22e">tokens&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">advance&lt;/span>(&lt;span style="color:#a6e22e">now&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Calculate the remaining number of tokens resulting from the request.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">tokens&lt;/span> &lt;span style="color:#f92672">-=&lt;/span> float64(&lt;span style="color:#a6e22e">n&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Calculate the wait duration
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">waitDuration&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Duration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">tokens&lt;/span> &amp;lt; &lt;span style="color:#ae81ff">0&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">waitDuration&lt;/span> = &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">limit&lt;/span>.&lt;span style="color:#a6e22e">durationFromTokens&lt;/span>(&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">tokens&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Decide result
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">ok&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">burst&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a6e22e">waitDuration&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#a6e22e">maxFutureReserve&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Prepare reservation
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">Reservation&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ok&lt;/span>: &lt;span style="color:#a6e22e">ok&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>: &lt;span style="color:#a6e22e">lim&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">limit&lt;/span>: &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">limit&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">ok&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">tokens&lt;/span> = &lt;span style="color:#a6e22e">n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">timeToAct&lt;/span> = &lt;span style="color:#a6e22e">now&lt;/span>.&lt;span style="color:#a6e22e">Add&lt;/span>(&lt;span style="color:#a6e22e">waitDuration&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Update state
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">ok&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">last&lt;/span> = &lt;span style="color:#a6e22e">now&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">tokens&lt;/span> = &lt;span style="color:#a6e22e">tokens&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">lastEvent&lt;/span> = &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">timeToAct&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">last&lt;/span> = &lt;span style="color:#a6e22e">last&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">mu&lt;/span>.&lt;span style="color:#a6e22e">Unlock&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">r&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item></channel></rss>