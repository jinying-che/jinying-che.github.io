<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://jinying-che.github.io/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 02 Oct 2024 09:52:53 +0800</lastBuildDate><atom:link href="https://jinying-che.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>rate vs irate</title><link>https://jinying-che.github.io/posts/rate_vs_irate/</link><pubDate>Wed, 02 Oct 2024 09:52:53 +0800</pubDate><guid>https://jinying-che.github.io/posts/rate_vs_irate/</guid><description>&lt;p>&lt;img alt="rate_vs_irate" src="https://jinying-che.github.io/images/rate_vs_irate.png">&lt;/p>
&lt;p>&lt;code>rate&lt;/code> and &lt;code>irate&lt;/code> are based on the &lt;strong>counter&lt;/strong> type metrics.&lt;/p>
&lt;p>&lt;code>rate(v range-vector)&lt;/code> calculates the per-second average rate of increase of the time series in the &lt;strong>range vector&lt;/strong>, for example, &lt;code>rate(http_request_total{method=&amp;quot;post&amp;quot;}[1m])&lt;/code>&lt;/p>
&lt;ol>
&lt;li>It&amp;rsquo;s a rate: &lt;code>total(now) - total(now - 1m) / 60s&lt;/code>&lt;/li>
&lt;li>It&amp;rsquo;s an average rate: over 1m&lt;/li>
&lt;li>Average is calculated over the time range, that&amp;rsquo;s why range vector is required.&lt;/li>
&lt;li>It provides a &lt;strong>smoother&lt;/strong> trend.&lt;/li>
&lt;/ol>
&lt;p>&lt;code>irate(v range-vector)&lt;/code> calculates the per-second instant rate of increase of the time series in the range vector.&lt;/p></description><content>&lt;p>&lt;img alt="rate_vs_irate" src="https://jinying-che.github.io/images/rate_vs_irate.png">&lt;/p>
&lt;p>&lt;code>rate&lt;/code> and &lt;code>irate&lt;/code> are based on the &lt;strong>counter&lt;/strong> type metrics.&lt;/p>
&lt;p>&lt;code>rate(v range-vector)&lt;/code> calculates the per-second average rate of increase of the time series in the &lt;strong>range vector&lt;/strong>, for example, &lt;code>rate(http_request_total{method=&amp;quot;post&amp;quot;}[1m])&lt;/code>&lt;/p>
&lt;ol>
&lt;li>It&amp;rsquo;s a rate: &lt;code>total(now) - total(now - 1m) / 60s&lt;/code>&lt;/li>
&lt;li>It&amp;rsquo;s an average rate: over 1m&lt;/li>
&lt;li>Average is calculated over the time range, that&amp;rsquo;s why range vector is required.&lt;/li>
&lt;li>It provides a &lt;strong>smoother&lt;/strong> trend.&lt;/li>
&lt;/ol>
&lt;p>&lt;code>irate(v range-vector)&lt;/code> calculates the per-second instant rate of increase of the time series in the range vector.&lt;/p>
&lt;ol>
&lt;li>similar to &lt;code>rate&lt;/code>, but it&amp;rsquo;s an &lt;strong>sensitive&lt;/strong> rate as it&amp;rsquo;s based on &lt;strong>the last two data points&lt;/strong>.&lt;/li>
&lt;li>why calculate last two points still needs [1m] range? it&amp;rsquo;s for looking back when the data point is missed&lt;/li>
&lt;/ol>
&lt;h2 id="reference">Reference:&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.robustperception.io/how-does-a-prometheus-counter-work/">https://www.robustperception.io/how-does-a-prometheus-counter-work/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://prometheus.io/docs/prometheus/latest/querying/functions/">https://prometheus.io/docs/prometheus/latest/querying/functions/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>systemd</title><link>https://jinying-che.github.io/posts/systemd/</link><pubDate>Wed, 03 Jul 2024 08:19:14 +0800</pubDate><guid>https://jinying-che.github.io/posts/systemd/</guid><description>&lt;h2 id="what-is-systemd">what is systemd?&lt;/h2>
&lt;ol>
&lt;li>systemd is a suite of basic building blocks for a Linux system.&lt;/li>
&lt;li>It provides a system and service manager that runs as PID 1 and starts the rest of the system.&lt;/li>
&lt;/ol>
&lt;h2 id="where-is-the-config-file">Where is the config file?&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>systemd-analyze unit-paths
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The systemd manager scans many directories to load unit files, for user-defined units:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>/etc/systemd/system
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="unit-file">Unit File&lt;/h2>
&lt;p>A unit file is a plain text ini-style file that encodes information about a service, a socket, a device, a mount point, an automount point, a swap file or partition, a start-up target, a watched file system path, a timer controlled and supervised by systemd(1), a resource management slice or a group of externally created processes.&lt;/p></description><content>&lt;h2 id="what-is-systemd">what is systemd?&lt;/h2>
&lt;ol>
&lt;li>systemd is a suite of basic building blocks for a Linux system.&lt;/li>
&lt;li>It provides a system and service manager that runs as PID 1 and starts the rest of the system.&lt;/li>
&lt;/ol>
&lt;h2 id="where-is-the-config-file">Where is the config file?&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>systemd-analyze unit-paths
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The systemd manager scans many directories to load unit files, for user-defined units:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>/etc/systemd/system
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="unit-file">Unit File&lt;/h2>
&lt;p>A unit file is a plain text ini-style file that encodes information about a service, a socket, a device, a mount point, an automount point, a swap file or partition, a start-up target, a watched file system path, a timer controlled and supervised by systemd(1), a resource management slice or a group of externally created processes.&lt;/p>
&lt;p>e.g. sshd service unit file, &lt;code>cat /lib/systemd/system/sshd.service&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Unit&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Description&lt;span style="color:#f92672">=&lt;/span>OpenBSD Secure Shell server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Documentation&lt;span style="color:#f92672">=&lt;/span>man:sshd&lt;span style="color:#f92672">(&lt;/span>8&lt;span style="color:#f92672">)&lt;/span> man:sshd_config&lt;span style="color:#f92672">(&lt;/span>5&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>After&lt;span style="color:#f92672">=&lt;/span>network.target auditd.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ConditionPathExists&lt;span style="color:#f92672">=&lt;/span>!/etc/ssh/sshd_not_to_be_run
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Service&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EnvironmentFile&lt;span style="color:#f92672">=&lt;/span>-/etc/default/ssh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecStartPre&lt;span style="color:#f92672">=&lt;/span>/usr/sbin/sshd -t
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecStart&lt;span style="color:#f92672">=&lt;/span>/usr/sbin/sshd -D $SSHD_OPTS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecReload&lt;span style="color:#f92672">=&lt;/span>/usr/sbin/sshd -t
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecReload&lt;span style="color:#f92672">=&lt;/span>/bin/kill -HUP $MAINPID
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>KillMode&lt;span style="color:#f92672">=&lt;/span>process
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Restart&lt;span style="color:#f92672">=&lt;/span>on-failure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RestartPreventExitStatus&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">255&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Type&lt;span style="color:#f92672">=&lt;/span>notify
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RuntimeDirectory&lt;span style="color:#f92672">=&lt;/span>sshd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RuntimeDirectoryMode&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0755&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Install&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WantedBy&lt;span style="color:#f92672">=&lt;/span>multi-user.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Alias&lt;span style="color:#f92672">=&lt;/span>sshd.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>WantedBy=multi-user.target&lt;/code> means the service will be started when the system enters multi-user mode. (equal to runlevel 2 in SysV init system)&lt;/p>
&lt;p>&lt;strong>Target&lt;/strong> A unit configuration file whose name ends in &amp;ldquo;.target&amp;rdquo; encodes information about a target unit of systemd. Target units are used to group units and to set synchronization points for ordering dependencies with other unit files.&lt;/p>
&lt;p>Target units provide a more flexible replacement for SysV runlevels in the classic SysV init system.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>lrwxrwxrwx &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">15&lt;/span> Nov &lt;span style="color:#ae81ff">22&lt;/span> &lt;span style="color:#ae81ff">2023&lt;/span> runlevel0.target -&amp;gt; poweroff.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwxrwxrwx &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">13&lt;/span> Nov &lt;span style="color:#ae81ff">22&lt;/span> &lt;span style="color:#ae81ff">2023&lt;/span> runlevel1.target -&amp;gt; rescue.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwxrwxrwx &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">17&lt;/span> Nov &lt;span style="color:#ae81ff">22&lt;/span> &lt;span style="color:#ae81ff">2023&lt;/span> runlevel2.target -&amp;gt; multi-user.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwxrwxrwx &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">17&lt;/span> Nov &lt;span style="color:#ae81ff">22&lt;/span> &lt;span style="color:#ae81ff">2023&lt;/span> runlevel3.target -&amp;gt; multi-user.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwxrwxrwx &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">17&lt;/span> Nov &lt;span style="color:#ae81ff">22&lt;/span> &lt;span style="color:#ae81ff">2023&lt;/span> runlevel4.target -&amp;gt; multi-user.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwxrwxrwx &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">16&lt;/span> Nov &lt;span style="color:#ae81ff">22&lt;/span> &lt;span style="color:#ae81ff">2023&lt;/span> runlevel5.target -&amp;gt; graphical.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwxrwxrwx &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">13&lt;/span> Nov &lt;span style="color:#ae81ff">22&lt;/span> &lt;span style="color:#ae81ff">2023&lt;/span> runlevel6.target -&amp;gt; reboot.target
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>e.g. multi-user.target&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat lib/systemd/system/multi-user.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Unit&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Description&lt;span style="color:#f92672">=&lt;/span>Multi-User System
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Documentation&lt;span style="color:#f92672">=&lt;/span>man:systemd.special&lt;span style="color:#f92672">(&lt;/span>7&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Requires&lt;span style="color:#f92672">=&lt;/span>basic.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Conflicts&lt;span style="color:#f92672">=&lt;/span>rescue.service rescue.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>After&lt;span style="color:#f92672">=&lt;/span>basic.target rescue.service rescue.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AllowIsolate&lt;span style="color:#f92672">=&lt;/span>yes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://systemd.io/">https://systemd.io/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Systemd">https://en.wikipedia.org/wiki/Systemd&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.baeldung.com/linux/systemd-target-multi-user">https://www.baeldung.com/linux/systemd-target-multi-user&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>alertmanager</title><link>https://jinying-che.github.io/posts/alertmanager/</link><pubDate>Wed, 29 May 2024 08:54:49 +0800</pubDate><guid>https://jinying-che.github.io/posts/alertmanager/</guid><description>&lt;h3 id="architecture">Architecture&lt;/h3>
&lt;p>&lt;img alt="arch" src="https://jinying-che.github.io/images/alertmanager.png">&lt;/p>
&lt;h3 id="design">Design&lt;/h3>
&lt;h5 id="1-no-dedicated-status-eg-firing-or-resolved">1. No dedicated status (e.g. firing or resolved)&lt;/h5>
&lt;p>differentiate the alert by &lt;code>EndAt&lt;/code> timestamp&lt;/p>
&lt;h5 id="2-group_wait-vs-group_interval-vs-repeat_interval">2. group_wait vs group_interval vs repeat_interval&lt;/h5>
&lt;p>&lt;img alt="group" src="https://jinying-che.github.io/images/am_group.png">&lt;/p>
&lt;h3 id="source-code">Source Code&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Entrance&lt;/strong>&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>api: &lt;code>api/v2/api.go&lt;/code>&lt;/li>
&lt;li>dispatch: &lt;code>dispatch/dispatch.go&lt;/code>&lt;/li>
&lt;/ul></description><content>&lt;h3 id="architecture">Architecture&lt;/h3>
&lt;p>&lt;img alt="arch" src="https://jinying-che.github.io/images/alertmanager.png">&lt;/p>
&lt;h3 id="design">Design&lt;/h3>
&lt;h5 id="1-no-dedicated-status-eg-firing-or-resolved">1. No dedicated status (e.g. firing or resolved)&lt;/h5>
&lt;p>differentiate the alert by &lt;code>EndAt&lt;/code> timestamp&lt;/p>
&lt;h5 id="2-group_wait-vs-group_interval-vs-repeat_interval">2. group_wait vs group_interval vs repeat_interval&lt;/h5>
&lt;p>&lt;img alt="group" src="https://jinying-che.github.io/images/am_group.png">&lt;/p>
&lt;h3 id="source-code">Source Code&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Entrance&lt;/strong>&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>api: &lt;code>api/v2/api.go&lt;/code>&lt;/li>
&lt;li>dispatch: &lt;code>dispatch/dispatch.go&lt;/code>&lt;/li>
&lt;/ul></content></item><item><title>v2ray setup</title><link>https://jinying-che.github.io/posts/v2ray/</link><pubDate>Sun, 19 May 2024 11:10:54 +0800</pubDate><guid>https://jinying-che.github.io/posts/v2ray/</guid><description>&lt;p>&lt;a href="https://github.com/v2fly/v2ray-core">V2Ray&lt;/a> is a tool under Project V. Project V is a project that includes a set of tools for building specific network environments, and V2Ray is the core one.&lt;/p>
&lt;h3 id="install">Install&lt;/h3>
&lt;h4 id="server">Server&lt;/h4>
&lt;p>The v2ray server is usually hosted in a linux server, the &lt;a href="https://github.com/v2fly/fhs-install-v2ray">official way&lt;/a> is to install with a script, which setups the systemd config as well.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># run with root privilege&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash &amp;lt;&lt;span style="color:#f92672">(&lt;/span>curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /usr/local/bin/v2ray
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /usr/local/share/v2ray/geoip.dat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /usr/local/share/v2ray/geosite.dat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /usr/local/etc/v2ray/config.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /var/log/v2ray/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /var/log/v2ray/access.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /var/log/v2ray/error.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /etc/systemd/system/v2ray.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /etc/systemd/system/v2ray@.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="client">Client&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># macos &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brew install v2ray
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="run">Run&lt;/h3>
&lt;h4 id="server-1">Server&lt;/h4>
&lt;p>For v2ray server, we use &lt;a href="https://systemd.io/">systemd&lt;/a> to manage the v2ray process in &lt;code>/usr/local/etc/v2ray/config.json&lt;/code> which is empty after installation. We modify the config based on the &lt;a href="https://www.v2fly.org/en_US/guide/start.html#server">Novice Guide&lt;/a>:&lt;/p></description><content>&lt;p>&lt;a href="https://github.com/v2fly/v2ray-core">V2Ray&lt;/a> is a tool under Project V. Project V is a project that includes a set of tools for building specific network environments, and V2Ray is the core one.&lt;/p>
&lt;h3 id="install">Install&lt;/h3>
&lt;h4 id="server">Server&lt;/h4>
&lt;p>The v2ray server is usually hosted in a linux server, the &lt;a href="https://github.com/v2fly/fhs-install-v2ray">official way&lt;/a> is to install with a script, which setups the systemd config as well.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># run with root privilege&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash &amp;lt;&lt;span style="color:#f92672">(&lt;/span>curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /usr/local/bin/v2ray
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /usr/local/share/v2ray/geoip.dat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /usr/local/share/v2ray/geosite.dat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /usr/local/etc/v2ray/config.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /var/log/v2ray/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /var/log/v2ray/access.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /var/log/v2ray/error.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /etc/systemd/system/v2ray.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>installed: /etc/systemd/system/v2ray@.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="client">Client&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># macos &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brew install v2ray
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="run">Run&lt;/h3>
&lt;h4 id="server-1">Server&lt;/h4>
&lt;p>For v2ray server, we use &lt;a href="https://systemd.io/">systemd&lt;/a> to manage the v2ray process in &lt;code>/usr/local/etc/v2ray/config.json&lt;/code> which is empty after installation. We modify the config based on the &lt;a href="https://www.v2fly.org/en_US/guide/start.html#server">Novice Guide&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;log&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;loglevel&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;warning&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;access&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/var/log/v2ray/access.log&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;error&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/var/log/v2ray/error.log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;inbounds&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;port&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">10086&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;protocol&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;vmess&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;settings&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;clients&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;b831381d-6324-4d53-ad4f-8cda48b30811&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;outbounds&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;protocol&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;freedom&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>run service via &lt;code>systemctl&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>systemctl enable v2ray.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl start v2ray.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># check status&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl status v2ray.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># check tcp port under LISTEN&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ss -tlp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="client-1">Client&lt;/h4>
&lt;p>follow the &lt;a href="https://www.v2fly.org/en_US/guide/start.html#client">Novice Guide&lt;/a> to setup the config and run: &lt;code>v2ray -c path/to/config.json&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>NOTE: To successfully connect, you need to make sure that the id and port are consistent with the client in the server configuration.&lt;/p>
&lt;/blockquote>
&lt;p>After setup the local proxy &lt;code>127.0.0.1:1081&lt;/code>, in order to route brower traffic to the v2ray tunnel, &lt;a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif">Proxy SwitchyOmega&lt;/a> is quite helpful.&lt;/p>
&lt;h3 id="reference">Reference&lt;/h3>
&lt;ul>
&lt;li>quick start: &lt;a href="https://www.v2fly.org/en_US/guide/install.html">https://www.v2fly.org/en_US/guide/install.html&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>GORM</title><link>https://jinying-che.github.io/posts/go/gorm/gorm/</link><pubDate>Sat, 16 Mar 2024 17:19:46 +0800</pubDate><guid>https://jinying-che.github.io/posts/go/gorm/gorm/</guid><description>&lt;h3 id="source-code">Source Code&lt;/h3>
&lt;p>When you run CRUD interface by gorm, what happened inside isn&amp;rsquo;t that straightforward, let&amp;rsquo;s take a look!&lt;/p>
&lt;h5 id="1-basic-gorm-usage">1. Basic gorm usage&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">users&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> []&lt;span style="color:#a6e22e">User&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#a6e22e">Name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Jinzhu&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">Age&lt;/span>: &lt;span style="color:#ae81ff">18&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#a6e22e">Name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Jackson&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">Age&lt;/span>: &lt;span style="color:#ae81ff">19&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">db&lt;/span>.&lt;span style="color:#a6e22e">Create&lt;/span>(&lt;span style="color:#a6e22e">users&lt;/span>) &lt;span style="color:#75715e">// pass a slice to insert multiple row
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">user&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">User&lt;/span>{&lt;span style="color:#a6e22e">Name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Jinzhu&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">Age&lt;/span>: &lt;span style="color:#ae81ff">18&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">db&lt;/span>.&lt;span style="color:#a6e22e">Find&lt;/span>(&lt;span style="color:#a6e22e">user&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">db&lt;/span>.&lt;span style="color:#a6e22e">Updates&lt;/span>(&lt;span style="color:#a6e22e">user&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">db&lt;/span>.&lt;span style="color:#a6e22e">Delete&lt;/span>(&lt;span style="color:#a6e22e">user&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="2-flow-of-the-function-eg-dbfind">2. Flow of the function, e.g. &lt;code>db.Find()&lt;/code>:&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// gorm.io/finisher_api.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">db&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DB&lt;/span>) &lt;span style="color:#a6e22e">Find&lt;/span>(&lt;span style="color:#a6e22e">dest&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span>{}, &lt;span style="color:#a6e22e">conds&lt;/span> &lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#66d9ef">interface&lt;/span>{}) (&lt;span style="color:#a6e22e">tx&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DB&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">tx&lt;/span>.&lt;span style="color:#a6e22e">callbacks&lt;/span>.&lt;span style="color:#a6e22e">Query&lt;/span>().&lt;span style="color:#a6e22e">Execute&lt;/span>(&lt;span style="color:#a6e22e">tx&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// gorm.io/callbacks.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">cs&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">callbacks&lt;/span>) &lt;span style="color:#a6e22e">Query&lt;/span>() &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">processor&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">cs&lt;/span>.&lt;span style="color:#a6e22e">processors&lt;/span>[&lt;span style="color:#e6db74">&amp;#34;query&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">processor&lt;/span>) &lt;span style="color:#a6e22e">Execute&lt;/span>(&lt;span style="color:#a6e22e">db&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DB&lt;/span>) &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DB&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">f&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">fns&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">f&lt;/span>(&lt;span style="color:#a6e22e">db&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">db&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">processor&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">db&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DB&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Clauses&lt;/span> []&lt;span style="color:#66d9ef">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fns&lt;/span> []&lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DB&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">callbacks&lt;/span> []&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">callback&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="3-where-is-the-processorfns">3. Where is the &lt;code>processor.fns&lt;/code>?&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// gorm.io/callbacks.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">processor&lt;/span>) &lt;span style="color:#a6e22e">compile&lt;/span>() (&lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#66d9ef">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">fns&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> = &lt;span style="color:#a6e22e">sortCallbacks&lt;/span>(&lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">callbacks&lt;/span>); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">db&lt;/span>.&lt;span style="color:#a6e22e">Logger&lt;/span>.&lt;span style="color:#a6e22e">Error&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Background&lt;/span>(), &lt;span style="color:#e6db74">&amp;#34;Got error when compile callbacks, got %v&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">callback&lt;/span>) &lt;span style="color:#a6e22e">Register&lt;/span>(&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>, &lt;span style="color:#a6e22e">fn&lt;/span> &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DB&lt;/span>)) &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">processor&lt;/span>.&lt;span style="color:#a6e22e">callbacks&lt;/span> = append(&lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">processor&lt;/span>.&lt;span style="color:#a6e22e">callbacks&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">processor&lt;/span>.&lt;span style="color:#a6e22e">compile&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="4-who-will-register-the-callback">4. Who will register the callback?&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// gorm.io/callbacks/callbacks.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">RegisterDefaultCallbacks&lt;/span>(&lt;span style="color:#a6e22e">db&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">gorm&lt;/span>.&lt;span style="color:#a6e22e">DB&lt;/span>, &lt;span style="color:#a6e22e">config&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Config&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">createCallback&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">db&lt;/span>.&lt;span style="color:#a6e22e">Callback&lt;/span>().&lt;span style="color:#a6e22e">Create&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">createCallback&lt;/span>.&lt;span style="color:#a6e22e">Match&lt;/span>(&lt;span style="color:#a6e22e">enableTransaction&lt;/span>).&lt;span style="color:#a6e22e">Register&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;gorm:begin_transaction&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">BeginTransaction&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">createCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;gorm:before_create&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">BeforeCreate&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">createCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;gorm:save_before_associations&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">SaveBeforeAssociations&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">createCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;gorm:create&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">Create&lt;/span>(&lt;span style="color:#a6e22e">config&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">createCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;gorm:save_after_associations&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">SaveAfterAssociations&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">createCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">queryCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">updateCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">deleteCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="5-who-will-call-registerdefaultcallbacks">5. Who will call &lt;code>RegisterDefaultCallbacks&lt;/code>?&lt;/h5>
&lt;p>The answer is in &lt;code>&amp;quot;gorm.io/driver/mysql&amp;quot;&lt;/code> instead of &lt;code>&amp;quot;gorm.io/gorm&amp;quot;&lt;/code>:&lt;/p></description><content>&lt;h3 id="source-code">Source Code&lt;/h3>
&lt;p>When you run CRUD interface by gorm, what happened inside isn&amp;rsquo;t that straightforward, let&amp;rsquo;s take a look!&lt;/p>
&lt;h5 id="1-basic-gorm-usage">1. Basic gorm usage&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">users&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> []&lt;span style="color:#a6e22e">User&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#a6e22e">Name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Jinzhu&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">Age&lt;/span>: &lt;span style="color:#ae81ff">18&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#a6e22e">Name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Jackson&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">Age&lt;/span>: &lt;span style="color:#ae81ff">19&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">db&lt;/span>.&lt;span style="color:#a6e22e">Create&lt;/span>(&lt;span style="color:#a6e22e">users&lt;/span>) &lt;span style="color:#75715e">// pass a slice to insert multiple row
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">user&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">User&lt;/span>{&lt;span style="color:#a6e22e">Name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Jinzhu&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">Age&lt;/span>: &lt;span style="color:#ae81ff">18&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">db&lt;/span>.&lt;span style="color:#a6e22e">Find&lt;/span>(&lt;span style="color:#a6e22e">user&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">db&lt;/span>.&lt;span style="color:#a6e22e">Updates&lt;/span>(&lt;span style="color:#a6e22e">user&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">db&lt;/span>.&lt;span style="color:#a6e22e">Delete&lt;/span>(&lt;span style="color:#a6e22e">user&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="2-flow-of-the-function-eg-dbfind">2. Flow of the function, e.g. &lt;code>db.Find()&lt;/code>:&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// gorm.io/finisher_api.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">db&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DB&lt;/span>) &lt;span style="color:#a6e22e">Find&lt;/span>(&lt;span style="color:#a6e22e">dest&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span>{}, &lt;span style="color:#a6e22e">conds&lt;/span> &lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#66d9ef">interface&lt;/span>{}) (&lt;span style="color:#a6e22e">tx&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DB&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">tx&lt;/span>.&lt;span style="color:#a6e22e">callbacks&lt;/span>.&lt;span style="color:#a6e22e">Query&lt;/span>().&lt;span style="color:#a6e22e">Execute&lt;/span>(&lt;span style="color:#a6e22e">tx&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// gorm.io/callbacks.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">cs&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">callbacks&lt;/span>) &lt;span style="color:#a6e22e">Query&lt;/span>() &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">processor&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">cs&lt;/span>.&lt;span style="color:#a6e22e">processors&lt;/span>[&lt;span style="color:#e6db74">&amp;#34;query&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">processor&lt;/span>) &lt;span style="color:#a6e22e">Execute&lt;/span>(&lt;span style="color:#a6e22e">db&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DB&lt;/span>) &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DB&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">f&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">fns&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">f&lt;/span>(&lt;span style="color:#a6e22e">db&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">db&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">processor&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">db&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DB&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Clauses&lt;/span> []&lt;span style="color:#66d9ef">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fns&lt;/span> []&lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DB&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">callbacks&lt;/span> []&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">callback&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="3-where-is-the-processorfns">3. Where is the &lt;code>processor.fns&lt;/code>?&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// gorm.io/callbacks.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">processor&lt;/span>) &lt;span style="color:#a6e22e">compile&lt;/span>() (&lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#66d9ef">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">fns&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> = &lt;span style="color:#a6e22e">sortCallbacks&lt;/span>(&lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">callbacks&lt;/span>); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">db&lt;/span>.&lt;span style="color:#a6e22e">Logger&lt;/span>.&lt;span style="color:#a6e22e">Error&lt;/span>(&lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Background&lt;/span>(), &lt;span style="color:#e6db74">&amp;#34;Got error when compile callbacks, got %v&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">callback&lt;/span>) &lt;span style="color:#a6e22e">Register&lt;/span>(&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>, &lt;span style="color:#a6e22e">fn&lt;/span> &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DB&lt;/span>)) &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">processor&lt;/span>.&lt;span style="color:#a6e22e">callbacks&lt;/span> = append(&lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">processor&lt;/span>.&lt;span style="color:#a6e22e">callbacks&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">processor&lt;/span>.&lt;span style="color:#a6e22e">compile&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="4-who-will-register-the-callback">4. Who will register the callback?&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// gorm.io/callbacks/callbacks.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">RegisterDefaultCallbacks&lt;/span>(&lt;span style="color:#a6e22e">db&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">gorm&lt;/span>.&lt;span style="color:#a6e22e">DB&lt;/span>, &lt;span style="color:#a6e22e">config&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Config&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">createCallback&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">db&lt;/span>.&lt;span style="color:#a6e22e">Callback&lt;/span>().&lt;span style="color:#a6e22e">Create&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">createCallback&lt;/span>.&lt;span style="color:#a6e22e">Match&lt;/span>(&lt;span style="color:#a6e22e">enableTransaction&lt;/span>).&lt;span style="color:#a6e22e">Register&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;gorm:begin_transaction&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">BeginTransaction&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">createCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;gorm:before_create&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">BeforeCreate&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">createCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;gorm:save_before_associations&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">SaveBeforeAssociations&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">createCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;gorm:create&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">Create&lt;/span>(&lt;span style="color:#a6e22e">config&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">createCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;gorm:save_after_associations&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">SaveAfterAssociations&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">createCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">queryCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">updateCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">deleteCallback&lt;/span>.&lt;span style="color:#a6e22e">Register&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="5-who-will-call-registerdefaultcallbacks">5. Who will call &lt;code>RegisterDefaultCallbacks&lt;/code>?&lt;/h5>
&lt;p>The answer is in &lt;code>&amp;quot;gorm.io/driver/mysql&amp;quot;&lt;/code> instead of &lt;code>&amp;quot;gorm.io/gorm&amp;quot;&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// gorm.io/gorm.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">Open&lt;/span>(&lt;span style="color:#a6e22e">dialector&lt;/span> &lt;span style="color:#a6e22e">Dialector&lt;/span>, &lt;span style="color:#a6e22e">opts&lt;/span> &lt;span style="color:#f92672">...&lt;/span>&lt;span style="color:#a6e22e">Option&lt;/span>) (&lt;span style="color:#a6e22e">db&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">DB&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#66d9ef">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">config&lt;/span>.&lt;span style="color:#a6e22e">Dialector&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">err&lt;/span> = &lt;span style="color:#a6e22e">config&lt;/span>.&lt;span style="color:#a6e22e">Dialector&lt;/span>.&lt;span style="color:#a6e22e">Initialize&lt;/span>(&lt;span style="color:#a6e22e">db&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// gorm.io/driver/mysql@v1.5.4/mysql.go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">dialector&lt;/span> &lt;span style="color:#a6e22e">Dialector&lt;/span>) &lt;span style="color:#a6e22e">Initialize&lt;/span>(&lt;span style="color:#a6e22e">db&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">gorm&lt;/span>.&lt;span style="color:#a6e22e">DB&lt;/span>) (&lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#66d9ef">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">callbacks&lt;/span>.&lt;span style="color:#a6e22e">RegisterDefaultCallbacks&lt;/span>(&lt;span style="color:#a6e22e">db&lt;/span>, &lt;span style="color:#a6e22e">callbackConfig&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="end-of-the-story">End Of The Story&lt;/h3>
&lt;p>ORM framework is relative complex, too much details to understand. Dig into the key design and path, don&amp;rsquo;t get bogged down in the details.&lt;/p>
&lt;h2 id="referrence">Referrence&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/go-gorm/gorm">https://github.com/go-gorm/gorm&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Victorial Metrics</title><link>https://jinying-che.github.io/posts/victorial_metrics/</link><pubDate>Tue, 13 Feb 2024 07:37:29 +0800</pubDate><guid>https://jinying-che.github.io/posts/victorial_metrics/</guid><description>&lt;h2 id="quick-start">Quick Start&lt;/h2>
&lt;p>&lt;strong>Victoria Metrics&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>An easy way to run VictoriaMetrics locally is to build from the &lt;a href="https://docs.victoriametrics.com/single-server-victoriametrics/#how-to-build-from-sources">source code&lt;/a> as there&amp;rsquo;re lots of vm binaries like vmselect, vmstorage, vminsert, etc. to download, and all of them are maintained in the same &lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics">repository&lt;/a>, and &lt;code>Makefile&lt;/code> is quite straightforward.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone git@github.com:VictoriaMetrics/VictoriaMetrics.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make victoria-metrics
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv /bin/victoria-metrics /usr/bin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Run VictoriaMetrics With Systemd&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Unit&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Description&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Victoria Metrics Single&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Documentation&lt;span style="color:#f92672">=&lt;/span>https://https://docs.victoriametrics.com/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>After&lt;span style="color:#f92672">=&lt;/span>network.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Service&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Type&lt;span style="color:#f92672">=&lt;/span>simple
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecStart&lt;span style="color:#f92672">=&lt;/span>/usr/bin/victoria-metrics-prod &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -storageDataPath&lt;span style="color:#f92672">=&lt;/span>/data/vm &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -httpListenAddr&lt;span style="color:#f92672">=&lt;/span>:8428 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -promscrape.config&lt;span style="color:#f92672">=&lt;/span>/etc/prometheus/scrape.yml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecStop&lt;span style="color:#f92672">=&lt;/span>/bin/kill -s SIGTERM $MAINPID
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Restart&lt;span style="color:#f92672">=&lt;/span>on-failure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SuccessExitStatus&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LimitNOFILE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">65536&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>StandardOutput&lt;span style="color:#f92672">=&lt;/span>/var/log/vm/out.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>StandardError&lt;span style="color:#f92672">=&lt;/span>/var/log/vm/err.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SyslogIdentifier&lt;span style="color:#f92672">=&lt;/span>prometheus
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Install&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WantedBy&lt;span style="color:#f92672">=&lt;/span>multi-user.target
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="storage">Storage&lt;/h2>
&lt;h3 id="on-disk-layout">On Disk Layout&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>./data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── big
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── 2024_01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── 17A6101707C91B08
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   │   ├── index.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   │   ├── metadata.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   │   ├── metaindex.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   │   ├── timestamps.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   │   └── values.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── 2024_02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── snapshots
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── 20240109092239-179E85E399D5EFDA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── 2023_12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   └── 2024_01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── 20240111104529-179E85E399D5EFDB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── 2023_12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── 2024_01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── flock.lock
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── small
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── 2024_01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── 17A6101707CC58EF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   │   ├── index.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   │   ├── metadata.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   │   ├── metaindex.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   │   ├── timestamps.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   │   └── values.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    └── snapshots
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    ├── 20240109092239-179E85E399D5EFDA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    │   ├── 2023_12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    │   └── 2024_01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    └── 20240111104529-179E85E399D5EFDB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    ├── 2023_12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    └── 2024_01
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For details, see &lt;a href="https://docs.victoriametrics.com/single-server-victoriametrics/#storage">doc&lt;/a>&lt;/p></description><content>&lt;h2 id="quick-start">Quick Start&lt;/h2>
&lt;p>&lt;strong>Victoria Metrics&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>An easy way to run VictoriaMetrics locally is to build from the &lt;a href="https://docs.victoriametrics.com/single-server-victoriametrics/#how-to-build-from-sources">source code&lt;/a> as there&amp;rsquo;re lots of vm binaries like vmselect, vmstorage, vminsert, etc. to download, and all of them are maintained in the same &lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics">repository&lt;/a>, and &lt;code>Makefile&lt;/code> is quite straightforward.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone git@github.com:VictoriaMetrics/VictoriaMetrics.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make victoria-metrics
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv /bin/victoria-metrics /usr/bin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Run VictoriaMetrics With Systemd&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Unit&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Description&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Victoria Metrics Single&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Documentation&lt;span style="color:#f92672">=&lt;/span>https://https://docs.victoriametrics.com/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>After&lt;span style="color:#f92672">=&lt;/span>network.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Service&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Type&lt;span style="color:#f92672">=&lt;/span>simple
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecStart&lt;span style="color:#f92672">=&lt;/span>/usr/bin/victoria-metrics-prod &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -storageDataPath&lt;span style="color:#f92672">=&lt;/span>/data/vm &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -httpListenAddr&lt;span style="color:#f92672">=&lt;/span>:8428 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -promscrape.config&lt;span style="color:#f92672">=&lt;/span>/etc/prometheus/scrape.yml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecStop&lt;span style="color:#f92672">=&lt;/span>/bin/kill -s SIGTERM $MAINPID
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Restart&lt;span style="color:#f92672">=&lt;/span>on-failure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SuccessExitStatus&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LimitNOFILE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">65536&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>StandardOutput&lt;span style="color:#f92672">=&lt;/span>/var/log/vm/out.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>StandardError&lt;span style="color:#f92672">=&lt;/span>/var/log/vm/err.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SyslogIdentifier&lt;span style="color:#f92672">=&lt;/span>prometheus
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Install&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WantedBy&lt;span style="color:#f92672">=&lt;/span>multi-user.target
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="storage">Storage&lt;/h2>
&lt;h3 id="on-disk-layout">On Disk Layout&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>./data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── big
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── 2024_01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── 17A6101707C91B08
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   │   ├── index.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   │   ├── metadata.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   │   ├── metaindex.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   │   ├── timestamps.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   │   └── values.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── 2024_02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── snapshots
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── 20240109092239-179E85E399D5EFDA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   ├── 2023_12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   │   └── 2024_01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── 20240111104529-179E85E399D5EFDB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── 2023_12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── 2024_01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── flock.lock
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── small
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── 2024_01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── 17A6101707CC58EF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   │   ├── index.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   │   ├── metadata.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   │   ├── metaindex.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   │   ├── timestamps.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   │   └── values.bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    └── snapshots
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    ├── 20240109092239-179E85E399D5EFDA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    │   ├── 2023_12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    │   └── 2024_01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    └── 20240111104529-179E85E399D5EFDB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    ├── 2023_12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    └── 2024_01
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For details, see &lt;a href="https://docs.victoriametrics.com/single-server-victoriametrics/#storage">doc&lt;/a>&lt;/p>
&lt;ul>
&lt;li>small:&lt;/li>
&lt;li>big:&lt;/li>
&lt;li>flock.lock:&lt;/li>
&lt;/ul>
&lt;p>for each part:&lt;/p>
&lt;ul>
&lt;li>index.bin:&lt;/li>
&lt;li>metadata.json:&lt;/li>
&lt;li>metaindex.bin:&lt;/li>
&lt;li>timestamps.bin:&lt;/li>
&lt;li>values.bin:&lt;/li>
&lt;/ul>
&lt;p>snapshot:&lt;/p>
&lt;h3 id="write-flow">Write Flow&lt;/h3>
&lt;p>Ingested Data -&amp;gt; create reverted index(two type of index) -&amp;gt; Buffer -&amp;gt; In-memory Parts -&amp;gt; Disk (flush into disk periodically) -&amp;gt; Merge in the background -&amp;gt; Disk&lt;/p>
&lt;p>When index created?&lt;/p>
&lt;p>VM vs Prometheus (Disk)
TBD&lt;/p>
&lt;h3 id="read-flow">Read Flow&lt;/h3>
&lt;h2 id="referrence">Referrence&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.victoriametrics.com/single-server-victoriametrics/">https://docs.victoriametrics.com/single-server-victoriametrics/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics/issues/3268">https://github.com/VictoriaMetrics/VictoriaMetrics/issues/3268&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Prometheus Overview</title><link>https://jinying-che.github.io/posts/prometheus/</link><pubDate>Sun, 31 Dec 2023 09:41:04 +0800</pubDate><guid>https://jinying-che.github.io/posts/prometheus/</guid><description>&lt;h2 id="architecture">Architecture&lt;/h2>
&lt;p>&lt;img alt="Architecture" src="https://jinying-che.github.io/images/prometheus.png">&lt;/p>
&lt;h2 id="quick-start">Quick Start&lt;/h2>
&lt;h2 id="data-model">Data Model&lt;/h2>
&lt;p>Every time series is uniquely identified by its &lt;strong>metric name&lt;/strong> and optional key-value pairs called &lt;strong>labels&lt;/strong>.&lt;/p>
&lt;ul>
&lt;li>Metric Name&lt;/li>
&lt;li>Metric Label
&lt;ul>
&lt;li>The change of any labels value, including adding or removing labels, will create a new time series.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="metric-type">Metric Type&lt;/h4>
&lt;p>Prometheus supports four types of metrics, which are - Counter - Gauge - Histogram - Summary&lt;/p>
&lt;ul>
&lt;li>Counter: a metric value that can only increase or reset
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># use a counter to represent the number of requests served, tasks completed, or errors&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- http_requests_total&lt;span style="color:#f92672">{&lt;/span>handler&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/get_user_id&amp;#39;&lt;/span>, method&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;GET&amp;#39;&lt;/span>, status&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;200&amp;#39;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- errors_total&lt;span style="color:#f92672">{&lt;/span>type&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;runtime&amp;#39;&lt;/span>, severity&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;critical&amp;#39;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Gauge: a number which can either go up or down
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># used for measured values like temperatures or current memory usage&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- memory_usage_bytes&lt;span style="color:#f92672">{&lt;/span>process_name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;web_server&amp;#39;&lt;/span>, instance&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;10.0.0.1:8080&amp;#39;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- queue_size&lt;span style="color:#f92672">{&lt;/span>queue_name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;low_priority&amp;#39;&lt;/span>, worker_type&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;background&amp;#39;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Histogram: used for any calculated value which is counted based on bucket values,
&lt;ul>
&lt;li>&lt;strong>bucket&lt;/strong> value determines the ordinate value (y coordinate of a standard two-dimensional graph)&lt;/li>
&lt;li>&lt;strong>cumulative&lt;/strong> counters for the observation buckets, exposed as &lt;!-- raw HTML omitted -->_bucket{le=&amp;quot;&amp;lt;&lt;strong>upper&lt;/strong> inclusive bound&amp;gt;&amp;quot;}&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># usually things like request durations or response sizes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># le=&amp;#34;0.3&amp;#34; means less or equal to 0.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_sum 134420.14452212452
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_second_bucket&lt;span style="color:#f92672">{&lt;/span>le&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.05&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span> 11326.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_second_bucket&lt;span style="color:#f92672">{&lt;/span>le&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.1&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span> 2.284831e+06
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_second_bucket&lt;span style="color:#f92672">{&lt;/span>le&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.15&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span> 2.285367e+06
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_second_bucket&lt;span style="color:#f92672">{&lt;/span>le&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.25&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span> 2.285592e+06
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_second_bucket&lt;span style="color:#f92672">{&lt;/span>le&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span> 2.285613e+06
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_second_bucket&lt;span style="color:#f92672">{&lt;/span>le&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;+Inf&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span> 2.285619e+06
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_count 2.285619e+06
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># cumulative means that the count for le=”0.5” bucket also includes the count for le=”0.25” bucket.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Consider the following hypothetical distribution of observations for 200 observations.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>┌─────────────┬──────────────────────┬──────────────────┐
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ Bucket Size │ Cumulative Frequency │ Upper Bound │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ Count │ Percentile │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─────────────┼──────────────────────┼──────────────────┤
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ 50ms │ &lt;span style="color:#ae81ff">20&lt;/span> │ p10 │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ 100ms │ &lt;span style="color:#ae81ff">70&lt;/span> │ p35 │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ 250ms │ &lt;span style="color:#ae81ff">120&lt;/span> │ p60 │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ 500ms │ &lt;span style="color:#ae81ff">150&lt;/span> │ p75 │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ 1000ms │ &lt;span style="color:#ae81ff">200&lt;/span> │ p100 │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ INF │ &lt;span style="color:#ae81ff">200&lt;/span> │ p100 │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└─────────────┴──────────────────────┴──────────────────┘
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Summary: measure events and are an alternative to histograms. They are cheaper but lose more data (it is highly recommended to use histograms over summaries whenever possible.)&lt;/li>
&lt;/ul>
&lt;h2 id="storage">Storage&lt;/h2>
&lt;p>&lt;img alt="workflow" src="https://jinying-che.github.io/images/tsdb_write.png">&lt;/p></description><content>&lt;h2 id="architecture">Architecture&lt;/h2>
&lt;p>&lt;img alt="Architecture" src="https://jinying-che.github.io/images/prometheus.png">&lt;/p>
&lt;h2 id="quick-start">Quick Start&lt;/h2>
&lt;h2 id="data-model">Data Model&lt;/h2>
&lt;p>Every time series is uniquely identified by its &lt;strong>metric name&lt;/strong> and optional key-value pairs called &lt;strong>labels&lt;/strong>.&lt;/p>
&lt;ul>
&lt;li>Metric Name&lt;/li>
&lt;li>Metric Label
&lt;ul>
&lt;li>The change of any labels value, including adding or removing labels, will create a new time series.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="metric-type">Metric Type&lt;/h4>
&lt;p>Prometheus supports four types of metrics, which are - Counter - Gauge - Histogram - Summary&lt;/p>
&lt;ul>
&lt;li>Counter: a metric value that can only increase or reset
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># use a counter to represent the number of requests served, tasks completed, or errors&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- http_requests_total&lt;span style="color:#f92672">{&lt;/span>handler&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/get_user_id&amp;#39;&lt;/span>, method&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;GET&amp;#39;&lt;/span>, status&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;200&amp;#39;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- errors_total&lt;span style="color:#f92672">{&lt;/span>type&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;runtime&amp;#39;&lt;/span>, severity&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;critical&amp;#39;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Gauge: a number which can either go up or down
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># used for measured values like temperatures or current memory usage&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- memory_usage_bytes&lt;span style="color:#f92672">{&lt;/span>process_name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;web_server&amp;#39;&lt;/span>, instance&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;10.0.0.1:8080&amp;#39;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- queue_size&lt;span style="color:#f92672">{&lt;/span>queue_name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;low_priority&amp;#39;&lt;/span>, worker_type&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;background&amp;#39;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Histogram: used for any calculated value which is counted based on bucket values,
&lt;ul>
&lt;li>&lt;strong>bucket&lt;/strong> value determines the ordinate value (y coordinate of a standard two-dimensional graph)&lt;/li>
&lt;li>&lt;strong>cumulative&lt;/strong> counters for the observation buckets, exposed as &lt;!-- raw HTML omitted -->_bucket{le=&amp;quot;&amp;lt;&lt;strong>upper&lt;/strong> inclusive bound&amp;gt;&amp;quot;}&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># usually things like request durations or response sizes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># le=&amp;#34;0.3&amp;#34; means less or equal to 0.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_sum 134420.14452212452
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_second_bucket&lt;span style="color:#f92672">{&lt;/span>le&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.05&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span> 11326.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_second_bucket&lt;span style="color:#f92672">{&lt;/span>le&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.1&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span> 2.284831e+06
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_second_bucket&lt;span style="color:#f92672">{&lt;/span>le&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.15&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span> 2.285367e+06
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_second_bucket&lt;span style="color:#f92672">{&lt;/span>le&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.25&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span> 2.285592e+06
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_second_bucket&lt;span style="color:#f92672">{&lt;/span>le&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span> 2.285613e+06
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_second_bucket&lt;span style="color:#f92672">{&lt;/span>le&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;+Inf&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span> 2.285619e+06
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_latency_count 2.285619e+06
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># cumulative means that the count for le=”0.5” bucket also includes the count for le=”0.25” bucket.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Consider the following hypothetical distribution of observations for 200 observations.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>┌─────────────┬──────────────────────┬──────────────────┐
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ Bucket Size │ Cumulative Frequency │ Upper Bound │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ Count │ Percentile │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─────────────┼──────────────────────┼──────────────────┤
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ 50ms │ &lt;span style="color:#ae81ff">20&lt;/span> │ p10 │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ 100ms │ &lt;span style="color:#ae81ff">70&lt;/span> │ p35 │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ 250ms │ &lt;span style="color:#ae81ff">120&lt;/span> │ p60 │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ 500ms │ &lt;span style="color:#ae81ff">150&lt;/span> │ p75 │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ 1000ms │ &lt;span style="color:#ae81ff">200&lt;/span> │ p100 │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ INF │ &lt;span style="color:#ae81ff">200&lt;/span> │ p100 │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└─────────────┴──────────────────────┴──────────────────┘
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Summary: measure events and are an alternative to histograms. They are cheaper but lose more data (it is highly recommended to use histograms over summaries whenever possible.)&lt;/li>
&lt;/ul>
&lt;h2 id="storage">Storage&lt;/h2>
&lt;p>&lt;img alt="workflow" src="https://jinying-che.github.io/images/tsdb_write.png">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>./data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── 01BKGV7JBM69T2G1BGBGM6KB12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── meta.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── 01BKGTZQ1SYQJTR4PB43C8PD98
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── chunks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └── 000001
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── tombstones
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── index
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── meta.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── 01BKGTZQ1HHWHV8FBJXW1Y3W0K
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── meta.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── 01BKGV7JC0RY8A6MACW02A2PJD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── chunks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └── 000001
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── tombstones
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── index
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── meta.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── chunks_head
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── 000001
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── wal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── 000000002
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── checkpoint.00000001
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── 00000000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>see &lt;a href="https://prometheus.io/docs/prometheus/latest/storage/#on-disk-layout">detals&lt;/a>, simple put:&lt;/p>
&lt;ul>
&lt;li>&lt;code>blocks&lt;/code>: ingested samples are grouped into blocks of 2 hours, e.g. &lt;em>01BKGV7JBM69T2G1BGBGM6KB12&lt;/em> is a block&lt;/li>
&lt;li>&lt;code>chunks&lt;/code>:
&lt;ul>
&lt;li>it&amp;rsquo;s a directory that contains the time series data for that window of time (up to 2 hours)&lt;/li>
&lt;li>The samples in the chunks directory are grouped together into one or more segment files of up to 512MB each by default&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>tombstones&lt;/code>: marked deletion records (instead of deleting the data immediately from the chunk segments)&lt;/li>
&lt;li>&lt;code>index&lt;/code>: &lt;strong>inverted index&lt;/strong> which indexes metric names and labels to time series in the chunks directory&lt;/li>
&lt;li>&lt;code>meta.json&lt;/code>: block info&lt;/li>
&lt;li>&lt;code>wal&lt;/code>(write-ahead log):
&lt;ul>
&lt;li>The current block for incoming samples is kept in memory and is not fully persisted. It is secured against crashes by a write-ahead log (WAL) that can be replayed when the Prometheus server restarts.&lt;/li>
&lt;li>files are stored in the wal directory in 128MB segments, which are significantly larger than regular block files (not yet been compacted)&lt;/li>
&lt;li>minimum of 3 write-ahead log files. High-traffic servers may retain more than 3 WAL files in order to keep at least 2 hours of raw data.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="promql">PromQL&lt;/h2>
&lt;h4 id="time-series-selectors">Time series Selectors&lt;/h4>
&lt;p>&lt;strong>Instant Vector&lt;/strong>&lt;/p>
&lt;p>Instant vector selectors allow the selection of a set of time series and a single sample value for each at a given timestamp (instant)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># only metric name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_requests_total
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># with labels&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_requests_total&lt;span style="color:#f92672">{&lt;/span>job&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;prometheus&amp;#34;&lt;/span>,group&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;canary&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># with regex&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http_requests_total&lt;span style="color:#f92672">{&lt;/span>environment&lt;span style="color:#f92672">=&lt;/span>~&lt;span style="color:#e6db74">&amp;#34;staging|testing|development&amp;#34;&lt;/span>,method!&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;GET&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Range Vector Selectors&lt;/strong>&lt;/p>
&lt;p>Range vector literals work like instant vector literals, except that they select a range of samples back from the current instant&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>http_requests_total&lt;span style="color:#f92672">{&lt;/span>job&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;prometheus&amp;#34;&lt;/span>&lt;span style="color:#f92672">}[&lt;/span>5m&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Offset Modifier&lt;/strong>&lt;/p>
&lt;p>The offset modifier allows changing the time offset for individual &lt;strong>instant&lt;/strong> and &lt;strong>range&lt;/strong> vectors in a query.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># returns the 5-minute rate that http_requests_total had a week ago&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rate&lt;span style="color:#f92672">(&lt;/span>http_requests_total&lt;span style="color:#f92672">[&lt;/span>5m&lt;span style="color:#f92672">]&lt;/span> offset 1w&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="functions">Functions&lt;/h4>
&lt;p>There are some common functions in PromQL which are used in most popular queries and scenarios.&lt;/p>
&lt;h5 id="1-rate--irate">1. rate() &amp;amp;&amp;amp; irate()&lt;/h5>
&lt;p>&lt;a href="https://jinying-che.github.io/posts/rate_vs_irate/">see details&lt;/a>&lt;/p>
&lt;h6 id="2-histogram_quantile">2. histogram_quantile()&lt;/h6>
&lt;p>How P99 is calculated?&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://prometheus.io/docs/introduction/overview/">https://prometheus.io/docs/introduction/overview/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://prometheus.io/docs/prometheus/latest/querying/basics/">https://prometheus.io/docs/prometheus/latest/querying/basics/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://promlabs.com/blog/2023/08/31/high-availability-for-prometheus-and-alertmanager-an-overview/">https://promlabs.com/blog/2023/08/31/high-availability-for-prometheus-and-alertmanager-an-overview/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.google.com/presentation/d/1TMvzwdaS8Vw9MtscI9ehDyiMngII8iB_Z5D4QW4U4ho/edit?pli=1#slide=id.gae9988762_0_0">PromCon 2016 - The Prometheus TSDB Slides&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhenghe-md.github.io/blog/2020/02/27/The-Evolution-of-Prometheus-Storage-Layer/">The Evolution of Prometheus Storage Layer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ganeshvernekar.com/blog/prometheus-tsdb-the-head-block/">Prometheus TSDB&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://web.archive.org/web/20210803115658/https://fabxc.org/tsdb">Writing a Time Series Database from Scratch&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://news.ycombinator.com/item?id=27730854">Write a time-series database engine from scratch (hancker news)&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>CAP</title><link>https://jinying-che.github.io/posts/cap/</link><pubDate>Fri, 03 Nov 2023 10:03:19 +0800</pubDate><guid>https://jinying-che.github.io/posts/cap/</guid><description>&lt;h2 id="theorem">Theorem&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Consistency&lt;/strong>: Every read receives the most recent write or an error.&lt;/li>
&lt;li>&lt;strong>Availability&lt;/strong>: Every request receives a (non-error) response, without the guarantee that it contains the most recent write.&lt;/li>
&lt;li>&lt;strong>Partition Tolerance&lt;/strong>: The system continues to operate despite an arbitrary number of messages being dropped (or delayed) by the network between nodes.&lt;/li>
&lt;/ul>
&lt;p>&lt;img alt="cap" src="https://jinying-che.github.io/images/cap.svg">
In the absence of a &lt;strong>partition&lt;/strong>, both availability and consistency can be satisfied, but when the network partition occurs, one is then left with two options: consistency or availability.&lt;/p></description><content>&lt;h2 id="theorem">Theorem&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Consistency&lt;/strong>: Every read receives the most recent write or an error.&lt;/li>
&lt;li>&lt;strong>Availability&lt;/strong>: Every request receives a (non-error) response, without the guarantee that it contains the most recent write.&lt;/li>
&lt;li>&lt;strong>Partition Tolerance&lt;/strong>: The system continues to operate despite an arbitrary number of messages being dropped (or delayed) by the network between nodes.&lt;/li>
&lt;/ul>
&lt;p>&lt;img alt="cap" src="https://jinying-che.github.io/images/cap.svg">
In the absence of a &lt;strong>partition&lt;/strong>, both availability and consistency can be satisfied, but when the network partition occurs, one is then left with two options: consistency or availability.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>CP System&lt;/strong>: When choosing consistency over availability, the system will return an error or a time out if particular information cannot be guaranteed to be up to date due to network partitioning. (Only make sure &lt;strong>partial service nodes&lt;/strong> are available, the system has to shut down the non-consistent node)&lt;/li>
&lt;li>&lt;strong>AP System&lt;/strong>: When choosing availability over consistency, the system will always process the query and try to return the most recent available version of the information, even if it cannot guarantee it is up to date due to network partitioning. (All nodes are available, when the partition is resolved, the AP databases typically resync the nodes to repair all inconsistencies in the system.)&lt;/li>
&lt;li>&lt;strong>CA System&lt;/strong>: It&amp;rsquo;s impossible to delivery both strong consistency and Availability as the consistency protocol (e.g. 2PC) cannot be satified.&lt;/li>
&lt;/ul>
&lt;h2 id="consensus-protocol-tbd">Consensus Protocol (TBD)&lt;/h2>
&lt;h4 id="1-paxos">1. Paxos&lt;/h4>
&lt;h4 id="2-zab">2. Zab&lt;/h4>
&lt;h4 id="3-raft">3. Raft&lt;/h4>
&lt;p>A Raft cluster contains several servers; five is a typical number, which allows the system to tolerate two failures.&lt;/p>
&lt;p>At any given time each server is in one of three states:&lt;/p>
&lt;ul>
&lt;li>Leader: The leader handles all client requests (if a client contacts a follower, the follower redirects it to the leader).&lt;/li>
&lt;li>Follower: Followers are passive: they issue no requests on their own but simply respond to requests from leaders and candidates.&lt;/li>
&lt;li>Candidate: is used to elect a new leader&lt;/li>
&lt;/ul>
&lt;p>In normal operation there is exactly &lt;strong>one leader&lt;/strong> and all of the other servers are &lt;strong>followers&lt;/strong>.&lt;/p>
&lt;p>&lt;img alt="Raft State Machine" src="https://jinying-che.github.io/images/raft_server_status.png">&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>From Raft Paper: &lt;a href="https://raft.github.io/raft.pdf">https://raft.github.io/raft.pdf&lt;/a>&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;p>Check the &lt;a href="https://thesecretlivesofdata.com/raft/">visualization&lt;/a> for the quick udnerstanding.&lt;/p>
&lt;h4 id="4-gossip">4. Gossip&lt;/h4>
&lt;h4 id="5-2pc">5. 2PC&lt;/h4>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/CAP_theorem">https://en.wikipedia.org/wiki/CAP_theorem&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.ibm.com/topics/cap-theorem">https://www.ibm.com/topics/cap-theorem&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://raft.github.io/">https://raft.github.io/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>CPU</title><link>https://jinying-che.github.io/posts/cpu/</link><pubDate>Mon, 16 Oct 2023 22:54:48 +0800</pubDate><guid>https://jinying-che.github.io/posts/cpu/</guid><description>&lt;h2 id="process-vs-thread">Process vs Thread&lt;/h2>
&lt;p>TBD&lt;/p>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;p>&lt;img alt="overview" src="https://jinying-che.github.io/images/cpu_tools.png">&lt;/p>
&lt;h4 id="0-procstat">0 /proc/stat&lt;/h4>
&lt;h4 id="1-top">1. top&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ top
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>top - 17:18:53 up &lt;span style="color:#ae81ff">50&lt;/span> days, 16:06, &lt;span style="color:#ae81ff">7&lt;/span> users, load average: 0.00, 0.00, 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Tasks: &lt;span style="color:#ae81ff">127&lt;/span> total, &lt;span style="color:#ae81ff">1&lt;/span> running, &lt;span style="color:#ae81ff">126&lt;/span> sleeping, &lt;span style="color:#ae81ff">0&lt;/span> stopped, &lt;span style="color:#ae81ff">0&lt;/span> zombie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%Cpu&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">)&lt;/span>: 0.0 us, 0.0 sy, 0.0 ni,100.0 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MiB Mem : 957.5 total, 122.6 free, 162.0 used, 673.0 buff/cache
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MiB Swap: 2400.0 total, 2282.0 free, 118.0 used. 622.7 avail Mem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">782513&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">17312&lt;/span> &lt;span style="color:#ae81ff">11036&lt;/span> &lt;span style="color:#ae81ff">8652&lt;/span> S 0.3 1.1 0:00.04 sshd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">1&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">167728&lt;/span> &lt;span style="color:#ae81ff">9424&lt;/span> &lt;span style="color:#ae81ff">6504&lt;/span> S 0.0 1.0 3:05.88 systemd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">2&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> S 0.0 0.0 0:00.66 kthreadd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># man top to get top details, simple put:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># load average : the average number of processes that are either in a runnable or uninterruptable state for the past 1, 5, and 15 minutes. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># e.g. `load average = 1.5` in 6 cpu system means 1/4 cpu is under laod, 3/4 cpu is idle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># us, user : time running un-niced user processes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># sy, system : time running kernel processes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ni, nice : time running niced user processes (process priority, a negative nice value means higher priority, whereas a positive nice value means lower priority)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># id, idle : time spent in the kernel idle handler&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># wa, IO-wait : time waiting for I/O completion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># hi : time spent servicing hardware interrupts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># si : time spent servicing software interrupts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># st : time stolen from this vm by the hypervisor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># PR: The scheduling priority of the task (real priority of a process as seen by the kernel)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># NI: The nice value of the task (a priority hint for the kernel)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># VIRT: The total amount of virtual memory used by the task (physical memory + swap)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># RES: A subset of the virtual address space (VIRT) representing the non-swapped physical memory (only physical memory)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SHR: A subset of resident memory (RES) that may be used by other processes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># S: Process Status, the status of the task which can be one of:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># D = uninterruptible sleep&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># I = idle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># R = running&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># S = sleeping&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># T = stopped by job control signal&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># t = stopped by debugger during trace&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Z = zombie&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="2-vmstat">2. vmstat&lt;/h4>
&lt;p>vmstat reports information about processes, memory, paging, block IO, traps, disks and cpu activity&lt;/p></description><content>&lt;h2 id="process-vs-thread">Process vs Thread&lt;/h2>
&lt;p>TBD&lt;/p>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;p>&lt;img alt="overview" src="https://jinying-che.github.io/images/cpu_tools.png">&lt;/p>
&lt;h4 id="0-procstat">0 /proc/stat&lt;/h4>
&lt;h4 id="1-top">1. top&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ top
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>top - 17:18:53 up &lt;span style="color:#ae81ff">50&lt;/span> days, 16:06, &lt;span style="color:#ae81ff">7&lt;/span> users, load average: 0.00, 0.00, 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Tasks: &lt;span style="color:#ae81ff">127&lt;/span> total, &lt;span style="color:#ae81ff">1&lt;/span> running, &lt;span style="color:#ae81ff">126&lt;/span> sleeping, &lt;span style="color:#ae81ff">0&lt;/span> stopped, &lt;span style="color:#ae81ff">0&lt;/span> zombie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%Cpu&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">)&lt;/span>: 0.0 us, 0.0 sy, 0.0 ni,100.0 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MiB Mem : 957.5 total, 122.6 free, 162.0 used, 673.0 buff/cache
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MiB Swap: 2400.0 total, 2282.0 free, 118.0 used. 622.7 avail Mem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">782513&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">17312&lt;/span> &lt;span style="color:#ae81ff">11036&lt;/span> &lt;span style="color:#ae81ff">8652&lt;/span> S 0.3 1.1 0:00.04 sshd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">1&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">167728&lt;/span> &lt;span style="color:#ae81ff">9424&lt;/span> &lt;span style="color:#ae81ff">6504&lt;/span> S 0.0 1.0 3:05.88 systemd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">2&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> S 0.0 0.0 0:00.66 kthreadd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># man top to get top details, simple put:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># load average : the average number of processes that are either in a runnable or uninterruptable state for the past 1, 5, and 15 minutes. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># e.g. `load average = 1.5` in 6 cpu system means 1/4 cpu is under laod, 3/4 cpu is idle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># us, user : time running un-niced user processes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># sy, system : time running kernel processes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ni, nice : time running niced user processes (process priority, a negative nice value means higher priority, whereas a positive nice value means lower priority)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># id, idle : time spent in the kernel idle handler&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># wa, IO-wait : time waiting for I/O completion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># hi : time spent servicing hardware interrupts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># si : time spent servicing software interrupts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># st : time stolen from this vm by the hypervisor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># PR: The scheduling priority of the task (real priority of a process as seen by the kernel)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># NI: The nice value of the task (a priority hint for the kernel)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># VIRT: The total amount of virtual memory used by the task (physical memory + swap)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># RES: A subset of the virtual address space (VIRT) representing the non-swapped physical memory (only physical memory)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SHR: A subset of resident memory (RES) that may be used by other processes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># S: Process Status, the status of the task which can be one of:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># D = uninterruptible sleep&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># I = idle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># R = running&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># S = sleeping&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># T = stopped by job control signal&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># t = stopped by debugger during trace&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Z = zombie&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="2-vmstat">2. vmstat&lt;/h4>
&lt;p>vmstat reports information about processes, memory, paging, block IO, traps, disks and cpu activity&lt;/p>
&lt;p>refer to &lt;a href="https://jinying-che.github.io/posts/memory/#3-vmstat">details&lt;/a>&lt;/p>
&lt;h4 id="3-pidstat-process-level">3. pidstat (process level)&lt;/h4>
&lt;p>&lt;code>pidstat&lt;/code> report statistics (cpu, memory, disk, stack) for Linux tasks (process), by defaut is cpu utilization without params.&lt;/p>
&lt;ul>
&lt;li>&lt;code>-d&lt;/code> Report I/O statistics&lt;/li>
&lt;li>&lt;code>-R&lt;/code> Report realtime priority and scheduling policy information.&lt;/li>
&lt;li>&lt;code>-r&lt;/code> Report page faults and memory utilization.&lt;/li>
&lt;li>&lt;code>-s&lt;/code> Report stack utilization.&lt;/li>
&lt;li>&lt;code>-u&lt;/code> Report CPU utilization&lt;/li>
&lt;li>&lt;code>-v&lt;/code> Report values of some kernel tables.&lt;/li>
&lt;li>&lt;code>-w&lt;/code> Report task switching activity&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Display 2 reports of CPU statistics for every active task in the system per second intervals.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ pidstat &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>05:31:13 PM UID PID %usr %system %guest %wait %CPU CPU Command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>05:31:14 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">798270&lt;/span> 0.00 1.00 0.00 0.00 1.00 &lt;span style="color:#ae81ff">0&lt;/span> pidstat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>05:31:14 PM UID PID %usr %system %guest %wait %CPU CPU Command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Average: UID PID %usr %system %guest %wait %CPU CPU Command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Average: &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">798270&lt;/span> 0.00 0.50 0.00 0.00 0.50 - pidstat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -p Select tasks (processes) for which statistics are to be reported &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ pidstat -p &lt;span style="color:#ae81ff">655152&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>05:38:56 PM UID PID %usr %system %guest %wait %CPU CPU Command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>05:38:58 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">655152&lt;/span> 0.00 0.00 0.00 0.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> node_exporter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>05:39:00 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">655152&lt;/span> 0.00 0.00 0.00 0.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> node_exporter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>05:39:02 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">655152&lt;/span> 0.00 0.00 0.00 0.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> node_exporter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Average: &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">655152&lt;/span> 0.00 0.00 0.00 0.00 0.00 - node_exporter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># man pidstat for details, simple put&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># PID The identification number of the task being monitored.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %usr Percentage of CPU used by the task while executing at the user level (application)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %system Percentage of CPU used by the task while executing at the system level (kernel).&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %guest Percentage of CPU spent by the task in virtual machine (running a virtual processor)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %wait Percentage of CPU spent by the task while waiting to run.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %CPU Total percentage of CPU time used by the task. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># CPU Processor number to which the task is attached.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Command The command name of the task.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="4-mpstat-cpu-level">4. mpstat (cpu level)&lt;/h4>
&lt;p>mpstat - Report &lt;strong>processors&lt;/strong> related statistics.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Display 2 reports of statistics for all processors at 1 second intervals.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ mpstat -P ALL &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:43:14 PM CPU %usr %nice %sys %iowait %irq %soft %steal %guest %gnice %idle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:43:15 PM all 1.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 99.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:43:15 PM &lt;span style="color:#ae81ff">0&lt;/span> 1.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 99.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:43:15 PM CPU %usr %nice %sys %iowait %irq %soft %steal %guest %gnice %idle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:43:16 PM all 1.02 0.00 1.02 0.00 0.00 0.00 0.00 0.00 0.00 97.96
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:43:16 PM &lt;span style="color:#ae81ff">0&lt;/span> 1.02 0.00 1.02 0.00 0.00 0.00 0.00 0.00 0.00 97.96
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Average: CPU %usr %nice %sys %iowait %irq %soft %steal %guest %gnice %idle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Average: all 1.01 0.00 0.51 0.00 0.00 0.00 0.00 0.00 0.00 98.48
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Average: &lt;span style="color:#ae81ff">0&lt;/span> 1.01 0.00 0.51 0.00 0.00 0.00 0.00 0.00 0.00 98.48
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># man mpstat for details, simple put&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %usr Show the percentage of CPU utilization that occurred while executing at the user level (application).&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %nice Show the percentage of CPU utilization that occurred while executing at the user level with nice priority.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %sys Show the percentage of CPU utilization that occurred while executing at the system level (kernel). Note that this does not include time spent servicing hardware and software interrupts.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %iowait Show the percentage of time that the CPU or CPUs were idle during which the system had an outstanding disk I/O request.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %irq Show the percentage of time spent by the CPU or CPUs to service hardware interrupts.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %soft Show the percentage of time spent by the CPU or CPUs to service software interrupts.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %steal Show the percentage of time spent in involuntary wait by the virtual CPU or CPUs while the hypervisor was servicing another virtual processor.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %guest Show the percentage of time spent by the CPU or CPUs to run a virtual processor.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %gnice Show the percentage of time spent by the CPU or CPUs to run a niced guest.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %idle Show the percentage of time that the CPU or CPUs were idle and the system did not have an outstanding disk I/O request.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="5-perf">5. perf&lt;/h4>
&lt;p>Performance analysis tools for Linux (TBD after the actual usage)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># install perf in linux (with root)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ apt-get install linux-tools-common linux-tools-generic linux-tools-&lt;span style="color:#e6db74">`&lt;/span>uname -r&lt;span style="color:#e6db74">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ perf top
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Samples: 22K of event &lt;span style="color:#e6db74">&amp;#39;cycles&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">4000&lt;/span> Hz, Event count &lt;span style="color:#f92672">(&lt;/span>approx.&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#ae81ff">1228941005&lt;/span> lost: 0/0 drop: 0/734
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Overhead Shared Object Symbol
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 14.88% perf &lt;span style="color:#f92672">[&lt;/span>.&lt;span style="color:#f92672">]&lt;/span> __symbols__insert
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 9.56% perf &lt;span style="color:#f92672">[&lt;/span>.&lt;span style="color:#f92672">]&lt;/span> rb_next
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1.74% perf &lt;span style="color:#f92672">[&lt;/span>.&lt;span style="color:#f92672">]&lt;/span> rust_demangle_callback
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1.53% perf &lt;span style="color:#f92672">[&lt;/span>.&lt;span style="color:#f92672">]&lt;/span> output_resort
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1.44% perf &lt;span style="color:#f92672">[&lt;/span>.&lt;span style="color:#f92672">]&lt;/span> dso__find_symbol
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1.23% perf &lt;span style="color:#f92672">[&lt;/span>.&lt;span style="color:#f92672">]&lt;/span> rb_insert_color
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1.04% &lt;span style="color:#f92672">[&lt;/span>kernel&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>k&lt;span style="color:#f92672">]&lt;/span> clear_page_rep
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0.89% perf &lt;span style="color:#f92672">[&lt;/span>.&lt;span style="color:#f92672">]&lt;/span> hist_entry__sort
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0.88% perf &lt;span style="color:#f92672">[&lt;/span>.&lt;span style="color:#f92672">]&lt;/span> hpp__sort_overhead
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0.88% &lt;span style="color:#f92672">[&lt;/span>kernel&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>k&lt;span style="color:#f92672">]&lt;/span> asm_sysvec_apic_timer_interrupt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0.82% libslang.so.2.3.2 &lt;span style="color:#f92672">[&lt;/span>.&lt;span style="color:#f92672">]&lt;/span> SLsmg_write_chars
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0.66% libc.so.6 &lt;span style="color:#f92672">[&lt;/span>.&lt;span style="color:#f92672">]&lt;/span> cfree
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0.63% libc.so.6 &lt;span style="color:#f92672">[&lt;/span>.&lt;span style="color:#f92672">]&lt;/span> 0x00000000000a1747
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0.60% sshd &lt;span style="color:#f92672">[&lt;/span>.&lt;span style="color:#f92672">]&lt;/span> 0x000000000006228c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0.57% &lt;span style="color:#f92672">[&lt;/span>kernel&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>k&lt;span style="color:#f92672">]&lt;/span> memcpy_toio
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -g Enables call-graph (stack chain/backtrace) recording&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ perf top -g -p &lt;span style="color:#ae81ff">655152&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="6-strace">6. strace&lt;/h4>
&lt;p>strace - trace system calls and signals, refer to &lt;a href="https://jinying-che.github.io/posts/file_system/#5-strace">details&lt;/a>&lt;/p></content></item><item><title>File System</title><link>https://jinying-che.github.io/posts/file_system/</link><pubDate>Sat, 30 Sep 2023 15:25:41 +0800</pubDate><guid>https://jinying-che.github.io/posts/file_system/</guid><description>&lt;h2 id="architecture">Architecture&lt;/h2>
&lt;p>&lt;img alt="file system" src="https://jinying-che.github.io/images/linux_file_system.svg">&lt;/p>
&lt;h2 id="vfs">VFS&lt;/h2>
&lt;p>The Virtual File System (also known as the Virtual Filesystem Switch) is the software layer in the kernel that provides the filesystem interface to userspace programs via system call. It also provides an abstraction within the kernel which allows different filesystem implementations to coexist.&lt;/p>
&lt;p>A VFS specifies an interface (or a &amp;ldquo;contract&amp;rdquo;) between the kernel and a concrete file system. Therefore, it is easy to add support for new file system types to the kernel simply by fulfilling the contract.&lt;/p></description><content>&lt;h2 id="architecture">Architecture&lt;/h2>
&lt;p>&lt;img alt="file system" src="https://jinying-che.github.io/images/linux_file_system.svg">&lt;/p>
&lt;h2 id="vfs">VFS&lt;/h2>
&lt;p>The Virtual File System (also known as the Virtual Filesystem Switch) is the software layer in the kernel that provides the filesystem interface to userspace programs via system call. It also provides an abstraction within the kernel which allows different filesystem implementations to coexist.&lt;/p>
&lt;p>A VFS specifies an interface (or a &amp;ldquo;contract&amp;rdquo;) between the kernel and a concrete file system. Therefore, it is easy to add support for new file system types to the kernel simply by fulfilling the contract.&lt;/p>
&lt;h4 id="superblock">Superblock&lt;/h4>
&lt;p>The superblock records various information about the enclosing filesystem, such as block counts, inode counts, supported features, maintenance information, and more.&lt;/p>
&lt;p>Show the super block info in Linux:&lt;/p>
&lt;blockquote>
&lt;p>all examples in this post are from my vps (OS: Ubuntu 22.04.2 LTS)&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ df -h
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem Size Used Avail Use% Mounted on
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 96M 1.3M 95M 2% /run
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/vda1 24G 12G 11G 52% /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 479M &lt;span style="color:#ae81ff">0&lt;/span> 479M 0% /dev/shm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 5.0M &lt;span style="color:#ae81ff">0&lt;/span> 5.0M 0% /run/lock
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 96M 4.0K 96M 1% /run/user/0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ dumpe2fs /dev/vda1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dumpe2fs 1.46.5 &lt;span style="color:#f92672">(&lt;/span>30-Dec-2021&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem volume name: &amp;lt;none&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Last mounted on: /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem UUID: cc673143-6902-4174-990e-8cba0304cb7a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem magic number: 0xEF53
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem revision &lt;span style="color:#75715e">#: 1 (dynamic)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem features: has_journal ext_attr resize_inode dir_index filetype needs_recovery extent 64bit flex_bg sparse_super large_file huge_file dir_nlink extra_isize metadata_csum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem flags: signed_directory_hash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Default mount options: user_xattr acl discard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem state: clean
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Errors behavior: Continue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem OS type: Linux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Inode count: &lt;span style="color:#ae81ff">6537600&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Block count: &lt;span style="color:#ae81ff">6553339&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Reserved block count: &lt;span style="color:#ae81ff">327666&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Free blocks: &lt;span style="color:#ae81ff">3333553&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Free inodes: &lt;span style="color:#ae81ff">6325191&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>First block: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Block size: &lt;span style="color:#ae81ff">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Fragment size: &lt;span style="color:#ae81ff">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>Source Code&lt;/code>: &lt;a href="https://github.com/torvalds/linux/blob/b9ddbb0cde2adcedda26045cc58f31316a492215/include/linux/fs.h#L1188">super_block c source code&lt;/a>&lt;/p>
&lt;h4 id="directory-entry-dentry">Directory Entry (Dentry)&lt;/h4>
&lt;ol>
&lt;li>Dentry is used by VFS to represent information about the &lt;strong>directories and files&lt;/strong> inside the &lt;strong>memory&lt;/strong>&lt;/li>
&lt;li>Dentries live in RAM and are never saved to disc: they exist only for performance. (RAM cannot save all dentries -&amp;gt; LFU cache)&lt;/li>
&lt;li>An individual dentry usually has a pointer to an inode&lt;/li>
&lt;li>It&amp;rsquo;s a fast look-up mechanism to translate a pathname (filename) into a specific &lt;strong>dentry&lt;/strong> then &lt;strong>inode&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>&lt;code>Source Code&lt;/code>: &lt;a href="https://github.com/torvalds/linux/blob/b9ddbb0cde2adcedda26045cc58f31316a492215/include/linux/dcache.h#L82">dentry c source code&lt;/a>&lt;/p>
&lt;h4 id="index-node">Index Node&lt;/h4>
&lt;ol>
&lt;li>Index node(Inode) is a data structure that stores ownership, permissions, file size, and other metadata-related terms.&lt;/li>
&lt;li>They live either on the disc (for block device filesystems) or in the memory (for pseudo filesystems). Inodes that live on the disc are copied into the memory when required and changes to the inode are written back to disc.&lt;/li>
&lt;li>Every file and directory on Linux is represented by a unique inode number used by the system to identify it on the file system.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ls&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -i, --inode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># print the index number of each file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls -i workspace/main.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1067025&lt;/span> workspace/main.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls -i workspace
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1067025&lt;/span> main.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># stat - display file or file system status&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ stat workspace/main.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File: workspace/main.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Size: &lt;span style="color:#ae81ff">72&lt;/span> Blocks: &lt;span style="color:#ae81ff">8&lt;/span> IO Block: &lt;span style="color:#ae81ff">4096&lt;/span> regular file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Device: fc01h/64513d Inode: &lt;span style="color:#ae81ff">1067025&lt;/span> Links: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access: &lt;span style="color:#f92672">(&lt;/span>0644/-rw-r--r--&lt;span style="color:#f92672">)&lt;/span> Uid: &lt;span style="color:#f92672">(&lt;/span> 0/ root&lt;span style="color:#f92672">)&lt;/span> Gid: &lt;span style="color:#f92672">(&lt;/span> 0/ root&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access: 2023-10-09 22:12:30.884848072 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Modify: 2023-06-11 22:44:14.194331022 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Change: 2023-06-11 22:44:14.194331022 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Birth: 2023-06-11 22:44:14.194331022 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ stat workspace
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File: workspace
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Size: &lt;span style="color:#ae81ff">4096&lt;/span> Blocks: &lt;span style="color:#ae81ff">8&lt;/span> IO Block: &lt;span style="color:#ae81ff">4096&lt;/span> directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Device: fc01h/64513d Inode: &lt;span style="color:#ae81ff">1066674&lt;/span> Links: &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access: &lt;span style="color:#f92672">(&lt;/span>0755/drwxr-xr-x&lt;span style="color:#f92672">)&lt;/span> Uid: &lt;span style="color:#f92672">(&lt;/span> 0/ root&lt;span style="color:#f92672">)&lt;/span> Gid: &lt;span style="color:#f92672">(&lt;/span> 0/ root&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access: 2023-10-09 22:12:33.196939026 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Modify: 2023-10-09 22:12:32.612916118 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Change: 2023-10-09 22:12:32.612916118 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Birth: 2023-06-11 22:43:01.453639583 +0800
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>Source Code&lt;/code>: &lt;a href="https://github.com/torvalds/linux/blob/94f6f0550c625fab1f373bb86a6669b45e9748b3/include/linux/fs.h#L639">inode c source code&lt;/a>&lt;/p>
&lt;h4 id="file">File&lt;/h4>
&lt;ol>
&lt;li>The file object is the in-memory representation of an open file.&lt;/li>
&lt;li>The file object is initialized with a pointer to the dentry and a set of file operation member functions which are taken from the inode data.&lt;/li>
&lt;li>The file structure is placed into the file descriptor table for the process.&lt;/li>
&lt;li>Reading, writing and closing files are done by using the userspace &lt;strong>file descriptor&lt;/strong> to grab the appropriate file structure.&lt;/li>
&lt;/ol>
&lt;p>&lt;code>Source Code&lt;/code>: &lt;a href="https://github.com/torvalds/linux/blob/b9ddbb0cde2adcedda26045cc58f31316a492215/include/linux/fs.h#L992">file c source code&lt;/a>&lt;/p>
&lt;h2 id="what-happens-when-reading-a-file-in-linux">What happens when reading a file in Linux?&lt;/h2>
&lt;p>TBD Diagram to elaborate on the concepts above&lt;/p>
&lt;h2 id="block-layer">Block Layer&lt;/h2>
&lt;p>TBD&lt;/p>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;h4 id="1-df--du">1. df &amp;amp; du&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># df displays the amount of disk space available on the file system containing each file name argument&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ df -h
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem Size Used Avail Use% Mounted on
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 96M 1.3M 95M 2% /run
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/vda1 24G 12G 11G 52% /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 479M &lt;span style="color:#ae81ff">0&lt;/span> 479M 0% /dev/shm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 5.0M &lt;span style="color:#ae81ff">0&lt;/span> 5.0M 0% /run/lock
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 96M 4.0K 96M 1% /run/user/0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># du Summarize disk usage of the set of FILEs, recursively for directories.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/usr &amp;gt; du -h --max-depth&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e"># display the usage of first depth in a human readable format &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4.0K ./lib32
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>32M ./sbin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>465M ./src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4.0K ./lib64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>439M ./share
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># display the usage of this depth and sort the output in a human readable format&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ du -hs * | sort -rh | head -10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5.0G usr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3.9G var
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2.4G swapfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1.1G snap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="2-iostat-device-level">2. iostat (device level)&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Display a continuous device report of extended statistics at two second intervals.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># take note of the following statistics: &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># - %util: percentage of elapsed time during which I/O requests were issued to the device &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># - r/s, w/s: read/write requests per second for the device&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># - rKB/s, rWB/s: the number of sectors (kilobytes, megabytes) read/write for the device per second&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># - r_await, w_await: the average time (in milliseconds) for read/write requests issued to the device to be served. This includes the time spent by the requests in queue and the time spent servicing them.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ iostat -x -d &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Device r/s rkB/s rrqm/s %rrqm r_await rareq-sz w/s wkB/s wrqm/s %wrqm w_await wareq-sz d/s dkB/s drqm/s %drqm d_await dareq-sz f/s f_await aqu-sz %util
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>loop0 0.00 0.02 0.00 0.00 0.29 47.11 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>loop1 0.00 0.00 0.00 0.00 0.14 34.80 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sr0 0.00 0.00 0.00 0.00 0.00 0.12 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vda 0.24 6.06 0.09 28.32 0.37 25.79 2.18 15.93 0.48 17.94 0.38 7.32 0.01 8.63 0.00 0.00 2.14 1258.27 0.20 0.14 0.00 0.10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Device r/s rkB/s rrqm/s %rrqm r_await rareq-sz w/s wkB/s wrqm/s %wrqm w_await wareq-sz d/s dkB/s drqm/s %drqm d_await dareq-sz f/s f_await aqu-sz %util
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>loop0 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>loop1 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sr0 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vda 0.00 0.00 0.00 0.00 0.00 0.00 1.00 30.00 6.50 86.67 0.50 30.00 0.50 2.00 0.00 0.00 2.00 4.00 1.00 0.00 0.00 0.20
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="3-pidstat-process-level">3. pidstat (process level)&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># pidstat - Report statistics for Linux tasks.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -d report I/O statistics per second &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ pidstat -d &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:01 PM UID PID kB_rd/s kB_wr/s kB_ccwr/s iodelay Command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:01 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">387&lt;/span> 0.00 16.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> systemd-journal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:01 PM UID PID kB_rd/s kB_wr/s kB_ccwr/s iodelay Command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:02 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">387&lt;/span> 0.00 36.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> systemd-journal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:02 PM UID PID kB_rd/s kB_wr/s kB_ccwr/s iodelay Command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:03 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">387&lt;/span> 0.00 32.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> systemd-journal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:03 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">825&lt;/span> 0.00 4.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> sshd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ pidstat -d -p &lt;span style="color:#ae81ff">387&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e"># report I/O statistics for process 387 per second &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:24 PM UID PID kB_rd/s kB_wr/s kB_ccwr/s iodelay Command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:25 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">387&lt;/span> 0.00 16.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> systemd-journal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:26 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">387&lt;/span> 0.00 0.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> systemd-journal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:27 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">387&lt;/span> 0.00 32.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> systemd-journal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:28 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">387&lt;/span> 0.00 0.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> systemd-journal
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="4-iotop">4. iotop&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># iotop - simple top-like I/O monitor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># NOTE: not handy as kernal config may need to update (at least the CONFIG_TASK_DELAY_ACCT, CONFIG_TASK_IO_ACCOUNTING, CON-FIG_TASKSTATS and CONFIG_VM_EVENT_COUNTERS options need to be enabled in your Linux kernel build configuration.)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ iotop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Total DISK READ : 0.00 B/s | Total DISK WRITE : 7.85 K/s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Actual DISK READ: 0.00 B/s | Actual DISK WRITE: 0.00 B/s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TID PRIO USER DISK READ DISK WRITE SWAPIN IO&amp;gt; COMMAND
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">15055&lt;/span> be/3 root 0.00 B/s 7.85 K/s 0.00 % 0.00 % systemd-journald
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="5-strace">5. strace&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># strace - trace system calls and signals&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># process 654373 is a prometheus node exporter, through the strace (system calls), it&amp;#39;s able to roughly understand how does node exporter work &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ strace -p &lt;span style="color:#ae81ff">654373&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>newfstatat&lt;span style="color:#f92672">(&lt;/span>AT_FDCWD, &lt;span style="color:#e6db74">&amp;#34;/proc&amp;#34;&lt;/span>, &lt;span style="color:#f92672">{&lt;/span>st_mode&lt;span style="color:#f92672">=&lt;/span>S_IFDIR|0555, st_size&lt;span style="color:#f92672">=&lt;/span>0, ...&lt;span style="color:#f92672">}&lt;/span>, 0&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>statfs&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/proc&amp;#34;&lt;/span>, &lt;span style="color:#f92672">{&lt;/span>f_type&lt;span style="color:#f92672">=&lt;/span>PROC_SUPER_MAGIC, f_bsize&lt;span style="color:#f92672">=&lt;/span>4096, f_blocks&lt;span style="color:#f92672">=&lt;/span>0, f_bfree&lt;span style="color:#f92672">=&lt;/span>0, f_bavail&lt;span style="color:#f92672">=&lt;/span>0, f_files&lt;span style="color:#f92672">=&lt;/span>0, f_ffree&lt;span style="color:#f92672">=&lt;/span>0, f_fsid&lt;span style="color:#f92672">={&lt;/span>val&lt;span style="color:#f92672">=[&lt;/span>0, 0&lt;span style="color:#f92672">]}&lt;/span>, f_namelen&lt;span style="color:#f92672">=&lt;/span>255, f_frsize&lt;span style="color:#f92672">=&lt;/span>4096, f_flags&lt;span style="color:#f92672">=&lt;/span>ST_VALID|ST_NOSUID|ST_NODEV|ST_NOEXEC|ST_RELATIME&lt;span style="color:#f92672">})&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>newfstatat&lt;span style="color:#f92672">(&lt;/span>AT_FDCWD, &lt;span style="color:#e6db74">&amp;#34;/proc/655152&amp;#34;&lt;/span>, &lt;span style="color:#f92672">{&lt;/span>st_mode&lt;span style="color:#f92672">=&lt;/span>S_IFDIR|0555, st_size&lt;span style="color:#f92672">=&lt;/span>0, ...&lt;span style="color:#f92672">}&lt;/span>, 0&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>openat&lt;span style="color:#f92672">(&lt;/span>AT_FDCWD, &lt;span style="color:#e6db74">&amp;#34;/proc/655152/stat&amp;#34;&lt;/span>, O_RDONLY|O_CLOEXEC&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fcntl&lt;span style="color:#f92672">(&lt;/span>8, F_GETFL&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> 0x8000 &lt;span style="color:#f92672">(&lt;/span>flags O_RDONLY|O_LARGEFILE&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fcntl&lt;span style="color:#f92672">(&lt;/span>8, F_SETFL, O_RDONLY|O_NONBLOCK|O_LARGEFILE&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>epoll_ctl&lt;span style="color:#f92672">(&lt;/span>4, EPOLL_CTL_ADD, 8, &lt;span style="color:#f92672">{&lt;/span>events&lt;span style="color:#f92672">=&lt;/span>EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, data&lt;span style="color:#f92672">={&lt;/span>u32&lt;span style="color:#f92672">=&lt;/span>1268860600, u64&lt;span style="color:#f92672">=&lt;/span>139673605326520&lt;span style="color:#f92672">}})&lt;/span> &lt;span style="color:#f92672">=&lt;/span> -1 EPERM &lt;span style="color:#f92672">(&lt;/span>Operation not permitted&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fcntl&lt;span style="color:#f92672">(&lt;/span>8, F_GETFL&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> 0x8800 &lt;span style="color:#f92672">(&lt;/span>flags O_RDONLY|O_NONBLOCK|O_LARGEFILE&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fcntl&lt;span style="color:#f92672">(&lt;/span>8, F_SETFL, O_RDONLY|O_LARGEFILE&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>read&lt;span style="color:#f92672">(&lt;/span>8, &lt;span style="color:#e6db74">&amp;#34;655152 (node_exporter) R 655107 &amp;#34;&lt;/span>..., 512&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">308&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>read&lt;span style="color:#f92672">(&lt;/span>8, &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>, 204&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>close&lt;span style="color:#f92672">(&lt;/span>8&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>openat&lt;span style="color:#f92672">(&lt;/span>AT_FDCWD, &lt;span style="color:#e6db74">&amp;#34;/proc/stat&amp;#34;&lt;/span>, O_RDONLY|O_CLOEXEC&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fcntl&lt;span style="color:#f92672">(&lt;/span>8, F_GETFL&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> 0x8000 &lt;span style="color:#f92672">(&lt;/span>flags O_RDONLY|O_LARGEFILE&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fcntl&lt;span style="color:#f92672">(&lt;/span>8, F_SETFL, O_RDONLY|O_NONBLOCK|O_LARGEFILE&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>epoll_ctl&lt;span style="color:#f92672">(&lt;/span>4, EPOLL_CTL_ADD, 8, &lt;span style="color:#f92672">{&lt;/span>events&lt;span style="color:#f92672">=&lt;/span>EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, data&lt;span style="color:#f92672">={&lt;/span>u32&lt;span style="color:#f92672">=&lt;/span>1268860600, u64&lt;span style="color:#f92672">=&lt;/span>139673605326520&lt;span style="color:#f92672">}})&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>read&lt;span style="color:#f92672">(&lt;/span>8, &lt;span style="color:#e6db74">&amp;#34;cpu 773459 68488 441098 3776333&amp;#34;&lt;/span>..., 512&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">512&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="6-lsof">6. lsof&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># lsof - lists on its standard output file information about files opened by processes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># An open file may be a regular file, a directory, a block special file, a character special file, an executing text reference, a library, a stream or a network file (Internet socket, NFS file or UNIX domain socket.)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># man lsof for more details &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ lsof -p &lt;span style="color:#ae81ff">654373&lt;/span> &lt;span style="color:#75715e"># list all files opened by node exporter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root cwd DIR 252,1 &lt;span style="color:#ae81ff">4096&lt;/span> &lt;span style="color:#ae81ff">1046028&lt;/span> /root/workspace/node_exporter-1.6.1.linux-amd64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root rtd DIR 252,1 &lt;span style="color:#ae81ff">4096&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root txt REG 252,1 &lt;span style="color:#ae81ff">20025119&lt;/span> &lt;span style="color:#ae81ff">1046289&lt;/span> /root/workspace/node_exporter-1.6.1.linux-amd64/node_exporter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root 0u CHR 136,5 0t0 &lt;span style="color:#ae81ff">8&lt;/span> /dev/pts/5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root 1u CHR 136,5 0t0 &lt;span style="color:#ae81ff">8&lt;/span> /dev/pts/5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root 2u CHR 136,5 0t0 &lt;span style="color:#ae81ff">8&lt;/span> /dev/pts/5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root 3u IPv6 &lt;span style="color:#ae81ff">10182875&lt;/span> 0t0 TCP *:9100 &lt;span style="color:#f92672">(&lt;/span>LISTEN&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root 4u a_inode 0,14 &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">12477&lt;/span> &lt;span style="color:#f92672">[&lt;/span>eventpoll&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root 5r FIFO 0,13 0t0 &lt;span style="color:#ae81ff">10182871&lt;/span> pipe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root 6w FIFO 0,13 0t0 &lt;span style="color:#ae81ff">10182871&lt;/span> pipe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="linux-storage-stack">Linux Storage Stack&lt;/h2>
&lt;p>&lt;img alt="linux storage stack" src="https://jinying-che.github.io/images/Linux-storage-stack-diagram_v6.2/linux_storage_stack.svg">
&lt;a href="https://www.thomas-krenn.com/en/wiki/Linux_Storage_Stack_Diagram">https://www.thomas-krenn.com/en/wiki/Linux_Storage_Stack_Diagram&lt;/a>&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://developer.ibm.com/tutorials/l-linux-filesystem/">https://developer.ibm.com/tutorials/l-linux-filesystem/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.kernel.org/doc/html/latest/filesystems/ext4/globals.html?highlight=file+system+super+block">super block &amp;ndash; kernel doc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.kernel.org/doc/html/latest/filesystems/vfs.html?highlight=inode">vfs overview &amp;ndash; kernel doc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://itslinuxfoss.com/what-is-superblock-inode-dentry-and-file/#:~:text=The%20superblock%20is%20the%20data,of%20bytes%20in%20different%20forms.">What is a Superblock, Dentry, Inode and a File?&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Memory</title><link>https://jinying-che.github.io/posts/memory/</link><pubDate>Thu, 28 Sep 2023 16:10:39 +0800</pubDate><guid>https://jinying-che.github.io/posts/memory/</guid><description>&lt;h2 id="virtual-memory">Virtual Memory&lt;/h2>
&lt;ol>
&lt;li>Virtual memory is an abstraction for memory management by operation system&lt;/li>
&lt;li>Each process operates the virtual memory (virtual address), which is mapped to physical memory by memory management unit (MMU) in CPU&lt;/li>
&lt;li>The physical memory is only allocated to process when memory is firstly accessed. (e.g. &lt;code>mmap()&lt;/code> and &lt;code>brk()&lt;/code> in C just allocate the virtual memory first, hence you can see &lt;code>VIRT&lt;/code> in &lt;code>top&lt;/code> command is usually much higher than &lt;code>RES&lt;/code>)&lt;/li>
&lt;li>Virtual maps to physical memory and disk (swap)&lt;/li>
&lt;li>Virtual memory for one process includes both user space and kernel space.&lt;/li>
&lt;/ol>
&lt;p>&lt;img alt="virtual memory" src="https://jinying-che.github.io/images/virtual_memory.png">&lt;/p></description><content>&lt;h2 id="virtual-memory">Virtual Memory&lt;/h2>
&lt;ol>
&lt;li>Virtual memory is an abstraction for memory management by operation system&lt;/li>
&lt;li>Each process operates the virtual memory (virtual address), which is mapped to physical memory by memory management unit (MMU) in CPU&lt;/li>
&lt;li>The physical memory is only allocated to process when memory is firstly accessed. (e.g. &lt;code>mmap()&lt;/code> and &lt;code>brk()&lt;/code> in C just allocate the virtual memory first, hence you can see &lt;code>VIRT&lt;/code> in &lt;code>top&lt;/code> command is usually much higher than &lt;code>RES&lt;/code>)&lt;/li>
&lt;li>Virtual maps to physical memory and disk (swap)&lt;/li>
&lt;li>Virtual memory for one process includes both user space and kernel space.&lt;/li>
&lt;/ol>
&lt;p>&lt;img alt="virtual memory" src="https://jinying-che.github.io/images/virtual_memory.png">&lt;/p>
&lt;h2 id="buffer-vs-cache">Buffer vs Cache&lt;/h2>
&lt;ul>
&lt;li>Buffer: the memory used for the disk (both read and write)&lt;/li>
&lt;li>Cache: the memory used for the file (both read and write)&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>Common Mistake: Buffer is for write only, whereas Cache is for read only --&amp;gt; WRONG!
&lt;/code>&lt;/pre>&lt;h2 id="reclaim-memory">Reclaim Memory&lt;/h2>
&lt;p>Operation system will try to reclaim the memory when the resource is lack:&lt;/p>
&lt;ol>
&lt;li>LRU（Least Recently Used）&lt;/li>
&lt;li>Swap the less used memory to disk&lt;/li>
&lt;li>OOM (Out of Memory): kill the process who takes up lots of memory&lt;/li>
&lt;/ol>
&lt;h2 id="allocating-kernel-memory-tbd">Allocating kernel memory (TBD)&lt;/h2>
&lt;h4 id="buddy-system">Buddy System&lt;/h4>
&lt;p>The buddy system is a memory allocation algorithm that works by dividing memory into blocks of a fixed size, with each block being a power of two in size.&lt;/p>
&lt;p>&lt;strong>Drawback&lt;/strong>: The main drawback in buddy system is internal fragmentation as larger block of memory is acquired then required. For example if a 36 kb request is made then it can only be satisfied by 64 kb segment and remaining memory is wasted.&lt;/p>
&lt;h4 id="slab-system">Slab System&lt;/h4>
&lt;p>The slab system is a memory allocation algorithm that is designed specifically for kernel memory. It works by dividing memory into fixed-size caches or slabs, each of which contains a set of objects of the same type&lt;/p>
&lt;h2 id="troubleshooting">TroubleShooting&lt;/h2>
&lt;h4 id="1-tophtop">1. top/htop&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># top, press M (order by memory)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ top
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%Cpu&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">)&lt;/span>: 0.7 us, 0.7 sy, 0.0 ni, 98.7 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MiB Mem : 35.8/957.5 &lt;span style="color:#f92672">[||||||||||||||||||||||||||||||||||||&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MiB Swap: 4.1/2400.0 &lt;span style="color:#f92672">[||||&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">428&lt;/span> root rt &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">289312&lt;/span> &lt;span style="color:#ae81ff">27100&lt;/span> &lt;span style="color:#ae81ff">9072&lt;/span> S 0.3 2.8 4:20.42 multipathd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">745&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">1209328&lt;/span> &lt;span style="color:#ae81ff">7900&lt;/span> &lt;span style="color:#ae81ff">1832&lt;/span> S 0.3 0.8 15:47.03 containerd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">359212&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">15424&lt;/span> &lt;span style="color:#ae81ff">9208&lt;/span> &lt;span style="color:#ae81ff">7600&lt;/span> S 0.3 0.9 0:00.01 sshd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">1&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">167692&lt;/span> &lt;span style="color:#ae81ff">8560&lt;/span> &lt;span style="color:#ae81ff">5560&lt;/span> S 0.0 0.9 1:30.35 systemd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">2&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> S 0.0 0.0 0:00.37 kthreadd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run &lt;code>man top&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>VIRT&lt;/code>: The total amount of virtual memory used by the task. It includes all code, data and shared libraries plus pages that have been swapped out and pages that have been mapped but not used.&lt;/li>
&lt;li>&lt;code>RES&lt;/code>: A subset of the virtual address space (VIRT) representing the non-swapped &lt;strong>physical memory&lt;/strong> a task is currently using.&lt;/li>
&lt;li>&lt;code>SHR&lt;/code>: A subset of resident memory (RES) that may be used by other processes.&lt;/li>
&lt;li>&lt;code>%MEM&lt;/code>: A task&amp;rsquo;s currently resident share of available physical memory.&lt;/li>
&lt;/ul>
&lt;h4 id="2-free">2. free&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># free displays the total amount of free and used physical and swap memory in the system, as well as the buffers and caches used by the kernel. The information is gathered by parsing /proc/meminfo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> total used free shared buff/cache available
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Mem: &lt;span style="color:#ae81ff">980508&lt;/span> &lt;span style="color:#ae81ff">183624&lt;/span> &lt;span style="color:#ae81ff">74136&lt;/span> &lt;span style="color:#ae81ff">348&lt;/span> &lt;span style="color:#ae81ff">722748&lt;/span> &lt;span style="color:#ae81ff">631876&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Swap: &lt;span style="color:#ae81ff">2457596&lt;/span> &lt;span style="color:#ae81ff">101948&lt;/span> &lt;span style="color:#ae81ff">2355648&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run &lt;code>man free&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>total&lt;/code>: Total installed memory (MemTotal and SwapTotal in /proc/meminfo)&lt;/li>
&lt;li>&lt;code>used&lt;/code>: Used memory (calculated as total - free - buffers - cache)&lt;/li>
&lt;li>&lt;code>free&lt;/code>: Unused memory (MemFree and SwapFree in /proc/meminfo)&lt;/li>
&lt;li>&lt;code>shared&lt;/code>: Memory used (mostly) by tmpfs (Shmem in /proc/meminfo)&lt;/li>
&lt;li>&lt;code>buffers&lt;/code>: Memory used by kernel buffers (Buffers in /proc/meminfo)&lt;/li>
&lt;li>&lt;code>cache&lt;/code>: Memory used by the page cache and slabs (Cached and SReclaimable in /proc/meminfo)&lt;/li>
&lt;li>&lt;code>buff/cache&lt;/code>: Sum of buffers and cache&lt;/li>
&lt;li>&lt;code>available&lt;/code>: Estimation of how much memory is available for starting new applications, without swapping.&lt;/li>
&lt;/ul>
&lt;h4 id="3-vmstat">3. vmstat&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># usage: vmstat [options] [delay [count]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ vmstat -t &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#75715e"># report virtual memory statistics per 2 second, total 5 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu----- -----timestamp-----
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r b swpd free buff cache si so bi bo in cs us sy id wa st UTC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">101948&lt;/span> &lt;span style="color:#ae81ff">72904&lt;/span> &lt;span style="color:#ae81ff">85464&lt;/span> &lt;span style="color:#ae81ff">641460&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#ae81ff">14&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-09-28 14:41:49
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">101948&lt;/span> &lt;span style="color:#ae81ff">72904&lt;/span> &lt;span style="color:#ae81ff">85472&lt;/span> &lt;span style="color:#ae81ff">641460&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">226&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span> &lt;span style="color:#ae81ff">85&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-09-28 14:41:51
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">101948&lt;/span> &lt;span style="color:#ae81ff">72904&lt;/span> &lt;span style="color:#ae81ff">85472&lt;/span> &lt;span style="color:#ae81ff">641460&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span> &lt;span style="color:#ae81ff">104&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">99&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-09-28 14:41:53
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">101948&lt;/span> &lt;span style="color:#ae81ff">72904&lt;/span> &lt;span style="color:#ae81ff">85472&lt;/span> &lt;span style="color:#ae81ff">641460&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">41&lt;/span> &lt;span style="color:#ae81ff">62&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-09-28 14:41:55
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">101948&lt;/span> &lt;span style="color:#ae81ff">72904&lt;/span> &lt;span style="color:#ae81ff">85472&lt;/span> &lt;span style="color:#ae81ff">641460&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span> &lt;span style="color:#ae81ff">39&lt;/span> &lt;span style="color:#ae81ff">76&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">99&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-09-28 14:41:57
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run &lt;code>man vmstat&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Memory&lt;/p>
&lt;ul>
&lt;li>These are affected by the &amp;ndash;unit option.&lt;/li>
&lt;li>swpd: the amount of swap memory used.&lt;/li>
&lt;li>free: the amount of idle memory.&lt;/li>
&lt;li>buff: the amount of memory used as buffers.&lt;/li>
&lt;li>cache: the amount of memory used as cache.&lt;/li>
&lt;li>inact: the amount of inactive memory. (-a option)&lt;/li>
&lt;li>active: the amount of active memory. (-a option)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Swap&lt;/p>
&lt;ul>
&lt;li>These are affected by the &amp;ndash;unit option.&lt;/li>
&lt;li>si: Amount of memory swapped in from disk (/s).&lt;/li>
&lt;li>so: Amount of memory swapped to disk (/s).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>IO&lt;/p>
&lt;ul>
&lt;li>bi: Blocks received from a block device (blocks/s).&lt;/li>
&lt;li>bo: Blocks sent to a block device (blocks/s).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>System&lt;/p>
&lt;ul>
&lt;li>in: The number of interrupts per second, including the clock.&lt;/li>
&lt;li>cs: The number of context switches per second.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>CPU&lt;/p>
&lt;ul>
&lt;li>These are percentages of total CPU time.&lt;/li>
&lt;li>us: Time spent running non-kernel code. (user time, including nice time)&lt;/li>
&lt;li>sy: Time spent running kernel code. (system time)&lt;/li>
&lt;li>id: Time spent idle. Prior to Linux 2.5.41, this includes IO-wait time.&lt;/li>
&lt;li>wa: Time spent waiting for IO. Prior to Linux 2.5.41, included in idle.&lt;/li>
&lt;li>st: Time stolen from a virtual machine. Prior to Linux 2.6.11, unknown.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="4-procmeminfo">4. /proc/meminfo&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># This file reports statistics about memory usage on the system.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat /proc/meminfo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># show the first several rows only&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MemTotal: &lt;span style="color:#ae81ff">980508&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MemFree: &lt;span style="color:#ae81ff">74136&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MemAvailable: &lt;span style="color:#ae81ff">634416&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Buffers: &lt;span style="color:#ae81ff">85092&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cached: &lt;span style="color:#ae81ff">571860&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SwapCached: &lt;span style="color:#ae81ff">9556&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Active: &lt;span style="color:#ae81ff">408724&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Inactive: &lt;span style="color:#ae81ff">305408&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Active&lt;span style="color:#f92672">(&lt;/span>anon&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#ae81ff">21352&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Inactive&lt;span style="color:#f92672">(&lt;/span>anon&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#ae81ff">45240&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Active&lt;span style="color:#f92672">(&lt;/span>file&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#ae81ff">387372&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Inactive&lt;span style="color:#f92672">(&lt;/span>file&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#ae81ff">260168&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Unevictable: &lt;span style="color:#ae81ff">27620&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Mlocked: &lt;span style="color:#ae81ff">27620&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SwapTotal: &lt;span style="color:#ae81ff">2457596&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="5-memleak">5. memleak&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># memleak - Print a summary of outstanding allocations and their call stacks to detect memory leaks. Uses Linux eBPF/bcc.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Install: https://github.com/iovisor/bcc/blob/master/INSTALL.md#installing-bcc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ /usr/sbin/memleak-bpfcc -p &lt;span style="color:#66d9ef">$(&lt;/span>pidof systemd&lt;span style="color:#66d9ef">)&lt;/span> &lt;span style="color:#75715e"># systemd no memory leak&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attaching to pid 212971, Ctrl+C to quit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>04:34:51&lt;span style="color:#f92672">]&lt;/span> Top &lt;span style="color:#ae81ff">10&lt;/span> stacks with outstanding allocations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>04:34:56&lt;span style="color:#f92672">]&lt;/span> Top &lt;span style="color:#ae81ff">10&lt;/span> stacks with outstanding allocations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>04:35:01&lt;span style="color:#f92672">]&lt;/span> Top &lt;span style="color:#ae81ff">10&lt;/span> stacks with outstanding allocations:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.geeksforgeeks.org/operating-system-allocating-kernel-memory-buddy-system-slab-system/">https://www.geeksforgeeks.org/operating-system-allocating-kernel-memory-buddy-system-slab-system/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.kernel.org/doc/html/next/admin-guide/mm/concepts.html">https://www.kernel.org/doc/html/next/admin-guide/mm/concepts.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/iovisor/bcc">BPF Compiler Collection&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>DNS</title><link>https://jinying-che.github.io/posts/network/dns/</link><pubDate>Wed, 20 Sep 2023 11:47:31 +0800</pubDate><guid>https://jinying-che.github.io/posts/network/dns/</guid><description>&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Domain_Name_System">Domain Name System (DNS)&lt;/a> is the phonebook of the Internet. It translates human-readable domain names (google.com) to machine-readable IP addresses (142.251.46.238).&lt;/p>
&lt;p>DNS is not very complex but super useful.&lt;/p>
&lt;h2 id="how-does-dns-work">How does DNS work?&lt;/h2>
&lt;p>&lt;img alt="dns architecutre" src="https://jinying-che.github.io/images/dns_architecture.svg">&lt;/p>
&lt;p>&lt;img alt="dns flow" src="https://jinying-che.github.io/images/dns_flow.png">&lt;/p>
&lt;p>The basic flow to query dns level by level as follows, the previous server stores the next server address, e.g. Root Nameserver stores TLD Nameserver addresss.&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Brower cache and OS cache&lt;/strong>&lt;/li>
&lt;li>&lt;strong>DNS Resolver&lt;/strong>: is responsible for initiating and sequencing the queries that ultimately lead to a full resolution (translation) of the resource sought. DNS resolvers are classified by a variety of query methods, such as &lt;strong>recursive&lt;/strong>, &lt;strong>non-recursive&lt;/strong>, and &lt;strong>iterative&lt;/strong>. A resolution process may use a combination of these methods.&lt;/li>
&lt;li>&lt;strong>Root Nameserver&lt;/strong>: the first step in translating (resolving) human readable host names into IP addresses. It stores the IP addresses of TLD, There are &lt;strong>13&lt;/strong> logical Root Nameserver globally, e.g.
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>- l.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- m.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- a.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- b.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- c.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- d.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- e.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- f.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- g.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- h.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- i.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- j.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- k.root-servers.net.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>TLD Nameserver&lt;/strong> (Top Level Domain Server): It stores the IP addresses of authoritative name servers, e.g.
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>- .com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .edu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .net
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .us
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .cn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>Authoritative Nameserver&lt;/strong>: it provides the actual anwser for the dns request.&lt;/li>
&lt;/ol>
&lt;h3 id="example">Example&lt;/h3>
&lt;p>Let&amp;rsquo;s try to trace the dns request for &lt;code>jinying-che.github.io&lt;/code> from my local laptop:&lt;/p></description><content>&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Domain_Name_System">Domain Name System (DNS)&lt;/a> is the phonebook of the Internet. It translates human-readable domain names (google.com) to machine-readable IP addresses (142.251.46.238).&lt;/p>
&lt;p>DNS is not very complex but super useful.&lt;/p>
&lt;h2 id="how-does-dns-work">How does DNS work?&lt;/h2>
&lt;p>&lt;img alt="dns architecutre" src="https://jinying-che.github.io/images/dns_architecture.svg">&lt;/p>
&lt;p>&lt;img alt="dns flow" src="https://jinying-che.github.io/images/dns_flow.png">&lt;/p>
&lt;p>The basic flow to query dns level by level as follows, the previous server stores the next server address, e.g. Root Nameserver stores TLD Nameserver addresss.&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Brower cache and OS cache&lt;/strong>&lt;/li>
&lt;li>&lt;strong>DNS Resolver&lt;/strong>: is responsible for initiating and sequencing the queries that ultimately lead to a full resolution (translation) of the resource sought. DNS resolvers are classified by a variety of query methods, such as &lt;strong>recursive&lt;/strong>, &lt;strong>non-recursive&lt;/strong>, and &lt;strong>iterative&lt;/strong>. A resolution process may use a combination of these methods.&lt;/li>
&lt;li>&lt;strong>Root Nameserver&lt;/strong>: the first step in translating (resolving) human readable host names into IP addresses. It stores the IP addresses of TLD, There are &lt;strong>13&lt;/strong> logical Root Nameserver globally, e.g.
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>- l.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- m.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- a.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- b.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- c.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- d.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- e.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- f.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- g.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- h.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- i.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- j.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- k.root-servers.net.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>TLD Nameserver&lt;/strong> (Top Level Domain Server): It stores the IP addresses of authoritative name servers, e.g.
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>- .com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .edu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .net
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .us
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- .cn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>Authoritative Nameserver&lt;/strong>: it provides the actual anwser for the dns request.&lt;/li>
&lt;/ol>
&lt;h3 id="example">Example&lt;/h3>
&lt;p>Let&amp;rsquo;s try to trace the dns request for &lt;code>jinying-che.github.io&lt;/code> from my local laptop:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>➜ ~ dig +trace jinying-che.github.io
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.10.6 &amp;lt;&amp;lt;&amp;gt;&amp;gt; +trace jinying-che.github.io
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; global options: +cmd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS l.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS m.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS a.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS b.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS c.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS d.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS e.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS f.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS g.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS h.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS i.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS j.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN NS k.root-servers.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>. &lt;span style="color:#ae81ff">467805&lt;/span> IN RRSIG NS &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">518400&lt;/span> &lt;span style="color:#ae81ff">20231002140000&lt;/span> &lt;span style="color:#ae81ff">20230919130000&lt;/span> &lt;span style="color:#ae81ff">11019&lt;/span> . hSoNzesJLtJnf9gXYqG4SMrn8R78uNEqUgc1xcFKglavg16gnPrvQnuP sLb74PkmHE+uqQ1ZPs31X6XrA8E/yhlF8r4kPQAaEiMhkLXsZ1QPLgfj wHFWsFcVmWZTKJIQO/6H7P6ht0jhX0pLVRVRTZtIPH0uYqz6w9Z8vWuw Haaqm+48d5+cuyn2iNNqxO8omlQLALwaALu6/7hZPQfgkH6+XBPvSagj 6FOV+zun2hwKNCwrJ7elYQCfL7xi0UbjAOt+OOJYJfF9vfJq9qYnt8/O IBrfdRHtsryH/Fmk/wUPhgNEMYLwgz4n1z+a25A7q5ofocId5lsDYAUJ YxLSNA&lt;span style="color:#f92672">==&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; Received &lt;span style="color:#ae81ff">1097&lt;/span> bytes from 192.168.0.1#53&lt;span style="color:#f92672">(&lt;/span>192.168.0.1&lt;span style="color:#f92672">)&lt;/span> in &lt;span style="color:#ae81ff">11&lt;/span> ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>io. &lt;span style="color:#ae81ff">172800&lt;/span> IN NS a2.nic.io.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>io. &lt;span style="color:#ae81ff">172800&lt;/span> IN NS c0.nic.io.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>io. &lt;span style="color:#ae81ff">172800&lt;/span> IN NS a0.nic.io.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>io. &lt;span style="color:#ae81ff">172800&lt;/span> IN NS b0.nic.io.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>io. &lt;span style="color:#ae81ff">86400&lt;/span> IN DS &lt;span style="color:#ae81ff">57355&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> 95A57C3BAB7849DBCDDF7C72ADA71A88146B141110318CA5BE672057 E865C3E2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>io. &lt;span style="color:#ae81ff">86400&lt;/span> IN RRSIG DS &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">86400&lt;/span> &lt;span style="color:#ae81ff">20231003050000&lt;/span> &lt;span style="color:#ae81ff">20230920040000&lt;/span> &lt;span style="color:#ae81ff">11019&lt;/span> . TnYR1fL2pnUlBTTsJleHjjmxjLs96HwMJOtcHvTzwK31ZBoT+sp76dHq bsQfFgX7FqyTjIzF+z/W7dK1wKnO1ONvhbeWCTZO8SAIMaJU4ZyPAAMo D+xM7YpRHrAYES2wi+cX20kDDKUXauhxiesHqywSMdNK6XugyLluSaz1 J5c2Y0S2r7pZwEPV5v6w9TjzNQOfcfu0NLQx1i7JAbuLExGc7/7pjqxY XB2LH9FtyzgfAkm0ovTu5BRzbUxO/lSURlGIPsI05aFVz6HEhnl04Ujb dmir+S3ffOahHgxjD2al8yIx/FS67ZCi+va2pA6lHdHsktrNnTn2tGZt aUJrzg&lt;span style="color:#f92672">==&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; Received &lt;span style="color:#ae81ff">637&lt;/span> bytes from 192.112.36.4#53&lt;span style="color:#f92672">(&lt;/span>g.root-servers.net&lt;span style="color:#f92672">)&lt;/span> in &lt;span style="color:#ae81ff">85&lt;/span> ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN NS dns2.p05.nsone.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN NS ns-1622.awsdns-10.co.uk.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN NS dns3.p05.nsone.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN NS dns1.p05.nsone.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN NS ns-692.awsdns-22.net.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0d790076pp5pfktg2hrthj5bj6ckckcb.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN NSEC3 &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> 332539EE7F95C32A 0D7N522D3BFMA1LA01BUIOBUK6MROGMU NS SOA RRSIG DNSKEY NSEC3PARAM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0d790076pp5pfktg2hrthj5bj6ckckcb.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN RRSIG NSEC3 &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">3600&lt;/span> &lt;span style="color:#ae81ff">20231011082044&lt;/span> &lt;span style="color:#ae81ff">20230920072044&lt;/span> &lt;span style="color:#ae81ff">32553&lt;/span> io. hg8Fr2R0FnIfikGso1mx3B66B9QtVVcMoOL108Ahw5D7TUTo/AL+vpP9 AFEa5GMnkenQqbWsp5/xgEuhJxeMbbzF88roBy6hnSoLq21qysLpIQuC Q+TprenA+f7dKiza7RLTTPnv6qN1b50Z/VSsowMK6Fw353h2WLOUAg0G 2I4&lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0jehpe7obc68rhh4ntet0u9o44qmosmo.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN NSEC3 &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> 332539EE7F95C32A 0JES1F5OD9SG1E4CCRGBS865PMBUV4PC NS DS RRSIG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0jehpe7obc68rhh4ntet0u9o44qmosmo.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN RRSIG NSEC3 &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">3600&lt;/span> &lt;span style="color:#ae81ff">20231008005435&lt;/span> &lt;span style="color:#ae81ff">20230916235435&lt;/span> &lt;span style="color:#ae81ff">32553&lt;/span> io. b6iUJ3A5Govhm/HVZIU7ygw7l8tHsUnDFCZaR50HDmYtbmi/g83PASgw 4IgNm42FI2u8oX3HZ2ce8gBK48ts/1bbSCxthUqO2KrSlou+Okh7z+J1 TAeRsC8FkkA/RHu+ymFM1g0BB2cv23Rnftwtl9jsD4JoDKSzhVcKiOx9 WIA&lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; Received &lt;span style="color:#ae81ff">687&lt;/span> bytes from 65.22.160.17#53&lt;span style="color:#f92672">(&lt;/span>a0.nic.io&lt;span style="color:#f92672">)&lt;/span> in &lt;span style="color:#ae81ff">7&lt;/span> ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jinying-che.github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN A 185.199.108.153
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jinying-che.github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN A 185.199.109.153
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jinying-che.github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN A 185.199.110.153
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jinying-che.github.io. &lt;span style="color:#ae81ff">3600&lt;/span> IN A 185.199.111.153
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; Received &lt;span style="color:#ae81ff">114&lt;/span> bytes from 198.51.44.5#53&lt;span style="color:#f92672">(&lt;/span>dns1.p05.nsone.net&lt;span style="color:#f92672">)&lt;/span> in &lt;span style="color:#ae81ff">168&lt;/span> ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>Get NS Record: 13 Root Nameservers from &lt;code>192.168.0.1&lt;/code>(DNS Resolver) which is configured by &lt;code>/etc/resolv.conf&lt;/code>&lt;/li>
&lt;li>Get NS Record: TLD (Top Level Domain) from one of Root Nameserve &lt;code>g.root-servers.net&lt;/code>&lt;/li>
&lt;li>Get NS Record: Authoritative Nameserver from one of TLD &lt;code>a0.nic.io&lt;/code>&lt;/li>
&lt;li>Get A Record: Actual ip address from one of Authoritative Nameserver &lt;code>dns1.p05.nsone.net&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>TXT Record&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># example&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>host.widgets.com. IN TXT &lt;span style="color:#e6db74">&amp;#34;printer=lpr5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sam.widgets.com. IN TXT &lt;span style="color:#e6db74">&amp;#34;favorite drink=orange juice&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="dns-record">DNS Record&lt;/h2>
&lt;p>There&amp;rsquo;re a lot of &lt;a href="https://en.wikipedia.org/wiki/List_of_DNS_record_types">DNS Record types&lt;/a>, the follows are the common record from the client perspective:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Record&lt;/th>
&lt;th>Function&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A&lt;/td>
&lt;td>Address record: Returns a 32-bit IPv4 address&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AAAA&lt;/td>
&lt;td>IPv6 address record: Returns a 128-bit IPv6 address&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>NS&lt;/td>
&lt;td>Name server record: Delegates a DNS zone to use the given authoritative name servers&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CNAME&lt;/td>
&lt;td>Canonical name record: Alias of one name to another: the DNS lookup will continue by retrying the lookup with the new name&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TXT&lt;/td>
&lt;td>arbitrary text: two of the most important uses for DNS TXT records are email spam prevention and domain ownership verification&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>There&amp;rsquo;re two way to query the ip address by domain, typically whenever a system needs to resolve a name, it first checks the &lt;code>/etc/hosts&lt;/code> file. If no entry matched, it sends a query to the configured DNS server (by &lt;code>/etc/resolv.conf&lt;/code>).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># /etc/resolv.conf defines the namesever address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat /etc/resolv.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nameserver 114.114.114.114
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># /etc/hosts defines the domain and ip address pair directly&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat /etc/hosts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1 localhost
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># The order in which (/etc/hosts and /etc/resolv.conf) file is checked &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># is defined in the /etc/nsswitch.conf file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat /etc/nsswitch.conf | grep host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hosts: files dns
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="protocol">Protocol&lt;/h2>
&lt;p>DNS originally used the &lt;code>UDP&lt;/code> as transport over IP. Reliability, security, and privacy concerns spawned the use of the &lt;code>TCP&lt;/code> as well as numerous other protocol developments.&lt;/p>
&lt;h2 id="referrence">Referrence&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.cloudflare.com/learning/dns/what-is-dns/">https://www.cloudflare.com/learning/dns/what-is-dns/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Domain_Name_System">https://en.wikipedia.org/wiki/Domain_Name_System&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.bytebytego.com/p/how-does-the-domain-name-system-dns">https://blog.bytebytego.com/p/how-does-the-domain-name-system-dns&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://draveness.me/dns-coredns/">https://draveness.me/dns-coredns/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://draveness.me/whys-the-design-dns-udp-tcp/">https://draveness.me/whys-the-design-dns-udp-tcp/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://time.geekbang.org/column/article/81850">https://time.geekbang.org/column/article/81850&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://datatracker.ietf.org/doc/html/rfc1035">RFC 1035&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/List_of_DNS_record_types">DNS Record Names&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.computernetworkingnotes.com/linux-tutorials/the-etc-hosts-etc-resolv-conf-and-etc-nsswitch-conf-files.html">/etc/hosts vs /etc/resolv.conf vs etc/nsswitch.conf&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>SLA vs SLO vs SLI</title><link>https://jinying-che.github.io/posts/sla_vs_slo_vs_sli/</link><pubDate>Sat, 09 Sep 2023 16:58:58 +0800</pubDate><guid>https://jinying-che.github.io/posts/sla_vs_slo_vs_sli/</guid><description>&lt;p>To dive into the terms throughly, it&amp;rsquo;s better to read &lt;a href="https://sre.google/sre-book/service-level-objectives/">Google SRE Book&lt;/a>. This post is just a glance.&lt;/p>
&lt;h2 id="tldr">TL;DR&lt;/h2>
&lt;p>SLIs drive SLOs which inform SLAs. (From Google SRE Team)&lt;/p>
&lt;h2 id="sla-service-level-agreements">SLA: Service Level Agreements&lt;/h2>
&lt;p>An SLA is an agreement between provider and client about measurable metrics like uptime, responsiveness, and responsibilities.&lt;/p>
&lt;blockquote>
&lt;p>SRE doesn’t typically get involved in constructing SLAs, because SLAs are closely tied to business and product decisions.&lt;/p>
&lt;/blockquote>
&lt;p>e.g. &lt;em>Service credit if 95th percentile homepage SLI succeeds less than 99.5% over tailing year&lt;/em>&lt;/p></description><content>&lt;p>To dive into the terms throughly, it&amp;rsquo;s better to read &lt;a href="https://sre.google/sre-book/service-level-objectives/">Google SRE Book&lt;/a>. This post is just a glance.&lt;/p>
&lt;h2 id="tldr">TL;DR&lt;/h2>
&lt;p>SLIs drive SLOs which inform SLAs. (From Google SRE Team)&lt;/p>
&lt;h2 id="sla-service-level-agreements">SLA: Service Level Agreements&lt;/h2>
&lt;p>An SLA is an agreement between provider and client about measurable metrics like uptime, responsiveness, and responsibilities.&lt;/p>
&lt;blockquote>
&lt;p>SRE doesn’t typically get involved in constructing SLAs, because SLAs are closely tied to business and product decisions.&lt;/p>
&lt;/blockquote>
&lt;p>e.g. &lt;em>Service credit if 95th percentile homepage SLI succeeds less than 99.5% over tailing year&lt;/em>&lt;/p>
&lt;h2 id="slo-service-level-objectives">SLO: Service Level Objectives&lt;/h2>
&lt;p>An SLO is an agreement within an SLA about a specific metric like uptime or response time.&lt;/p>
&lt;p>Choosing an appropriate SLO is complex.&lt;/p>
&lt;p>e.g. &lt;em>95th percentile homepage SLI will succeed 99.9% over trailing year&lt;/em>&lt;/p>
&lt;h2 id="sli-service-level-indicator">SLI: Service Level Indicator&lt;/h2>
&lt;p>An SLI measures compliance with an SLO (service level objective).&lt;/p>
&lt;p>Most services consider request latency—how long it takes to return a response to a request—as a key SLI. Other common SLIs include the error rate, often expressed as a fraction of all requests received, and system throughput, typically measured in requests per second.&lt;/p>
&lt;p>e.g. &lt;em>95th percentile latency of homepage requests over past 5 minutes &amp;lt; 300ms&lt;/em>&lt;/p>
&lt;h2 id="teams-cooperation">Teams Cooperation&lt;/h2>
&lt;p>&lt;img alt="sla_vs_slo_sli" src="https://jinying-che.github.io/images/sla_vs_slo_vs_sli.png">&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.atlassian.com/incident-management/kpis/sla-vs-slo-vs-sli">https://www.atlassian.com/incident-management/kpis/sla-vs-slo-vs-sli&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=tEylFyxbDLE">https://www.youtube.com/watch?v=tEylFyxbDLE&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/blog/products/devops-sre/sre-fundamentals-slis-slas-and-slos">https://cloud.google.com/blog/products/devops-sre/sre-fundamentals-slis-slas-and-slos&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Tech Writing</title><link>https://jinying-che.github.io/posts/tech_writing/</link><pubDate>Sun, 03 Sep 2023 15:26:12 +0800</pubDate><guid>https://jinying-che.github.io/posts/tech_writing/</guid><description>&lt;p>Here is the colloction that I think maybe useful for technical article writting.&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://dave.cheney.net/2020/02/23/the-zen-of-go">The Zen of Go&lt;/a> 1 - 3&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>Without new blood and new ideas, our community become &lt;strong>myopic and wither&lt;/strong>.&lt;/li>
&lt;li>ultimately&lt;/li>
&lt;li>I tend to pick on net/http a lot, and this is not because it is bad, in fact it is the opposite, it is the most successful, oldest, most used API in the Go codebase. And because of that its design, evolution, and &lt;strong>shortcoming have been thoroughly picked over&lt;/strong>. Think of this as &lt;strong>flattery&lt;/strong>, not &lt;strong>criticism&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;a href="https://research.swtch.com/hwmm">Hardware Memory Models&lt;/a>&lt;/p></description><content>&lt;p>Here is the colloction that I think maybe useful for technical article writting.&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://dave.cheney.net/2020/02/23/the-zen-of-go">The Zen of Go&lt;/a> 1 - 3&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>Without new blood and new ideas, our community become &lt;strong>myopic and wither&lt;/strong>.&lt;/li>
&lt;li>ultimately&lt;/li>
&lt;li>I tend to pick on net/http a lot, and this is not because it is bad, in fact it is the opposite, it is the most successful, oldest, most used API in the Go codebase. And because of that its design, evolution, and &lt;strong>shortcoming have been thoroughly picked over&lt;/strong>. Think of this as &lt;strong>flattery&lt;/strong>, not &lt;strong>criticism&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;a href="https://research.swtch.com/hwmm">Hardware Memory Models&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol start="4">
&lt;li>Hardware designers and compiler developers need a clear answer to how &lt;strong>precisely&lt;/strong> the hardware and compiled code are allowed to behave when executing a given program.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;a href="https://github.blog/2021-09-27-partitioning-githubs-relational-databases-scale/">Partitioning GitHub’s relational databases to handle scale&lt;/a> 5 - 9&lt;/p>
&lt;/blockquote>
&lt;ol start="5">
&lt;li>Over the years, this architecture went through many iterations to support GitHub’s growth and &lt;strong>ever-evolving resiliency&lt;/strong> requirements.&lt;/li>
&lt;li>With GitHub’s growth, this &lt;strong>inevitably led to&lt;/strong> challenges.&lt;/li>
&lt;li>the linter ensures that no new violations are introduced by accident.&lt;/li>
&lt;li>MySQL’s query planner can sometimes create suboptimal query execution plans, &lt;strong>whereas&lt;/strong> an application-side join has a more stable performance cost.&lt;/li>
&lt;li>We often choose to &lt;strong>leverage&lt;/strong> “boring” technology that has been proven to work at our scale, as reliability &lt;strong>remains&lt;/strong> the primary concern.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Golang sync.Pool Doc&lt;/p>
&lt;/blockquote>
&lt;ol start="10">
&lt;li>Pool&amp;rsquo;s purpose is to cache allocated but unused items for later reuse, &lt;strong>relieving&lt;/strong> pressure on the garbage collector.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;a href="https://datatracker.ietf.org/doc/html/rfc1928">SOCKS Protocol Version 5&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol start="11">
&lt;li>there exists a need to provide a general framework for these protocols to transparently and securely &lt;strong>traverse&lt;/strong> a firewall.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;a href="https://clig.dev/">https://clig.dev/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol start="12">
&lt;li>Sometimes when using args, it’s impossible to add new input without breaking existing behavior or creating &lt;strong>ambiguity&lt;/strong>.&lt;/li>
&lt;li>Don’t have &lt;strong>ambiguous&lt;/strong> or similarly-named commands. For example, having two subcommands called “update” and “upgrade” is quite confusing. You might want to use different words, or &lt;strong>disambiguate&lt;/strong> with extra words.&lt;/li>
&lt;li>If you have to append or modify to a system-wide config file, use a dated comment in that file to &lt;strong>delineate&lt;/strong> your additions.&lt;/li>
&lt;li>Apply configuration parameters in order of &lt;strong>precedence&lt;/strong>. Here is the &lt;strong>precedence&lt;/strong> for config parameters, from highest to lowest&lt;/li>
&lt;li>You’ll &lt;strong>step on the toes&lt;/strong> of other commands and confuse users. [slang]&lt;/li>
&lt;li>The concurrency properties of HTTP/2 allow proxies to be more &lt;strong>performant&lt;/strong>.&lt;/li>
&lt;li>A failure of a single microservice can have a &lt;strong>cascading&lt;/strong> effect on all microservices and can significantly affect system availability.&lt;/li>
&lt;/ol></content></item><item><title>Mac Setup</title><link>https://jinying-che.github.io/posts/mac_setup/</link><pubDate>Sat, 01 Jul 2023 23:26:50 +0800</pubDate><guid>https://jinying-che.github.io/posts/mac_setup/</guid><description>&lt;h2 id="1-mac-setting">1. Mac Setting&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://support.apple.com/en-sg/HT204609">Turn on three finger drag for your Mac trackpad&lt;/a>&lt;/li>
&lt;li>Increase the cursor moving speed: &lt;code>System Preferences&lt;/code> -&amp;gt; &lt;code>Keyboard&lt;/code> -&amp;gt; &lt;code>Increase Key Repeat Rate&lt;/code>&lt;/li>
&lt;li>switch the &lt;code>ctrl&lt;/code> and &lt;code>caps lock&lt;/code> key: &lt;a href="https://support.apple.com/en-sg/guide/mac-help/mchlp1011/mac">https://support.apple.com/en-sg/guide/mac-help/mchlp1011/mac&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="2-shell">2. Shell&lt;/h2>
&lt;ul>
&lt;li>Install &lt;a href="https://iterm2.com/">iterm2&lt;/a>
&lt;ul>
&lt;li>theme: &lt;a href="https://github.com/one-dark/iterm-one-dark-theme">one dark&lt;/a>&lt;/li>
&lt;li>font: &lt;a href="https://github.com/adobe-fonts/source-code-pro">source code pro&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Install &lt;a href="https://brew.sh/">Homebrew&lt;/a>&lt;/li>
&lt;li>Install ZSH: &lt;code>brew install zsh&lt;/code>&lt;/li>
&lt;li>Install &lt;a href="https://ohmyz.sh/#install">oh-my-zsh&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">Generating a new SSH key and adding it to the ssh-agent&lt;/a>&lt;/li>
&lt;li>After &lt;strong>ssh&lt;/strong> setup and add to the &lt;a href="https://github.com/">https://github.com/&lt;/a>, it&amp;rsquo;s able to &lt;code>git clone&lt;/code> resource for iterm2 now:
&lt;ul>
&lt;li>theme: &lt;a href="https://github.com/projekt0n/github-nvim-theme">github-nvim-theme&lt;/a>&lt;/li>
&lt;li>font: &lt;a href="https://github.com/adobe-fonts/source-code-pro">source code pro&lt;/a>
&lt;ul>
&lt;li>To install new fonts on mac: Open &lt;code>Font Book&lt;/code> App -&amp;gt; Open File -&amp;gt; Add Fonts To Current User -&amp;gt; Choose the downlaoded font files&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Init &lt;a href="https://github.com/jinying-che/config">.gitconfig&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="21-zsh">2.1 Zsh&lt;/h3>
&lt;ul>
&lt;li>configuration (&lt;a href="https://github.com/jinying-che/config/blob/master/.zshrc">.zshrc&lt;/a>)&lt;/li>
&lt;li>setting:
&lt;ul>
&lt;li>move the cursor by words:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>1. Go to iTerm2 (in the menu bar) &amp;gt; Settings... &amp;gt; Profiles &amp;gt; Keys (not Preferences... &amp;gt; Keys)
2. On current versions (3.14+) you then switch to the Key Mappings tab
3. Press Presets... dropdown button.
4. Select Natural Text Editing
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>plugins:
&lt;ul>
&lt;li>&lt;a href="https://github.com/wting/autojump">autojump&lt;/a>: &lt;code>brew install autojump&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-autosuggestions&lt;/a>: &lt;code>git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/zsh-users/zsh-syntax-highlighting">zsh-syntax-highlighting&lt;/a>: &lt;code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/junegunn/fzf#using-homebrew">fzf&lt;/a>
&lt;ul>
&lt;li>&lt;code>brew install fzf&lt;/code>&lt;/li>
&lt;li>&lt;code>$(brew --prefix)/opt/fzf/install&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="3-vim">3. vim&lt;/h2>
&lt;ul>
&lt;li>vim (&lt;a href="https://github.com/jinying-che/config/blob/master/.vimrc">.vimrc&lt;/a>):
&lt;ul>
&lt;li>install nvim: &lt;code>brew install neovim&lt;/code>&lt;/li>
&lt;li>init nvim: &lt;a href="https://neovim.io/doc/user/nvim.html#nvim-from-vim">https://neovim.io/doc/user/nvim.html#nvim-from-vim&lt;/a>&lt;/li>
&lt;li>install &lt;a href="https://github.com/junegunn/vim-plug">vim-plug&lt;/a>, copy &lt;code>.vimrc&lt;/code> and &lt;code>:PlugInstall&lt;/code> to install plugins&lt;/li>
&lt;li>install &lt;a href="https://github.com/neoclide/coc.nvim">coc.nvim&lt;/a> (&lt;code>brew install node&lt;/code> first)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="31-cocnvimhttpsgithubcomneoclidecocnvim">3.1 &lt;a href="https://github.com/neoclide/coc.nvim/">coc.nvim&lt;/a>&lt;/h3>
&lt;p>I would say coc.nvim is VS Code in neo vim, as well as the function is also expanded by plugins. Here&amp;rsquo;s the basic plugins we used in daily development.&lt;/p></description><content>&lt;h2 id="1-mac-setting">1. Mac Setting&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://support.apple.com/en-sg/HT204609">Turn on three finger drag for your Mac trackpad&lt;/a>&lt;/li>
&lt;li>Increase the cursor moving speed: &lt;code>System Preferences&lt;/code> -&amp;gt; &lt;code>Keyboard&lt;/code> -&amp;gt; &lt;code>Increase Key Repeat Rate&lt;/code>&lt;/li>
&lt;li>switch the &lt;code>ctrl&lt;/code> and &lt;code>caps lock&lt;/code> key: &lt;a href="https://support.apple.com/en-sg/guide/mac-help/mchlp1011/mac">https://support.apple.com/en-sg/guide/mac-help/mchlp1011/mac&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="2-shell">2. Shell&lt;/h2>
&lt;ul>
&lt;li>Install &lt;a href="https://iterm2.com/">iterm2&lt;/a>
&lt;ul>
&lt;li>theme: &lt;a href="https://github.com/one-dark/iterm-one-dark-theme">one dark&lt;/a>&lt;/li>
&lt;li>font: &lt;a href="https://github.com/adobe-fonts/source-code-pro">source code pro&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Install &lt;a href="https://brew.sh/">Homebrew&lt;/a>&lt;/li>
&lt;li>Install ZSH: &lt;code>brew install zsh&lt;/code>&lt;/li>
&lt;li>Install &lt;a href="https://ohmyz.sh/#install">oh-my-zsh&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">Generating a new SSH key and adding it to the ssh-agent&lt;/a>&lt;/li>
&lt;li>After &lt;strong>ssh&lt;/strong> setup and add to the &lt;a href="https://github.com/">https://github.com/&lt;/a>, it&amp;rsquo;s able to &lt;code>git clone&lt;/code> resource for iterm2 now:
&lt;ul>
&lt;li>theme: &lt;a href="https://github.com/projekt0n/github-nvim-theme">github-nvim-theme&lt;/a>&lt;/li>
&lt;li>font: &lt;a href="https://github.com/adobe-fonts/source-code-pro">source code pro&lt;/a>
&lt;ul>
&lt;li>To install new fonts on mac: Open &lt;code>Font Book&lt;/code> App -&amp;gt; Open File -&amp;gt; Add Fonts To Current User -&amp;gt; Choose the downlaoded font files&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Init &lt;a href="https://github.com/jinying-che/config">.gitconfig&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="21-zsh">2.1 Zsh&lt;/h3>
&lt;ul>
&lt;li>configuration (&lt;a href="https://github.com/jinying-che/config/blob/master/.zshrc">.zshrc&lt;/a>)&lt;/li>
&lt;li>setting:
&lt;ul>
&lt;li>move the cursor by words:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>1. Go to iTerm2 (in the menu bar) &amp;gt; Settings... &amp;gt; Profiles &amp;gt; Keys (not Preferences... &amp;gt; Keys)
2. On current versions (3.14+) you then switch to the Key Mappings tab
3. Press Presets... dropdown button.
4. Select Natural Text Editing
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>plugins:
&lt;ul>
&lt;li>&lt;a href="https://github.com/wting/autojump">autojump&lt;/a>: &lt;code>brew install autojump&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-autosuggestions&lt;/a>: &lt;code>git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/zsh-users/zsh-syntax-highlighting">zsh-syntax-highlighting&lt;/a>: &lt;code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/junegunn/fzf#using-homebrew">fzf&lt;/a>
&lt;ul>
&lt;li>&lt;code>brew install fzf&lt;/code>&lt;/li>
&lt;li>&lt;code>$(brew --prefix)/opt/fzf/install&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="3-vim">3. vim&lt;/h2>
&lt;ul>
&lt;li>vim (&lt;a href="https://github.com/jinying-che/config/blob/master/.vimrc">.vimrc&lt;/a>):
&lt;ul>
&lt;li>install nvim: &lt;code>brew install neovim&lt;/code>&lt;/li>
&lt;li>init nvim: &lt;a href="https://neovim.io/doc/user/nvim.html#nvim-from-vim">https://neovim.io/doc/user/nvim.html#nvim-from-vim&lt;/a>&lt;/li>
&lt;li>install &lt;a href="https://github.com/junegunn/vim-plug">vim-plug&lt;/a>, copy &lt;code>.vimrc&lt;/code> and &lt;code>:PlugInstall&lt;/code> to install plugins&lt;/li>
&lt;li>install &lt;a href="https://github.com/neoclide/coc.nvim">coc.nvim&lt;/a> (&lt;code>brew install node&lt;/code> first)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="31-cocnvimhttpsgithubcomneoclidecocnvim">3.1 &lt;a href="https://github.com/neoclide/coc.nvim/">coc.nvim&lt;/a>&lt;/h3>
&lt;p>I would say coc.nvim is VS Code in neo vim, as well as the function is also expanded by plugins. Here&amp;rsquo;s the basic plugins we used in daily development.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/neoclide/coc-lists">coc-lists&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/josa42/coc-go">coc-go&lt;/a> (for golang developer)&lt;/li>
&lt;li>&lt;a href="https://github.com/fannheyward/coc-pyright">coc-pyright&lt;/a> (for python developer)&lt;/li>
&lt;/ul>
&lt;h2 id="tmux">tmux&lt;/h2>
&lt;ul>
&lt;li>&lt;code>brew install tmux&lt;/code>&lt;/li>
&lt;li>install tmux plugin manager: &lt;a href="https://github.com/tmux-plugins/tpm">https://github.com/tmux-plugins/tpm&lt;/a>&lt;/li>
&lt;li>copy &lt;a href="https://github.com/jinying-che/config/blob/master/.tmux.conf">config&lt;/a> to &lt;code>~/.tmux.conf&lt;/code>&lt;/li>
&lt;li>&lt;code>tmux source ~/.tmux.conf&lt;/code> (type this in terminal if tmux is already running)&lt;/li>
&lt;li>theme: &lt;a href="https://github.com/catppuccin/tmux">https://github.com/catppuccin/tmux&lt;/a>
&lt;ul>
&lt;li>intall by tpm (included in the config above)&lt;/li>
&lt;li>patch font via &lt;a href="https://github.com/catppuccin/tmux#installation">https://github.com/catppuccin/tmux#installation&lt;/a> (for font installation refer to shell section 2)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="4-tool">4. Tool&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/sharkdp/fd">fd&lt;/a> is a simple, fast and user-friendly alternative to &lt;code>find&lt;/code>: &lt;code>brew install fd&lt;/code>&lt;/li>
&lt;li>Personal Script: &lt;code>git clone https://github.com/jinying-che/Geript&lt;/code>, add into &lt;strong>system path&lt;/strong> in &lt;code>.zshrc&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/gohugoio/hugo">Hugo&lt;/a> is one of the most popular open-source static site generators.: &lt;code>brew install hugo&lt;/code>&lt;/li>
&lt;li>GitHub Readme Instant Preview: &lt;code>brew install grip&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/tldr-pages/tldr">tlrd&lt;/a>: collection of community-maintained help pages for command-line tools, that aims to be a simpler, more approachable complement to traditional man pages.&lt;/li>
&lt;/ul>
&lt;h2 id="5-development">5. Development&lt;/h2>
&lt;h3 id="51-golang">5.1 golang&lt;/h3>
&lt;ul>
&lt;li>Install &lt;code>golang&lt;/code>: &lt;a href="https://go.dev/doc/install">https://go.dev/doc/install&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="52-python">5.2 python&lt;/h3>
&lt;ul>
&lt;li>Install python: &lt;code>brew install python3&lt;/code>&lt;/li>
&lt;li>Install ipython: &lt;code>pip install &amp;quot;ipython[all]&amp;quot;&lt;/code>&lt;/li>
&lt;/ul></content></item><item><title>Shell Cheatsheet</title><link>https://jinying-che.github.io/posts/shell_cheatsheet/</link><pubDate>Thu, 08 Jun 2023 15:41:00 +0800</pubDate><guid>https://jinying-che.github.io/posts/shell_cheatsheet/</guid><description>&lt;p>Some skills of daily commands, they are useful but not worth creating a particular cheatsheet, so I put them here generally.&lt;/p>
&lt;h3 id="fzfhttpsgithubcomjunegunnfzf--zsh">&lt;a href="https://github.com/junegunn/fzf">fzf&lt;/a> + zsh&lt;/h3>
&lt;p>Add the fzf plugin for zsh, the terminal is fully enhanced!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- plugins=(git autojump zsh-autosuggestions zsh-syntax-highlighting)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ plugins=(git autojump zsh-autosuggestions zsh-syntax-highlighting fzf)
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Try some comands to see the fzf integartion, e.g.&lt;/p>
&lt;ul>
&lt;li>&lt;code>cd **&lt;/code> + &lt;code>TAB(key)&lt;/code>&lt;/li>
&lt;li>&lt;code>Ctrl&lt;/code> + &lt;code>r&lt;/code>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>Reference:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/junegunn/fzf#fuzzy-completion-for-bash-and-zsh">https://github.com/junegunn/fzf#fuzzy-completion-for-bash-and-zsh&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="myclihttpsgithubcomdbclimycli-pager">&lt;a href="https://github.com/dbcli/mycli">mycli&lt;/a> pager&lt;/h3>
&lt;p>By default, &lt;code>mycli&lt;/code> shows the sql result in a new window (press &lt;code>q&lt;/code> to quit and all results gone), but it would be annoyed when result needs to be kept in the current window, the behavior is controlled by &lt;strong>Pager Configuraton&lt;/strong>.&lt;/p></description><content>&lt;p>Some skills of daily commands, they are useful but not worth creating a particular cheatsheet, so I put them here generally.&lt;/p>
&lt;h3 id="fzfhttpsgithubcomjunegunnfzf--zsh">&lt;a href="https://github.com/junegunn/fzf">fzf&lt;/a> + zsh&lt;/h3>
&lt;p>Add the fzf plugin for zsh, the terminal is fully enhanced!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- plugins=(git autojump zsh-autosuggestions zsh-syntax-highlighting)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ plugins=(git autojump zsh-autosuggestions zsh-syntax-highlighting fzf)
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Try some comands to see the fzf integartion, e.g.&lt;/p>
&lt;ul>
&lt;li>&lt;code>cd **&lt;/code> + &lt;code>TAB(key)&lt;/code>&lt;/li>
&lt;li>&lt;code>Ctrl&lt;/code> + &lt;code>r&lt;/code>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>Reference:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/junegunn/fzf#fuzzy-completion-for-bash-and-zsh">https://github.com/junegunn/fzf#fuzzy-completion-for-bash-and-zsh&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="myclihttpsgithubcomdbclimycli-pager">&lt;a href="https://github.com/dbcli/mycli">mycli&lt;/a> pager&lt;/h3>
&lt;p>By default, &lt;code>mycli&lt;/code> shows the sql result in a new window (press &lt;code>q&lt;/code> to quit and all results gone), but it would be annoyed when result needs to be kept in the current window, the behavior is controlled by &lt;strong>Pager Configuraton&lt;/strong>.&lt;/p>
&lt;p>On macOS and Linux, the pager will default to less for most users.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># disable pager &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">enable_pager&lt;/span> = &lt;span style="color:#a6e22e">False&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Reference:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.mycli.net/pager">https://www.mycli.net/pager&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="linuxunix-os-version">linux/unix os version&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>- cat /etc/os-release
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- lsb_release -a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="批量删除进程">批量删除进程&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ps aux | grep redis | grep -v grep | awk &lt;span style="color:#e6db74">&amp;#39;{print $2}&amp;#39;&lt;/span> | xargs kill -9
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中&lt;code>awk '{print $2}' &lt;/code>是打印所有进程的&lt;strong>pid&lt;/strong>&lt;/p>
&lt;h2 id="21">2&amp;gt;&amp;amp;1&lt;/h2>
&lt;p>&lt;strong>&amp;gt; ** ：代表重定向到哪里(&lt;/strong>&amp;gt;&lt;strong>：会覆盖，&lt;/strong>&amp;raquo;**：追加，不覆盖)
**1 ** ：表示stdout标准输出，系统默认值是1（&lt;strong>0&lt;/strong>代表标准输入）
&lt;strong>2 ** ：表示stderr标准错误
&lt;strong>&amp;amp; ** ：表示等同于的意思，2&amp;gt;&amp;amp;1，表示2的输出重定向等同于1（&lt;strong>错误输出&lt;/strong>的位置同&lt;/strong>标准输出&lt;/strong>一样）&lt;/p>
&lt;h2 id="heading">#!&lt;/h2>
&lt;p>&lt;code>#!&lt;/code> 是一个约定的标记，它告诉系统这个脚本需要什么解释器来执行，即使用哪一种 Shell&lt;/p>
&lt;h2 id="shell-编程">shell 编程&lt;/h2>
&lt;h4 id="关于">关于[]&lt;/h4>
&lt;ul>
&lt;li>实际上是bash 中 test 命令的简写。即所有的 [ expr ] 等于 test expr (expr与[]之间，要有空格)&lt;/li>
&lt;li>使用逻辑判断，应该是：&lt;code>[] || []&lt;/code>和&lt;code>[] &amp;amp;&amp;amp; []&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="变量">变量&lt;/h4>
&lt;ul>
&lt;li>变量赋值不应有空格： &lt;code>param=$1&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>##ssh&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ssh 连接服务器&lt;/p>
&lt;p>&lt;code>ssh -P port username@ip&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ssh 使用scope复制本机文件到远程服务器&lt;/p>
&lt;p>&lt;code>scope local-directory/local-file username@ip:remote-directory&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ssh 公钥登陆流程：&lt;/p>
&lt;blockquote>
&lt;p>所谓&amp;quot;公钥登录&amp;quot;，原理很简单，就是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>打印连接&lt;strong>debug&lt;/strong>信息(分析连接流程)： &lt;code>ssh -v root@74.82.202.131 -p 28382&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>-v 参数：打印debug信息&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2 id="查目录下的文件数">查目录下的文件数&lt;/h2>
&lt;ul>
&lt;li>ls -all | wc -l&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Linux系统中的wc(Word Count)命令的功能为统计指定文件中的字节数、字数、行数，并将统计结果显示输出。&lt;/p>
&lt;/blockquote>
&lt;h2 id="查看二进制bin文件">查看二进制(bin)文件&lt;/h2>
&lt;p>For bin :&lt;/p>
&lt;pre tabindex="0">&lt;code>xxd -b file
&lt;/code>&lt;/pre>&lt;p>For hex :&lt;/p>
&lt;pre tabindex="0">&lt;code>xxd file
&lt;/code>&lt;/pre>&lt;h2 id="进程进入后台并运行">进程进入后台并运行&lt;/h2>
&lt;blockquote>
&lt;p>这是个悲伤的故事，把socket服务通过&lt;code>ctrl-z&lt;/code>放入后台，天真地认为进程在后台运行，其实进程已被暂停&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>后台运行： &lt;code>command &amp;amp;&lt;/code>（在命令后加**&amp;amp;**）&lt;/li>
&lt;li>后台暂停： &lt;code>ctrl-z&lt;/code>（将线程放入后台，并暂停其运行）&lt;/li>
&lt;/ul>
&lt;h2 id="解压">解压&lt;/h2>
&lt;p>####tar&lt;/p>
&lt;ul>
&lt;li>解压：&lt;code>tar -xvf file.jar.gz&lt;/code>&lt;/li>
&lt;li>解压到指定文件：
&lt;ul>
&lt;li>&lt;code>mkdir directory&lt;/code>&lt;/li>
&lt;li>&lt;code>tar -xvf file.jar.gz -C directory&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>压缩：&lt;code>tar -zcvf directory/filename file||directory &lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="zip">zip&lt;/h4>
&lt;ul>
&lt;li>解压：&lt;code>gzip -d file.gz&lt;/code>&lt;/li>
&lt;li>压缩：&lt;code>gzip file&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="linux-网络">Linux 网络&lt;/h2>
&lt;blockquote>
&lt;ul>
&lt;li>nethogs: 按进程查看流量占用&lt;/li>
&lt;li>iptraf: 按连接/端口查看流量&lt;/li>
&lt;li>ifstat: 按设备查看流量&lt;/li>
&lt;li>ethtool: 诊断工具&lt;/li>
&lt;li>tcpdump: 抓包工具&lt;/li>
&lt;li>ss: 连接查看工具&lt;/li>
&lt;li>其他: dstat, slurm, nload, bmon&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>###查看tcp端口&lt;/p>
&lt;ul>
&lt;li>查看所有tcp端口的使用情况：&lt;code>netstat -nptl | grep pid/port/app&lt;/code> （可能需要root权限）&lt;/li>
&lt;li>check the TCP status : &lt;code>netstat -atp&lt;/code>
&lt;ul>
&lt;li>For Established : &lt;code>netstat -atp | grep ESTABLISHED&lt;/code>&lt;/li>
&lt;li>For Established and specific port : &lt;code>netstat -atp | grep ESTABLISHED | grep port&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>端口即文件：&lt;code>lsof -i:port&lt;/code> （可能需要root权限）&lt;/li>
&lt;li>For Mac: &lt;code>netstat -an -ptcp | grep LISTEN&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="ss">ss&lt;/h3>
&lt;blockquote>
&lt;p>它利用到了TCP协议栈中tcp_diag。tcp_diag是一个用于分析统计的模块，可以获得Linux 内核中第一手的信息，这就确保了ss的快捷高效。当然，如果你的系统中没有tcp_diag，ss也可以正常运行，只是效率会变得稍慢&lt;/p>
&lt;/blockquote>
&lt;p>ss的用法与netstat类似，比如&lt;code>ss -nptl | grep pid&lt;/code>&lt;/p>
&lt;p>###网络配置&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="http://www.cnblogs.com/xiaoluo501395377/archive/2013/05/26/3100065.html">reference:&lt;/a>&lt;/p>
&lt;p>Linux支持将多块物理网卡绑定成一块逻辑网卡，绑定后的逻辑网卡可以并行使用组成其的所有物理网卡，通过这样的方式可以提高带宽以及网路的稳定性。&lt;/p>
&lt;p>Linux下支持三种模式的网卡绑定：&lt;/p>
&lt;p>&lt;strong>①模式0&lt;/strong>：&lt;strong>平衡轮训&lt;/strong>　　使用这种模式来进行多网卡绑定时我们可以提高网络的带宽，其流量是从绑定的多块网卡上平均分配的&lt;/p>
&lt;p>&lt;strong>②模式1&lt;/strong>：&lt;strong>主动备份&lt;/strong>　　使用这种模式来进行多网卡绑定时我们可以提高网络的稳定性，这种模式不会提高网络的带宽，每次只有一块网卡在走流量，只有当这块网卡发生故障时，绑定在一起的其它物理网卡才会工作&lt;/p>
&lt;p>&lt;strong>③模式3&lt;/strong>：&lt;strong>广播模式&lt;/strong>　　这种模式一般都不用&lt;/p>
&lt;p>我们如果想通过多网卡绑定来提升网络的带宽，就选择模式0，如果想提高网络的稳定性，则选择模式1&lt;/p>
&lt;/blockquote>
&lt;p>模式由bond0配置文件中的BONDING_OPTS决定，配置文件在&lt;code>/etc/network/network-scripts&lt;/code>路径下，文件命名可能如下：ifcfg-bond0、ifcfg-eth0、ifconfig-eth1等等&lt;/p>
&lt;pre tabindex="0">&lt;code>//ifcfg-bond0 文件
DEVICE=bond0
ONBOOT=yes
BONDING_OPTS=&amp;#34;miimon=1000 mode=1&amp;#34; //模式选择
TYPE=Ethernet
BOOTPROTO=none
IPADDR=10.86.67.42
NETMASK=255.255.255.0
&lt;/code>&lt;/pre>&lt;h3 id="端口连通性测试">端口连通性测试&lt;/h3>
&lt;p>&lt;code>nc -zv ip port&lt;/code>&lt;/p>
&lt;p>&lt;code>telnet ip port&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>nc 命令可起个临时的tcp服务 : &lt;code>nc -l&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h2 id="sudo-and-su">sudo and su&lt;/h2>
&lt;p>####sudo vs su&lt;/p>
&lt;ul>
&lt;li>两个命令的最大区别是：&lt;code>sudo&lt;/code> 命令需要输入当前用户的密码，&lt;code>su&lt;/code> 命令需要输入 root 用户的密码&lt;/li>
&lt;li>两个命令之间的另外一个区别是其默认行为。&lt;code>sudo&lt;/code> 命令只允许使用提升的权限运行单个命令，而 &lt;code>su&lt;/code> 命令会启动一个新的 shell，同时允许使用 root 权限运行尽可能多的命令，直到明确退出登录####&lt;/li>
&lt;/ul>
&lt;h4 id="sudo-su">sudo su&lt;/h4>
&lt;p>以当前用户的身份（即只需要当前用户的密码），就可登录root用户，而不需要root密码&lt;/p>
&lt;h4 id="su-vs-su--">su vs su -&lt;/h4>
&lt;p>前者在切换到 root 用户之后仍然保持旧的（或者说原始用户的）环境，而后者则是创建一个新的环境（由 root 用户 &lt;code>~/.bashrc&lt;/code> 文件所设置的环境），相当于使用 root 用户正常登录（从登录屏幕登录）&lt;/p>
&lt;p>&lt;strong>所以推荐使用 &lt;code>su -&lt;/code>&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://linux.cn/article-8404-1.html">深入理解 sudo 与 su 之间的区别&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="更改文件所属用户及用户组">更改文件所属用户及用户组&lt;/h2>
&lt;p>&lt;code>chown -R user:group file/directory&lt;/code>&lt;/p>
&lt;h2 id="查看文件类型">查看文件类型&lt;/h2>
&lt;p>&lt;code>file&lt;/code> 命令：&lt;/p>
&lt;ul>
&lt;li>&lt;code>file filename&lt;/code> 若显示为data，可能为压缩文件&lt;/li>
&lt;/ul>
&lt;p>cat /etc/sysconfig/network&lt;/p>
&lt;blockquote>
&lt;p>解释：-R 递归修改&lt;/p>
&lt;/blockquote>
&lt;h2 id="查看进程所在目录">查看进程所在目录&lt;/h2>
&lt;h3 id="pwdx">pwdx&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ pwdx &amp;lt;PID&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="lsof">lsof&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ lsof -p &amp;lt;PID&amp;gt; | grep cwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="proc">/proc&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ readlink -e /proc/&amp;lt;PID&amp;gt;/cwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="linux-系统参数">Linux 系统参数&lt;/h2>
&lt;p>#####一个进程文件句柄数限制&lt;/p>
&lt;ul>
&lt;li>查看
&lt;ul>
&lt;li>&lt;code>ulimit -n&lt;/code> (默认soft)&lt;/li>
&lt;li>&lt;code>ulimit -Hn&lt;/code>(hard)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>临时修改：ulimit -n 1000000，只对当前登录用户目前的使用环境有效，系统重启或用户退出后就会失效&lt;/li>
&lt;li>永久修改：编辑 /etc/security/limits.conf 文件，( 修改完重新登录就可以见到)， 修改后内容为&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>* soft nofile 1000000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* hard nofile 1000000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>soft是一个警告值，而hard则是一个真正意义的阀值，超过就会报错。soft 指的是当前系统生效的设置值。hard 表明系统中所能设定的最大值nofile - 打开文件的最大数目星号表示针对所有用户，若仅针对某个用户登录ID，替换星号。&lt;/p>
&lt;/blockquote>
&lt;h5 id="端口数量压测客户端">端口数量（压测客户端）&lt;/h5>
&lt;ul>
&lt;li>
&lt;p>查看：&lt;code>cat /proc/sys/net/ipv4/ip_local_port_range &lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>临时修改： &lt;code>echo &amp;quot;1024 65535&amp;quot;&amp;gt; /proc/sys/net/ipv4/ip_local_port_range&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>永久修改：&lt;code>/etc/sysctl.conf 增加 net.ipv4.ip_local_port_range= 1024 65535 &lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>并令其生效sysctl -p现在可以使用的端口达到64510个&lt;/p>
&lt;/blockquote>
&lt;p>#####系统全局可用句柄数目限制&lt;/p>
&lt;ul>
&lt;li>查看：&lt;code>cat /proc/sys/fs/file-max&lt;/code>&lt;/li>
&lt;li>当前会话修改，可以这么做：&lt;code>echo 1048576 &amp;gt; /proc/sys/fs/file-max&lt;/code> 但系统重启后消失。&lt;/li>
&lt;li>永久修改，要添加到 /etc/sysctl.conf 文件中：&lt;code>fs.file-max = 1048576&lt;/code>保存并使之生效：&lt;code>sysctl -p&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="top">Top&lt;/h2>
&lt;blockquote>
&lt;p>以前只是在 linux 机器上使用 top 命令。常用的快键键是:&lt;/p>
&lt;ul>
&lt;li>p 键 - 按 cpu 使用率排序&lt;/li>
&lt;li>m 键 - 按内存使用量排序&lt;/li>
&lt;/ul>
&lt;p>这 2 个快捷键在 mac 上都不一样。对应的是，先输入 o，然后输入 cpu 则按 cpu 使用量排序，输入 rsize 则按内存使用量排序。&lt;/p>
&lt;p>如果记不清了，可以在 top 的界面上按 &lt;code>?&lt;/code>，在弹出的帮助界面中即可看到。&lt;/p>
&lt;/blockquote>
&lt;h4 id="查看进程">查看进程&lt;/h4>
&lt;p>&lt;code>top -H -p pid&lt;/code>&lt;/p>
&lt;h2 id="cpu">CPU&lt;/h2>
&lt;h4 id="查看物理cpu个数">查看物理cpu个数&lt;/h4>
&lt;p>&lt;code>grep 'physical id' /proc/cpuinfo | sort -u | wc -l&lt;/code>&lt;/p>
&lt;p>####查看核心数量&lt;/p>
&lt;p>&lt;code>grep 'core id' /proc/cpuinfo | sort -u | wc -l&lt;/code>&lt;/p>
&lt;p>####查看线程数或逻辑CPU的个数&lt;/p>
&lt;p>&lt;code>grep 'processor' /proc/cpuinfo | sort -u | wc -l&lt;/code>&lt;/p>
&lt;h3 id="docker中cpu的查看">Docker中cpu的查看&lt;/h3>
&lt;ul>
&lt;li>&lt;code>cat /sys/fs/cgroup/cpu/cpu.cfs_quota_us&lt;/code>&lt;/li>
&lt;li>&lt;code>cat /sys/fs/cgroup/cpu/cpu.cfs_period_us&lt;/code>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>cfs_quota_us&lt;/code>和&lt;code>cfs_period_us&lt;/code>两个值是联合使用的，两者的比值，即&lt;code>cfs_quota_us&lt;/code>/&lt;code>cfs_period_us&lt;/code>代表了该容器实际可用的做多的CPU核数。&lt;/p>
&lt;p>比如&lt;code>cfs_quota_us&lt;/code>=50000，&lt;code>cfs_period_us&lt;/code>=100000，那么二者的比值是0.5，也就是说该容器可以使用0.5个cpu。这样的管控粒度更细，在cgroup使用systemd时最低可以到0.01核。&lt;/p>
&lt;/blockquote>
&lt;h2 id="watch">watch&lt;/h2>
&lt;p>watch命令默认每隔2秒执行后面参数给出的命令，也可手动指定，最小间隔0.1秒&lt;/p>
&lt;p>&lt;code>watch -n 0.1 date&lt;/code>: 每隔100ms，打印日期&lt;/p>
&lt;h2 id="curl">curl&lt;/h2>
&lt;h4 id="分析http请求耗时">分析http请求耗时&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>构建输出格式&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span> curl-format.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time_namelookup: %{time_namelookup}\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time_connect: %{time_connect}\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time_appconnect: %{time_appconnect}\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time_redirect: %{time_redirect}\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time_pretransfer: %{time_pretransfer}\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time_starttransfer: %{time_starttransfer}\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ----------\n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time_total: %{time_total}\n
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;ul>
&lt;li>&lt;code>time_namelookup&lt;/code>：DNS 域名解析的时候，就是把 &lt;code>https://zhihu.com&lt;/code> 转换成 ip 地址的过程&lt;/li>
&lt;li>&lt;code>time_connect&lt;/code>：TCP 连接建立的时间，就是三次握手的时间&lt;/li>
&lt;li>&lt;code>time_appconnect&lt;/code>：SSL/SSH 等上层协议建立连接的时间，比如 connect/handshake 的时间&lt;/li>
&lt;li>&lt;code>time_redirect&lt;/code>：从开始到最后一个请求事务的时间&lt;/li>
&lt;li>&lt;code>time_pretransfer&lt;/code>：从请求开始到响应开始传输的时间&lt;/li>
&lt;li>&lt;code>time_starttransfer&lt;/code>：从请求开始到第一个字节将要传输的时间&lt;/li>
&lt;li>&lt;code>time_total&lt;/code>：这次请求花费的全部时间&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>curl -w &amp;ldquo;@curl-format.txt&amp;rdquo; -o /dev/null -s -L &amp;ldquo;&lt;a href="http://cizixs.com">http://cizixs.com&lt;/a>&amp;rdquo;`&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="grep">grep&lt;/h2>
&lt;ul>
&lt;li>取反： &lt;code>-v&lt;/code>&lt;/li>
&lt;li>Ignore case: &lt;code>-i&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="lsof-1">lsof&lt;/h2>
&lt;blockquote>
&lt;p>lsof (list open files)是一个列出当前系统打开文件的工具。拥有查看你进程开打的文件，打开文件的进程，进程打开的端口(TCP、UDP)，找回/恢复删除的文件等功能&lt;/p>
&lt;/blockquote>
&lt;p>##Shell Script&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>lsof -i | awk '{print $2}' | sort | uniq -c | sort -nr&lt;/code> :&lt;/p>
&lt;blockquote>
&lt;p>sort by the internet file descriptor, in reverse order&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>Port status&lt;/p>
&lt;p>&lt;code>lsof -nP -i:8081&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>QPS&lt;/p>
&lt;p>&lt;code>grep -a &amp;quot;got job&amp;quot; notify_server.log | cut -c -19 | uniq -c&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="innotop">innotop&lt;/h2>
&lt;blockquote>
&lt;p>The monitor tool for mysql&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>login:&lt;code> innotop -uroot -p password&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="history">history&lt;/h2>
&lt;ul>
&lt;li>execute comand by number line: &lt;code>!number&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="scp">scp&lt;/h2>
&lt;ul>
&lt;li>repLocal to server (file): &lt;code>scp path/file username@ip:/where/to/put&lt;/code>&lt;/li>
&lt;li>Local to server (dir): &lt;code>scp -r path/file username@ip:/where/to/put&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>##nohup&lt;/p>
&lt;blockquote>
&lt;p>run a command immune to hangups, with output to a non-tty&lt;/p>
&lt;/blockquote>
&lt;h4 id="keep-process-running-when-ssh-log-out">keep process running when ssh log out&lt;/h4>
&lt;p>&lt;code>nohup command &amp;amp;&lt;/code>&lt;/p>
&lt;h4 id="and-no-nohupout">and no &lt;strong>nohup.out&lt;/strong>&lt;/h4>
&lt;p>&lt;code>nohup command &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/code>&lt;/p>
&lt;h2 id="ps">PS&lt;/h2>
&lt;ul>
&lt;li>To print a process tree: &lt;code>ps axjf&lt;/code> (alse add some grep: &lt;code>ps axjf | grep &amp;quot;keyname&amp;quot;&lt;/code>)&lt;/li>
&lt;/ul>
&lt;h2 id="xargs">xargs&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>list files (exclude some files that you don&amp;rsquo;t want) , then copy to some dictionary&lt;/strong>&lt;/p>
&lt;p>&lt;code>ls -S | grep -E -v 'GPNServer.log*' | xargs cp -r -t ../gpns_backup&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>list process, then get the specific process that you want to kill, then kill&lt;/strong>&lt;/p>
&lt;p>&lt;code>ps aux | grep kafka_2 | grep server | awk {'print$2'} | xargs kill -9&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="find">find&lt;/h2>
&lt;p>&lt;code>find * -name filename&lt;/code>&lt;/p></content></item><item><title>API Design</title><link>https://jinying-che.github.io/posts/api_design/</link><pubDate>Mon, 13 Feb 2023 22:27:32 +0800</pubDate><guid>https://jinying-che.github.io/posts/api_design/</guid><description>&lt;p>There are some similar technologies as Rest, OpenAPI, gRPC and GraphQL which are popular design or standard or framework that related to API design, meanwhile, they are prone to make people confused for the use case.&lt;/p>
&lt;p>Simple Put:&lt;/p>
&lt;ul>
&lt;li>&lt;code>REST&lt;/code> is a software &lt;strong>architectural&lt;/strong> and common communication &lt;strong>standard&lt;/strong>.&lt;/li>
&lt;li>&lt;code>OpenAPI&lt;/code> is a &lt;strong>specification&lt;/strong>, which defines a standard, programming language-agnostic interface description for HTTP APIs.&lt;/li>
&lt;li>&lt;code>gRPC&lt;/code> is a high performance Remote Procedure Call (RPC) &lt;strong>framework&lt;/strong>.&lt;/li>
&lt;li>&lt;code>GraphQL&lt;/code> is a &lt;strong>query language&lt;/strong> for your API.&lt;/li>
&lt;/ul>
&lt;h2 id="1-rest">1. Rest&lt;/h2>
&lt;p>Representational state transfer (REST) is a software architectural style that describes a uniform interface between physically separate components, often across the Internet in a client-server architecture.&lt;/p></description><content>&lt;p>There are some similar technologies as Rest, OpenAPI, gRPC and GraphQL which are popular design or standard or framework that related to API design, meanwhile, they are prone to make people confused for the use case.&lt;/p>
&lt;p>Simple Put:&lt;/p>
&lt;ul>
&lt;li>&lt;code>REST&lt;/code> is a software &lt;strong>architectural&lt;/strong> and common communication &lt;strong>standard&lt;/strong>.&lt;/li>
&lt;li>&lt;code>OpenAPI&lt;/code> is a &lt;strong>specification&lt;/strong>, which defines a standard, programming language-agnostic interface description for HTTP APIs.&lt;/li>
&lt;li>&lt;code>gRPC&lt;/code> is a high performance Remote Procedure Call (RPC) &lt;strong>framework&lt;/strong>.&lt;/li>
&lt;li>&lt;code>GraphQL&lt;/code> is a &lt;strong>query language&lt;/strong> for your API.&lt;/li>
&lt;/ul>
&lt;h2 id="1-rest">1. Rest&lt;/h2>
&lt;p>Representational state transfer (REST) is a software architectural style that describes a uniform interface between physically separate components, often across the Internet in a client-server architecture.&lt;/p>
&lt;p>REST is the most common communication standard between computers over the internet, an API that follows the REST standard is called a RESTful API.&lt;/p>
&lt;h3 id="11-architectural-constraints">1.1 Architectural Constraints&lt;/h3>
&lt;ul>
&lt;li>Client–server architecture&lt;/li>
&lt;li>Statelessness&lt;/li>
&lt;li>Cacheability&lt;/li>
&lt;li>Layered system&lt;/li>
&lt;li>Code on demand (optional)&lt;/li>
&lt;li>Uniform interface&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>refer to &lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer#Architectural_constraints">wikipedia&lt;/a> for more details&lt;/p>
&lt;/blockquote>
&lt;h3 id="12-applied-to-web-services">1.2 Applied to web services&lt;/h3>
&lt;ul>
&lt;li>a base URI, such as &lt;a href="http://api.example.com/">http://api.example.com/&lt;/a>&lt;/li>
&lt;li>standard HTTP methods (e.g., GET, POST, PUT, and DELETE)&lt;/li>
&lt;li>a media type that defines state transition data elements&lt;/li>
&lt;/ul>
&lt;h3 id="13-crud">1.3 CRUD&lt;/h3>
&lt;ul>
&lt;li>POST &amp;ndash;&amp;gt; CREATE &lt;em>(non-idempotent)&lt;/em>&lt;/li>
&lt;li>GET &amp;ndash;&amp;gt; READ &lt;em>(idempotent)&lt;/em>&lt;/li>
&lt;li>PUT &amp;ndash;&amp;gt; UPDATE &lt;em>(idempotent)&lt;/em>&lt;/li>
&lt;li>DELETE &amp;ndash;&amp;gt; DELETE &lt;em>(idempotent)&lt;/em>&lt;/li>
&lt;/ul>
&lt;h3 id="14-version">1.4 Version&lt;/h3>
&lt;p>Versioning allows an implementation to provide backward compatibility so that if we introduce breaking changes from one version to another, consumers get enough time to move to the next version.&lt;/p>
&lt;p>There are many ways to version an API. The most straightforward is to prefix the version before the resource on the URI. For instance:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://shopee.com/v1/products">https://shopee.com/v1/products&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://shopee.com/v2/products">https://shopee.com/v2/products&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="15-example">1.5 Example&lt;/h3>
&lt;p>This API has four endpoints:&lt;/p>
&lt;ul>
&lt;li>POST &lt;code>/users&lt;/code> Creates a new user with the specified name and email.&lt;/li>
&lt;li>GET &lt;code>/users/:id&lt;/code> Retrieves an existing user with the specified ID.&lt;/li>
&lt;li>PUT &lt;code>/users/:id&lt;/code> Updates an existing user with the specified ID.&lt;/li>
&lt;li>DELETE &lt;code>/users/:id&lt;/code> Deletes an existing user with the specified ID.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>POST /users
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;John Smith&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;john@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GET /users/:id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PUT /users/:id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;John Smith&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;john@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DELETE /users/:id
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-grpc">2. gRPC&lt;/h2>
&lt;ol>
&lt;li>gPRC is an implementation of Remote Procedure Call (RPC)&lt;/li>
&lt;li>It is modern open source high performance RPC framework that can run in any environment.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>RPC (Remote Procedure Call) is called “remote” because it enables communications between remote services when services are deployed to different servers under microservice architecture. From the user’s point of view, it acts like a local function call.&lt;/p>
&lt;/blockquote>
&lt;h3 id="21-core-concepts">2.1 Core Concepts&lt;/h3>
&lt;ul>
&lt;li>Design service API using &lt;a href="https://developers.google.com/protocol-buffers">protocol buffers&lt;/a> as Interface Definition Language (IDL)&lt;/li>
&lt;li>protocol buffers TODO?&lt;/li>
&lt;li>gRPC builds on &lt;a href="https://www.rfc-editor.org/rfc/rfc7540">HTTP/2&lt;/a> long-lived connections for inter-service communication&lt;/li>
&lt;/ul>
&lt;h3 id="22-overall">2.2 Overall&lt;/h3>
&lt;p>&lt;img alt="gprc overall" src="https://jinying-che.github.io/images/grpc_overall.jpeg">&lt;/p>
&lt;h3 id="23-quick-start">2.3 Quick Start&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://grpc.io/docs/languages/go/quickstart/">https://grpc.io/docs/languages/go/quickstart/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="3-openapi">3. OpenAPI&lt;/h2>
&lt;p>First of all, I&amp;rsquo;d like to recommend to take an overview of some &lt;a href="https://github.com/OAI/OpenAPI-Specification/tree/main/examples">examples&lt;/a> for OpenAPI Spec. For details, can read the &lt;a href="https://swagger.io/docs/specification/basic-structure/">basic structure&lt;/a>&lt;/p>
&lt;ol>
&lt;li>The OpenAPI Specification (OAS) defines an &lt;strong>interface description&lt;/strong> for HTTP APIs&lt;/li>
&lt;li>It&amp;rsquo;s tend to be industry standard&lt;/li>
&lt;li>It&amp;rsquo;s programming language-agnostic&lt;/li>
&lt;li>Both human and computers can understand and discover the capabilities of a service&lt;/li>
&lt;li>It removes the guesswork in calling a service and saves the communication effort&lt;/li>
&lt;li>Consumer can interact the remote service with minimal implementation logic (with the rich &lt;a href="https://openapi.tools">OpenAPI Tools&lt;/a>)&lt;/li>
&lt;li>It boost the &lt;a href="https://swagger.io/resources/articles/adopting-an-api-first-approach/">API driven development&lt;/a>&lt;/li>
&lt;li>It supports Restful API&lt;/li>
&lt;li>The OpenAPI doc are represented in YAML or JSON format which may be produced and served statically or &lt;strong>generated dynamically&lt;/strong> from an application. (e.g. &lt;a href="https://github.com/swaggo/swag">generate RESTful API documentation with Swagger 2.0 for Go&lt;/a>)&lt;/li>
&lt;/ol>
&lt;p>Generally, we would have the best practice in API desgin as long as we follow the OAS and use the related toolset.&lt;/p>
&lt;h3 id="31-what-we-can-do-with-openapi-spec">3.1 What we can do with OpenAPI Spec&lt;/h3>
&lt;ol>
&lt;li>Interactive documentation&lt;/li>
&lt;li>Code generation for documentation, clients, and servers&lt;/li>
&lt;li>automation of test cases&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ol>
&lt;h3 id="32-quick-start">3.2 Quick Start&lt;/h3>
&lt;h4 id="321-api-definition">3.2.1 API Definition&lt;/h4>
&lt;p>API is a contract followed by all stakeholders across the whole organization, traditionally, two main approaches exist when creating OpenAPI documents: Code-first and Design-first.&lt;/p>
&lt;h5 id="design-first">Design First&lt;/h5>
&lt;p>API Design First approach is being more and more pupular to build systems today as it provides many &lt;a href="https://swagger.io/resources/articles/adopting-an-api-first-approach/#the-benefits-of-an-api-first-approach-2">benefits&lt;/a>.&lt;/p>
&lt;p>To design the API from the scratch, we can use &lt;a href="https://swagger.io/tools/swagger-editor/">swagger editor&lt;/a> to create API in an interactive way where you can see if your changes is valid and what they would like in the real time. Personal speaking, learning by doing is the best way to understand and write OpenAPI docs, you can simply import and update the example like &lt;code>Petstore&lt;/code> in the editor and kick off your OpenAPI journey.&lt;/p>
&lt;h5 id="code-first">Code First&lt;/h5>
&lt;p>Code First is possibly adopted by some devs for some fast and easy API building, whereas it&amp;rsquo;s an old school and not recommeded at all, unless you have an exist project which requires to follow the OpenAPI spec after the code has been finished already, with that saying, there are some tools like &lt;a href="https://github.com/go-swagger/go-swagger">go-swagger&lt;/a> to generate OpenAPI documents automatically by parsing code annotations.&lt;/p>
&lt;h4 id="322-code-generation">3.2.2 Code Generation&lt;/h4>
&lt;p>Once we got the standard OpenAPI docs from wherever it&amp;rsquo;s generated from the code or created by any stakeholders, there are some tools for you to generate the code, for example:&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://openapi-generator.tech/">OpenAPI Generator&lt;/a> - A template-driven engine to generate documentation, API clients and server stubs in different languages by parsing your OpenAPI Description (community-driven fork of swagger-codegen)&lt;/p>
&lt;/blockquote>
&lt;h4 id="333-mock-server-and-testing">3.3.3 Mock Server and Testing&lt;/h4>
&lt;p>TBD&lt;/p>
&lt;h2 id="4-reference">4. Reference&lt;/h2>
&lt;h4 id="rest">Rest&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://blog.bytebytego.com/p/why-is-restful-api-so-popular">https://blog.bytebytego.com/p/why-is-restful-api-so-popular&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer">https://en.wikipedia.org/wiki/Representational_state_transfer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/blog/products/api-management/understanding-grpc-openapi-and-rest-and-when-to-use-them">gRPC vs REST: Understanding gRPC, OpenAPI and REST and when to use them in API design&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="grpc">gRPC&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://blog.bytebytego.com/i/84137023/how-does-grpc-work">https://blog.bytebytego.com/i/84137023/how-does-grpc-work&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://grpc.io/blog/grpc-on-http2/">https://grpc.io/blog/grpc-on-http2/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="openapi">OpenAPI&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://spec.openapis.org/oas/v3.1.0">https://spec.openapis.org/oas/v3.1.0&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=uBs6dfUgxcI">Better API Design With OpenAPI&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/OAI/OpenAPI-Specification/">https://github.com/OAI/OpenAPI-Specification/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://swagger.io/resources/articles/adopting-an-api-first-approach/">https://swagger.io/resources/articles/adopting-an-api-first-approach/&lt;/a>&lt;/li>
&lt;li>Examples: &lt;a href="https://github.com/OAI/OpenAPI-Specification/tree/main/examples">https://github.com/OAI/OpenAPI-Specification/tree/main/examples&lt;/a>&lt;/li>
&lt;li>Best Practice: &lt;a href="https://oai.github.io/Documentation/best-practices.html">https://oai.github.io/Documentation/best-practices.html&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Git Cheatsheet</title><link>https://jinying-che.github.io/posts/git_cheatsheet/</link><pubDate>Tue, 31 Jan 2023 16:14:39 +0800</pubDate><guid>https://jinying-che.github.io/posts/git_cheatsheet/</guid><description>&lt;h3 id="overall">Overall&lt;/h3>
&lt;p>&lt;img alt="git architecture" src="https://jinying-che.github.io/images/git.svg">&lt;/p>
&lt;h3 id="everything-about-the-changes-rollback">Everything about the changes rollback&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>code changed without &lt;code>git add&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># `git add .` and `git checkout .` is a pair of inverse operations&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>or
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>git add .&lt;/code> done without &lt;code>git commit&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git reset + git chekcout .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>or
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>git commit&lt;/code> done&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># option 1: keep the changes in worksapce, rollback committed chagnes in local repo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset head^
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># option 2: rollback the changes in both workspace and local repo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard head^
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>git push&lt;/code> done&lt;/p></description><content>&lt;h3 id="overall">Overall&lt;/h3>
&lt;p>&lt;img alt="git architecture" src="https://jinying-che.github.io/images/git.svg">&lt;/p>
&lt;h3 id="everything-about-the-changes-rollback">Everything about the changes rollback&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>code changed without &lt;code>git add&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># `git add .` and `git checkout .` is a pair of inverse operations&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>or
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>git add .&lt;/code> done without &lt;code>git commit&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git reset + git chekcout .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>or
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>git commit&lt;/code> done&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># option 1: keep the changes in worksapce, rollback committed chagnes in local repo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset head^
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># option 2: rollback the changes in both workspace and local repo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard head^
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>git push&lt;/code> done&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># overwrite remote via the local&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard HEAD^
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="how-can-i-see-the-changes-in-a-git-commithttpsstackoverflowcomquestions17563726how-can-i-see-the-changes-in-a-git-commit">&lt;a href="https://stackoverflow.com/questions/17563726/how-can-i-see-the-changes-in-a-git-commit">How can I see the changes in a git commit&lt;/a>?&lt;/h3>
&lt;p>&lt;code>git diff COMMIT~ COMMIT&lt;/code> or &lt;code>git show COMMIT&lt;/code>&lt;/p>
&lt;h3 id="how-to-include-config-directives-from-another-source">How to include config directives from another source?&lt;/h3>
&lt;p>setup a &lt;code>.gitconfig&lt;/code>, &lt;code>.gitconfig-garena&lt;/code>, and &lt;code>.gitconfig-github&lt;/code> at $HOME as follows, all the projects under the folder will be configured recursively:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># .gitconfig&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">includeIf&lt;/span> &lt;span style="color:#e6db74">&amp;#34;gitdir:~/workspace/garena.com/&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">path&lt;/span> = &lt;span style="color:#960050;background-color:#1e0010">~/&lt;/span>.&lt;span style="color:#a6e22e">gitconfig-garena&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">includeIf&lt;/span> &lt;span style="color:#e6db74">&amp;#34;gitdir:~/workspace/github.com/&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">path&lt;/span> = &lt;span style="color:#960050;background-color:#1e0010">~/&lt;/span>.&lt;span style="color:#a6e22e">gitconfig-github&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># .gitconfig-garena&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">user&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#a6e22e">Jinying&lt;/span> &lt;span style="color:#a6e22e">Che&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">email&lt;/span> = &lt;span style="color:#a6e22e">jinying&lt;/span>.&lt;span style="color:#a6e22e">che&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#a6e22e">shopee&lt;/span>.&lt;span style="color:#a6e22e">com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># .gitconfig-github&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">user&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span> = &lt;span style="color:#a6e22e">Jinying&lt;/span> &lt;span style="color:#a6e22e">Che&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">email&lt;/span> = &lt;span style="color:#a6e22e">chejinying&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#a6e22e">me&lt;/span>.&lt;span style="color:#a6e22e">com&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="keep-the-local-changes-delete-the-remote-changes">Keep the local changes, delete the remote changes&lt;/h3>
&lt;p>delete the local cache, push to the remote&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>1. git rm —cache -r directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. git commit -m &lt;span style="color:#e6db74">&amp;#34;del&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3. git pushf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="git-merge-the-update-from-the-forked-project">Git merge the update from the forked project&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>1. git remote add upstream url
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. git fetch upstream
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3. git merge upsteam/master
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># NOTE check the remote brach status:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git remote -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="git-merge-the-file-from-the-other-branch">Git merge the file from the other branch&lt;/h3>
&lt;p>exactly, it&amp;rsquo;s &lt;code>checkout&lt;/code>, pls be reminded that this command will overwrite the local file without merging process&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git checkout branch_name filename
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="overwrite-the-local-via-the-remote">Overwrite the local via the remote&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>1. git fetch --all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. git reset --hard origin/master
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="squash-commits">Squash commits&lt;/h3>
&lt;ol>
&lt;li>&lt;code>git rebase -i commit-version&lt;/code> (which is earlist one that squash beginning from)&lt;/li>
&lt;li>change &lt;code>pick&lt;/code> to &lt;code>s&lt;/code>(squash) manually by edting the file, leave the first &lt;code>pick&lt;/code>, then &lt;code>:wq&lt;/code>(for vim)&lt;/li>
&lt;li>Edit the commit message, leave the msg for the final commiting, then&lt;code>:wq&lt;/code>(for vim)&lt;/li>
&lt;/ol>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.fengerzh.com/git-reset/">https://www.fengerzh.com/git-reset/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Python Cheatsheet</title><link>https://jinying-che.github.io/posts/python/python_cheatsheet/</link><pubDate>Tue, 31 Jan 2023 11:40:49 +0800</pubDate><guid>https://jinying-che.github.io/posts/python/python_cheatsheet/</guid><description>&lt;h3 id="pass-by-reference">Pass By Reference&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Python passes arguments neither by reference nor by value, but by assignment. The parameter passed in is actually a reference to an object (but the reference is passed by value)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">9001&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[main] before n: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(n))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # same&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> increment(n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[main] after n: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(n))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # same&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">increment&lt;/span>(x):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[func] before x: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(x))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # same&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[func] after x: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(x))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # address altered after the assignment&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>main()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[main] before n: &lt;span style="color:#ae81ff">0x11035a0b0&lt;/span> &lt;span style="color:#75715e"># same&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[func] before x: &lt;span style="color:#ae81ff">0x11035a0b0&lt;/span> &lt;span style="color:#75715e"># same&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[func] after x: &lt;span style="color:#ae81ff">0x11035a190&lt;/span> &lt;span style="color:#75715e"># address altered after the assignment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[main] after n: &lt;span style="color:#ae81ff">0x11035a0b0&lt;/span> &lt;span style="color:#75715e"># same&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Mutability, an object is &lt;strong>mutable&lt;/strong> if its structure can be changed in place rather than requiring reassignment.&lt;/p></description><content>&lt;h3 id="pass-by-reference">Pass By Reference&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Python passes arguments neither by reference nor by value, but by assignment. The parameter passed in is actually a reference to an object (but the reference is passed by value)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">9001&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[main] before n: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(n))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # same&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> increment(n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[main] after n: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(n))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # same&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">increment&lt;/span>(x):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[func] before x: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(x))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # same&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;[func] after x: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(id(x))&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> # address altered after the assignment&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>main()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[main] before n: &lt;span style="color:#ae81ff">0x11035a0b0&lt;/span> &lt;span style="color:#75715e"># same&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[func] before x: &lt;span style="color:#ae81ff">0x11035a0b0&lt;/span> &lt;span style="color:#75715e"># same&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[func] after x: &lt;span style="color:#ae81ff">0x11035a190&lt;/span> &lt;span style="color:#75715e"># address altered after the assignment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[main] after n: &lt;span style="color:#ae81ff">0x11035a0b0&lt;/span> &lt;span style="color:#75715e"># same&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Mutability, an object is &lt;strong>mutable&lt;/strong> if its structure can be changed in place rather than requiring reassignment.&lt;/p>
&lt;blockquote>
&lt;p>If you pass a mutable object into a method, the method gets a reference to that same object and you can mutate it to your heart&amp;rsquo;s delight, but if you rebind the reference in the method, the outer scope will know nothing about it, and after you&amp;rsquo;re done, the outer reference will still point at the original object.&lt;/p>
&lt;/blockquote>
&lt;p>The followings are the mutable objects in Python:&lt;/p>
&lt;ul>
&lt;li>Dictionary
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Dictionaries are mapping types.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mt &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;n&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">4&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Define a function to operate on a key:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">square&lt;/span>(num_dict):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> num_dict[&lt;span style="color:#e6db74">&amp;#34;n&amp;#34;&lt;/span>] &lt;span style="color:#f92672">*=&lt;/span> num_dict[&lt;span style="color:#e6db74">&amp;#34;n&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>square(mt)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># output: 16&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>List
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Lists are both subscriptable and mutable.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sm &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">4&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Define a function to operate on an index:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">square&lt;/span>(num_list):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> num_list[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">*=&lt;/span> num_list[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>square(sm)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># output: [16]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Object Attributes
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># For the purpose of this example, let&amp;#39;s use SimpleNamespace.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> types &lt;span style="color:#f92672">import&lt;/span> SimpleNamespace
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SimpleNamespace allows us to set arbitrary attributes.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># It is an explicit, handy replacement for &amp;#34;class X: pass&amp;#34;.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ns &lt;span style="color:#f92672">=&lt;/span> SimpleNamespace()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Define a function to operate on an object&amp;#39;s attribute.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">square&lt;/span>(instance):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> instance&lt;span style="color:#f92672">.&lt;/span>n &lt;span style="color:#f92672">*=&lt;/span> instance&lt;span style="color:#f92672">.&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ns&lt;span style="color:#f92672">.&lt;/span>n &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>square(ns)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ns&lt;span style="color:#f92672">.&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># output: 16&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="reference">Reference&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://realpython.com/python-pass-by-reference/#toc">Pass by Reference in Python: Background and Best Practices&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.python.org/3/faq/programming.html#how-do-i-write-a-function-with-output-parameters-call-by-reference">How do I write a function with output parameters (call by reference)?&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Iptables</title><link>https://jinying-che.github.io/posts/network/iptables/</link><pubDate>Thu, 26 Jan 2023 16:22:21 +0800</pubDate><guid>https://jinying-che.github.io/posts/network/iptables/</guid><description>&lt;p>iptables is a user-space utility program that allows a system administrator to configure the IP packet filter rules of the Linux kernel firewall, implemented as different &lt;a href="https://www.netfilter.org/">Netfilter&lt;/a> modules. The filters are organized in different tables, which contain chains of rules for how to treat network traffic packets.&lt;/p>
&lt;h2 id="in-a-nutshell">In a nutshell:&lt;/h2>
&lt;ul>
&lt;li>Relationship: Tables -&amp;gt; Chains -&amp;gt; Rules
&lt;img alt="package flow through iptables" src="https://jinying-che.github.io/images/iptable.png">&lt;/li>
&lt;/ul>
&lt;h2 id="tables">Tables&lt;/h2>
&lt;p>There are five tables, the &lt;em>Priority&lt;/em> is: &lt;strong>filter, nat, mangle, raw, security&lt;/strong>&lt;/p></description><content>&lt;p>iptables is a user-space utility program that allows a system administrator to configure the IP packet filter rules of the Linux kernel firewall, implemented as different &lt;a href="https://www.netfilter.org/">Netfilter&lt;/a> modules. The filters are organized in different tables, which contain chains of rules for how to treat network traffic packets.&lt;/p>
&lt;h2 id="in-a-nutshell">In a nutshell:&lt;/h2>
&lt;ul>
&lt;li>Relationship: Tables -&amp;gt; Chains -&amp;gt; Rules
&lt;img alt="package flow through iptables" src="https://jinying-che.github.io/images/iptable.png">&lt;/li>
&lt;/ul>
&lt;h2 id="tables">Tables&lt;/h2>
&lt;p>There are five tables, the &lt;em>Priority&lt;/em> is: &lt;strong>filter, nat, mangle, raw, security&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://www.thegeekstuff.com/2011/01/iptables-fundamentals/">https://www.thegeekstuff.com/2011/01/iptables-fundamentals/&lt;/a>
&lt;a href="https://linux.die.net/man/8/iptables">https://linux.die.net/man/8/iptables&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># show filter table by default&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iptables -L -v -n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># which is equal to &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iptables -t filter -L -v -n
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="chains">Chains&lt;/h2>
&lt;p>There are five predefined chains (mapping to the five available Netfilter hooks), though a table may not have all chains.&lt;/p>
&lt;ul>
&lt;li>PREROUTING: Packets will enter this chain before a routing decision is made.&lt;/li>
&lt;li>INPUT: Packet is going to be locally delivered. It does not have anything to do with processes having an opened socket; local delivery is controlled by the &amp;ldquo;local-delivery&amp;rdquo; routing table: ip route show table local.&lt;/li>
&lt;li>FORWARD: All packets that have been routed and were not for local delivery will traverse this chain.&lt;/li>
&lt;li>OUTPUT: Packets sent from the machine itself will be visiting this chain.&lt;/li>
&lt;li>POSTROUTING: Routing decision has been made. Packets enter this chain just before handing them off to the hardware.&lt;/li>
&lt;/ul>
&lt;p>The system administrator can create as many other chains as desired.&lt;/p>
&lt;h2 id="rules">Rules&lt;/h2>
&lt;ul>
&lt;li>ACCEPT – Firewall will accept the packet.&lt;/li>
&lt;li>DROP – Firewall will drop the packet.&lt;/li>
&lt;li>QUEUE – Firewall will pass the packet to the userspace.&lt;/li>
&lt;li>RETURN – Firewall will stop executing the next set of rules in the current chain for this packet. The control will be returned to the calling chain.&lt;/li>
&lt;/ul>
&lt;h2 id="cheat-sheet">Cheat Sheet&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># drop ip packet:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># modify the filter table, insert the rule DROP into the INPUT chain at the specific number (1 by default)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -A means append the rule at the end of the chain&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo iptables -I INPUT -s 10.129.106.98 -j DROP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># delele drop ip packet &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo iptables -D INPUT -s 10.129.106.98 -j DROP
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.netfilter.org/documentation/HOWTO/netfilter-hacking-HOWTO-3.html">https://www.netfilter.org/documentation/HOWTO/netfilter-hacking-HOWTO-3.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://lartc.org/">Linux Advanced Routing &amp;amp; Traffic Control How To&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.docker.com/network/iptables/">https://docs.docker.com/network/iptables/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.linode.com/docs/guides/control-network-traffic-with-iptables/">https://www.linode.com/docs/guides/control-network-traffic-with-iptables/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cyberciti.biz/faq/linux-iptables-drop/">https://www.cyberciti.biz/faq/linux-iptables-drop/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Container Networking</title><link>https://jinying-che.github.io/posts/network/container_networking/</link><pubDate>Thu, 26 Aug 2021 10:27:13 +0800</pubDate><guid>https://jinying-che.github.io/posts/network/container_networking/</guid><description>&lt;h1 id="before">Before&lt;/h1>
&lt;hr>
&lt;h3 id="veth">VETH&lt;/h3>
&lt;p>The veth devices are virtual Ethernet devices. They can act as tunnels between network namespaces to create a bridge to a physical network device in another namespace, but can also be used as standalone network devices.&lt;/p>
&lt;p>veth device pairs are useful for combining the network facilities of the kernel together in interesting ways. A particularly interesting use case is to place one end of a veth pair in one network namespace and the other end in another network namespace, thus allowing communication between network namespaces.&lt;/p></description><content>&lt;h1 id="before">Before&lt;/h1>
&lt;hr>
&lt;h3 id="veth">VETH&lt;/h3>
&lt;p>The veth devices are virtual Ethernet devices. They can act as tunnels between network namespaces to create a bridge to a physical network device in another namespace, but can also be used as standalone network devices.&lt;/p>
&lt;p>veth device pairs are useful for combining the network facilities of the kernel together in interesting ways. A particularly interesting use case is to place one end of a veth pair in one network namespace and the other end in another network namespace, thus allowing communication between network namespaces.&lt;/p>
&lt;h3 id="bridge">Bridge&lt;/h3>
&lt;p>A Linux bridge behaves like a network switch. It forwards packets between interfaces that are connected to it.&lt;/p>
&lt;p>It&amp;rsquo;s usually used for forwarding packets on routers, on gateways, or between VMs and network namespaces on a host.
It also supports STP, VLAN filter, and multicast snooping.&lt;/p>
&lt;h3 id="iptables">Iptables&lt;/h3>
&lt;p>iptables is a user-space utility program that allows a system administrator to configure the IP packet filter rules of the Linux kernel firewall, implemented as different &lt;a href="https://www.netfilter.org/">Netfilter&lt;/a> modules. The filters are organized in different tables, which contain chains of rules for how to treat network traffic packets.&lt;/p>
&lt;p>For details, pls refer to another &lt;a href="https://jinying-che.github.io/posts/network/iptables/">blog&lt;/a>&lt;/p>
&lt;h1 id="bridge-networking">Bridge Networking&lt;/h1>
&lt;h1 id="calico-networking">Calico Networking&lt;/h1>
&lt;h2 id="reference">Reference:&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man4/veth.4.html">https://man7.org/linux/man-pages/man4/veth.4.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking">https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/mz1999/blog/blob/master/docs/docker-network-bridge.md">https://github.com/mz1999/blog/blob/master/docs/docker-network-bridge.md&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://time.geekbang.org/column/article/64948?cid=100015201">https://time.geekbang.org/column/article/64948?cid=100015201&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Iptables">https://en.wikipedia.org/wiki/Iptables&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Vim Cheat Sheet</title><link>https://jinying-che.github.io/posts/vim/</link><pubDate>Sat, 10 Jul 2021 11:20:07 +0800</pubDate><guid>https://jinying-che.github.io/posts/vim/</guid><description>&lt;h3 id="basic-usage">Basic Usage&lt;/h3>
&lt;ul>
&lt;li>delete inside parentheses (which can be replaced with any symbol)
&lt;ul>
&lt;li>&lt;code>di(&lt;/code>&lt;/li>
&lt;li>&lt;code>di&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>di'&lt;/code>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="split">Split&lt;/h3>
&lt;ul>
&lt;li>Horizontal: &lt;code>ctrl + w + s&lt;/code>&lt;/li>
&lt;li>Vertical: &lt;code>ctrl + w + v&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="replace-a-word-with-yanked-text">Replace a word with yanked text&lt;/h3>
&lt;pre tabindex="0">&lt;code>yiw Yank inner word (copy word under cursor, say &amp;#34;first&amp;#34;).
Move the cursor to another word (say &amp;#34;second&amp;#34;).
ciw Ctrl-R 0 Esc Change &amp;#34;second&amp;#34;, replacing it with &amp;#34;first&amp;#34;. (Ctrl-R: paste `0` register in insert mode)
Move the cursor to another word (say &amp;#34;third&amp;#34;).
. Repeat the operation (change word and replace it with &amp;#34;first&amp;#34;).
Move the cursor to another word and press . to repeat the change.
ref: https://vim.fandom.com/wiki/Replace_a_word_with_yanked_text
&lt;/code>&lt;/pre></description><content>&lt;h3 id="basic-usage">Basic Usage&lt;/h3>
&lt;ul>
&lt;li>delete inside parentheses (which can be replaced with any symbol)
&lt;ul>
&lt;li>&lt;code>di(&lt;/code>&lt;/li>
&lt;li>&lt;code>di&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>di'&lt;/code>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="split">Split&lt;/h3>
&lt;ul>
&lt;li>Horizontal: &lt;code>ctrl + w + s&lt;/code>&lt;/li>
&lt;li>Vertical: &lt;code>ctrl + w + v&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="replace-a-word-with-yanked-text">Replace a word with yanked text&lt;/h3>
&lt;pre tabindex="0">&lt;code>yiw Yank inner word (copy word under cursor, say &amp;#34;first&amp;#34;).
Move the cursor to another word (say &amp;#34;second&amp;#34;).
ciw Ctrl-R 0 Esc Change &amp;#34;second&amp;#34;, replacing it with &amp;#34;first&amp;#34;. (Ctrl-R: paste `0` register in insert mode)
Move the cursor to another word (say &amp;#34;third&amp;#34;).
. Repeat the operation (change word and replace it with &amp;#34;first&amp;#34;).
Move the cursor to another word and press . to repeat the change.
ref: https://vim.fandom.com/wiki/Replace_a_word_with_yanked_text
&lt;/code>&lt;/pre></content></item><item><title>Tmux Cheat Sheet</title><link>https://jinying-che.github.io/posts/tmux/</link><pubDate>Sat, 10 Jul 2021 11:18:14 +0800</pubDate><guid>https://jinying-che.github.io/posts/tmux/</guid><description>&lt;h3 id="session">Session&lt;/h3>
&lt;ul>
&lt;li>new session: &lt;code>tmux new -s name&lt;/code>&lt;/li>
&lt;li>show session: &lt;code>tmux ls&lt;/code>&lt;/li>
&lt;li>attach session with name: &lt;code>tmux a -t name&lt;/code>&lt;/li>
&lt;li>detach from session: &lt;code>ctrl+b&lt;/code> then &lt;code>d&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="panes">Panes&lt;/h3>
&lt;ul>
&lt;li>split pane horizontally: &lt;code>ctrl+b&lt;/code> then &lt;code>%&lt;/code>&lt;/li>
&lt;li>split pane vertically: &lt;code>ctrl+b&lt;/code> then &lt;code>&amp;quot;&lt;/code>&lt;/li>
&lt;li>cloes current pane: &lt;code>ctrl+b&lt;/code> then &lt;code>x&lt;/code>&lt;/li>
&lt;li>swap panes: &lt;code>ctrl+b&lt;/code> then &lt;code>o&lt;/code>&lt;/li>
&lt;li>swan and rotate panes: &lt;code>ctrl+b&lt;/code> then &lt;code>ctrl+o&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="window">Window&lt;/h3>
&lt;ul>
&lt;li>Create current window: &lt;code>ctrl+b&lt;/code> then &lt;code>c&lt;/code>&lt;/li>
&lt;li>Close current window: &lt;code>ctrl+b&lt;/code> then &lt;code>&amp;amp;&lt;/code>&lt;/li>
&lt;li>Rename current window: &lt;code>ctrl+b&lt;/code> then &lt;code>,&lt;/code>&lt;/li>
&lt;li>Next window: &lt;code>ctrl+b&lt;/code> then &lt;code>p&lt;/code>&lt;/li>
&lt;li>Previous window: &lt;code>ctrl+b&lt;/code> then &lt;code>n&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="view-in-tmux">View in tmux&lt;/h3>
&lt;p>&lt;code>ctrl+b&lt;/code> then &lt;code>[&lt;/code>&lt;/p></description><content>&lt;h3 id="session">Session&lt;/h3>
&lt;ul>
&lt;li>new session: &lt;code>tmux new -s name&lt;/code>&lt;/li>
&lt;li>show session: &lt;code>tmux ls&lt;/code>&lt;/li>
&lt;li>attach session with name: &lt;code>tmux a -t name&lt;/code>&lt;/li>
&lt;li>detach from session: &lt;code>ctrl+b&lt;/code> then &lt;code>d&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="panes">Panes&lt;/h3>
&lt;ul>
&lt;li>split pane horizontally: &lt;code>ctrl+b&lt;/code> then &lt;code>%&lt;/code>&lt;/li>
&lt;li>split pane vertically: &lt;code>ctrl+b&lt;/code> then &lt;code>&amp;quot;&lt;/code>&lt;/li>
&lt;li>cloes current pane: &lt;code>ctrl+b&lt;/code> then &lt;code>x&lt;/code>&lt;/li>
&lt;li>swap panes: &lt;code>ctrl+b&lt;/code> then &lt;code>o&lt;/code>&lt;/li>
&lt;li>swan and rotate panes: &lt;code>ctrl+b&lt;/code> then &lt;code>ctrl+o&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="window">Window&lt;/h3>
&lt;ul>
&lt;li>Create current window: &lt;code>ctrl+b&lt;/code> then &lt;code>c&lt;/code>&lt;/li>
&lt;li>Close current window: &lt;code>ctrl+b&lt;/code> then &lt;code>&amp;amp;&lt;/code>&lt;/li>
&lt;li>Rename current window: &lt;code>ctrl+b&lt;/code> then &lt;code>,&lt;/code>&lt;/li>
&lt;li>Next window: &lt;code>ctrl+b&lt;/code> then &lt;code>p&lt;/code>&lt;/li>
&lt;li>Previous window: &lt;code>ctrl+b&lt;/code> then &lt;code>n&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="view-in-tmux">View in tmux&lt;/h3>
&lt;p>&lt;code>ctrl+b&lt;/code> then &lt;code>[&lt;/code>&lt;/p>
&lt;h3 id="plugin">Plugin&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/tmux-plugins/tmux-resurrect">tmux-resurrect&lt;/a> Restore tmux environment after system restart.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>The better way to use tmux is to customize in your way, feel free to refer my &lt;a href="https://github.com/jinying-che/config/blob/master/.tmux.conf">tmux config&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://tmuxcheatsheet.com/">https://tmuxcheatsheet.com/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Golang Standard Library</title><link>https://jinying-che.github.io/posts/go/go_std/</link><pubDate>Sun, 27 Jun 2021 17:34:13 +0800</pubDate><guid>https://jinying-che.github.io/posts/go/go_std/</guid><description>&lt;p>Dive into golang standard library, where we can learn how high quality code is written and what the golang convention and style is.&lt;/p></description><content>&lt;p>Dive into golang standard library, where we can learn how high quality code is written and what the golang convention and style is.&lt;/p>
&lt;h3 id="syncwaitgroup">sync.WaitGroup&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-golang" data-lang="golang">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// go version 1.18rc1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">WaitGroup&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">noCopy&lt;/span> &lt;span style="color:#a6e22e">noCopy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 64-bit value: high 32 bits are counter, low 32 bits are waiter count.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 64-bit atomic operations require 64-bit alignment, but 32-bit
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// compilers only guarantee that 64-bit fields are 32-bit aligned.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// For this reason on 32 bit architectures we need to check in state()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// if state1 is aligned or not, and dynamically &amp;#34;swap&amp;#34; the field order if
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// needed.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">state1&lt;/span> &lt;span style="color:#66d9ef">uint64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">state2&lt;/span> &lt;span style="color:#66d9ef">uint32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img alt="wait group state byte representation" src="https://jinying-che.github.io/images/wait_group.png">&lt;/p>
&lt;p>It&amp;rsquo;s based on golang &lt;strong>semaphore&lt;/strong> model, implemented by &lt;code>runtime_Semrelease&lt;/code> and &lt;code>runtime_Semacquire&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>semaphore is common mechanism used in concurrent progamming, like &lt;a href="https://en.wikipedia.org/wiki/Readers%E2%80%93writers_problem">Readers–writers problem&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>Here is an example demostrating how it works, there are three tasks added, one task is done before &lt;code>Wait()&lt;/code>, the other two are done after &lt;code>Wait()&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;code>Add()&lt;/code> increases or decreases the counter, only reset waiter to 0 when waiter != 0 (which means &lt;code>Wait&lt;/code> has already been called then) and release the semaphore.&lt;/li>
&lt;li>&lt;code>Wait()&lt;/code> increases the waiter and try to acquire the semaphore.&lt;/li>
&lt;/ul>
&lt;p>&lt;img alt="wait group case" src="https://jinying-che.github.io/images/wait_group_case.png">&lt;/p>
&lt;h3 id="syncpool">sync.Pool&lt;/h3></content></item><item><title>HHKB</title><link>https://jinying-che.github.io/posts/hhkb/</link><pubDate>Thu, 24 Jun 2021 21:20:23 +0800</pubDate><guid>https://jinying-che.github.io/posts/hhkb/</guid><description>&lt;h4 id="cheatsheet">CheatSheet&lt;/h4>
&lt;ul>
&lt;li>BS and Delete
&lt;ul>
&lt;li>Win mode: &lt;code>Fn+Control+w&lt;/code>&lt;/li>
&lt;li>Mac mode: &lt;code>Fn+Control+m&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img alt="KKHB CheatSheet" src="https://jinying-che.github.io/images/hhkb.png">&lt;/p></description><content>&lt;h4 id="cheatsheet">CheatSheet&lt;/h4>
&lt;ul>
&lt;li>BS and Delete
&lt;ul>
&lt;li>Win mode: &lt;code>Fn+Control+w&lt;/code>&lt;/li>
&lt;li>Mac mode: &lt;code>Fn+Control+m&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img alt="KKHB CheatSheet" src="https://jinying-che.github.io/images/hhkb.png">&lt;/p></content></item><item><title>Setup Shadowsocks Server And Client</title><link>https://jinying-che.github.io/posts/shadowsocks/</link><pubDate>Fri, 23 Apr 2021 09:22:08 +0800</pubDate><guid>https://jinying-che.github.io/posts/shadowsocks/</guid><description>&lt;p>In this article, we will setup the Shadowsock Server and Client from scratch and solve the issue during and after the setup.&lt;/p></description><content>&lt;p>In this article, we will setup the Shadowsock Server and Client from scratch and solve the issue during and after the setup.&lt;/p>
&lt;h2 id="shadowsocks-server">Shadowsocks Server&lt;/h2>
&lt;hr>
&lt;p>Install the latest &lt;code>Ubuntu&lt;/code> in vps, my vps provier is &lt;a href="https://bandwagonhost.com/index.php">https://bandwagonhost.com/index.php&lt;/a>, the route is: &lt;em>My Service &amp;gt; KiwiVM Control Panel &amp;gt; Install new OS&lt;/em>&lt;/p>
&lt;h3 id="1-installing-shadowsocks-libev">1. Installing Shadowsocks-libev&lt;/h3>
&lt;h4 id="install-snaphttpssnapcraftioabout">Install &lt;a href="https://snapcraft.io/about">Snap&lt;/a>&lt;/h4>
&lt;pre tabindex="0">&lt;code>$ sudo apt update
$ sudo apt install snapd
$ sudo reboot
&lt;/code>&lt;/pre>&lt;h4 id="install-shadowsocks-libevhttpsgithubcomshadowsocksshadowsocks-libev">Install &lt;a href="https://github.com/shadowsocks/shadowsocks-libev">Shadowsocks-libev&lt;/a>&lt;/h4>
&lt;pre tabindex="0">&lt;code>$ sudo snap install shadowsocks-libev
&lt;/code>&lt;/pre>&lt;h3 id="2-configuring-proxy-server">2. Configuring proxy server&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># first time to use snap, this path should be the config convention of Snap apps &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mkdir -p /var/snap/shadowsocks-libev/common/etc/shadowsocks-libev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo vim /var/snap/shadowsocks-libev/common/etc/shadowsocks-libev/config.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="configjson">config.json&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;server&amp;#34;&lt;/span>:[&lt;span style="color:#e6db74">&amp;#34;::0&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;0.0.0.0&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;server_port&amp;#34;&lt;/span>:&lt;span style="color:#ae81ff">4443&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;password&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;your password&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;timeout&amp;#34;&lt;/span>:&lt;span style="color:#ae81ff">300&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;method&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;aes-256-gcm&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;nameserver&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;1.1.1.1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;mode&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;tcp_and_udp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note&lt;/strong>: &amp;ldquo;server&amp;rdquo;:[&amp;quot;::0&amp;quot;, &amp;ldquo;0.0.0.0&amp;rdquo;] &amp;ndash;&amp;gt; support IPv4 and IPv6&lt;/p>
&lt;h3 id="3-creating-systemd-service-unit-config">3. Creating systemd service unit config&lt;/h3>
&lt;h4 id="shadowsocks-libev-serverservice">shadowsocks-libev-server@.service&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ sudo vim /etc/systemd/system/shadowsocks-libev-server@.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Unit&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Description&lt;span style="color:#f92672">=&lt;/span>Shadowsocks-Libev Custom Server Service &lt;span style="color:#66d9ef">for&lt;/span> %I
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Documentation&lt;span style="color:#f92672">=&lt;/span>man:ss-server&lt;span style="color:#f92672">(&lt;/span>1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>After&lt;span style="color:#f92672">=&lt;/span>network-online.target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>StartLimitIntervalSec&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">500&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>StartLimitBurst&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Service&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Type&lt;span style="color:#f92672">=&lt;/span>simple
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Restart&lt;span style="color:#f92672">=&lt;/span>always
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RestartSec&lt;span style="color:#f92672">=&lt;/span>5s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecStart&lt;span style="color:#f92672">=&lt;/span>/usr/bin/snap run shadowsocks-libev.ss-server -c /var/snap/shadowsocks-libev/common/etc/shadowsocks-libev/%i.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Install&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WantedBy&lt;span style="color:#f92672">=&lt;/span>multi-user.target
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Two things to take note:&lt;/p>
&lt;ul>
&lt;li>&lt;code>shadowsocks-libev-server@.service&lt;/code> is a filename (&lt;em>systemd style&lt;/em>)&lt;/li>
&lt;li>&lt;code>man systemd.service&lt;/code> to understand the details, btw it&amp;rsquo;s better to set &lt;code>Restart=always&lt;/code> if you prefer the log-term running&lt;/li>
&lt;/ul>
&lt;p>Start the service and make it managed by systemd&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Note that the @config is used to select the configuration file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo systemctl enable --now shadowsocks-libev-server@config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-troubleshooting">4. Troubleshooting&lt;/h3>
&lt;h4 id="command">Command&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Status&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo systemctl status shadowsocks-libev-server@config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Log&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Check the certain process that managed by systemd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># journalctl is a command for viewing logs collected by systemd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ journalctl -u shadowsocks-libev-server@config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Check all the processes log&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cd /var/log/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ less syslog &lt;span style="color:#75715e"># can check any related log, TBD&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="cases">Cases&lt;/h4>
&lt;h5 id="process-stopped-unexpectedly">Process stopped unexpectedly&lt;/h5>
&lt;ul>
&lt;li>Root Cause: process that managed by systemd will stop when user exit the session&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;a href="https://github.com/systemd/systemd/issues/8486">https://github.com/systemd/systemd/issues/8486&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>Fix: &lt;code>loginctl enable-linger&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="shadowsocks-client">Shadowsocks Client&lt;/h2>
&lt;hr>
&lt;h3 id="chrome">Chrome&lt;/h3>
&lt;p>Enable the socks5 proxy for Chrome in macOS&lt;/p>
&lt;ol>
&lt;li>&lt;code>brew install shadowsocks-libev&lt;/code>&lt;/li>
&lt;li>run &lt;code>ss-local -h&lt;/code> to understand how to setup shadowsocks client locally, for example:
&lt;ul>
&lt;li>&lt;code>ss-local -s server_ip -p port -k password -m aes-256-cfb -l 1081 -v&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>install and setup SwitchyOmeg for Chrome:&lt;/li>
&lt;li>import &lt;a href="https://shadowsockshelp.github.io/Shadowsocks/Chrome.html">GFW List&lt;/a> and enable the auto-switch&lt;/li>
&lt;/ol>
&lt;h3 id="global-terminal">Global (Terminal)&lt;/h3>
&lt;p>Some request from termial or other Apps are supposed to go through the socks5 tunnel as well, the following steps will forward the traffic to the local port that listened by the shadowsocks client:&lt;/p>
&lt;ol>
&lt;li>setup helper function in bash or zsh profile, so that it&amp;rsquo;s able to control the proxy manually in the current terminal session via &lt;code>proxy-on&lt;/code> or &lt;code>proxy-off&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> proxy-off&lt;span style="color:#f92672">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unset http_proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unset https_proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;proxy off&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> proxy-on&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export no_proxy&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;localhost,127.0.0.1,localaddress,.localdomain.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export http_proxy&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;socks5://127.0.0.1:1081&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export https_proxy&lt;span style="color:#f92672">=&lt;/span>$http_proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;proxy on: &lt;/span>$http_proxy&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>run &lt;code>ss-local ... -v&lt;/code>&lt;/li>
&lt;li>test via &lt;code>curl cip.cc&lt;/code> or &lt;code>curl ifconfig.me&lt;/code>, by right the ip that running shadowsocks server should be printed&lt;/li>
&lt;/ol>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.freedesktop.org/software/systemd/man/systemd.service.html">systemd config&lt;/a> or check by &lt;code>man systemd.service&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://www.linuxbabe.com/ubuntu/shadowsocks-libev-proxy-server-ubuntu">https://www.linuxbabe.com/ubuntu/shadowsocks-libev-proxy-server-ubuntu&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://upcloud.com/community/tutorials/install-shadowsocks-libev-socks5-proxy/">https://upcloud.com/community/tutorials/install-shadowsocks-libev-socks5-proxy/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://unix.stackexchange.com/questions/225401/how-to-see-full-log-from-systemctl-status-service">https://unix.stackexchange.com/questions/225401/how-to-see-full-log-from-systemctl-status-service&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://shadowsockshelp.github.io/Shadowsocks/Chrome.html">https://shadowsockshelp.github.io/Shadowsocks/Chrome.html&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Brief Introduction of Network Hardware</title><link>https://jinying-che.github.io/posts/network/hardware/</link><pubDate>Mon, 05 Apr 2021 23:11:29 +0800</pubDate><guid>https://jinying-che.github.io/posts/network/hardware/</guid><description>&lt;p>The hardware inlucded in this post are Hub, Switch, Router, Modem, AP&lt;/p></description><content>&lt;p>The hardware inlucded in this post are Hub, Switch, Router, Modem, AP&lt;/p>
&lt;h4 id="hub-and-switch">Hub and Switch&lt;/h4>
&lt;p>The purpose of both is to connect the internal network (LAN), they do not know IP&lt;/p>
&lt;h5 id="hub">Hub&lt;/h5>
&lt;ul>
&lt;li>It is not intelligent, what it knows is only the ports and the devices that is connected to the ports&lt;/li>
&lt;li>It does not filter any data or has intelligence as to where the data is supposed to be sent&lt;/li>
&lt;li>When a data packet comes into one port, it will rebroadcast the data to every port that has a device connected to it&lt;/li>
&lt;li>It operates at the &lt;a href="https://en.wikipedia.org/wiki/OSI_model#Layer_1:_Physical_Layer">Physical Layer of OSI&lt;/a>&lt;/li>
&lt;/ul>
&lt;h5 id="switch">Switch&lt;/h5>
&lt;ul>
&lt;li>It&amp;rsquo;s intelligent and able to learn physical(MAC) address of devices that are connected to it&lt;/li>
&lt;li>When a data packet is sent to a switch, it&amp;rsquo;s only directed to the intended destination port&lt;/li>
&lt;li>It operates at the &lt;a href="https://en.wikipedia.org/wiki/OSI_model#Layer_2:_Data_Link_Layer">Data Link Layer of OSI&lt;/a> (not including the &lt;strong>multilayer&lt;/strong> switch)&lt;/li>
&lt;/ul>
&lt;h4 id="router">Router&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>It routes or forwards data from network to another base on IP address&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It&amp;rsquo;s the &lt;strong>Gateway&lt;/strong> of a network, it detemines if the packet was meant for it&amp;rsquo;s own network&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It normally works at the &lt;a href="https://en.wikipedia.org/wiki/OSI_model#Layer_3:_Network_Layer">Network layer of OSI&lt;/a>&lt;/p>
&lt;p>&lt;img alt="Hub vs Switch vs Router" src="https://jinying-che.github.io/images/hub_switch_router.png">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="modem">Modem&lt;/h4>
&lt;p>Modems (modulators-demodulators) are used to transmit digital signals over analog telephone lines&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Modulators: it modulates &lt;strong>outgoing&lt;/strong> digital signals into an analog signal&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Demodulator: it demodulate &lt;strong>incoming&lt;/strong> analog signals into a digital signal&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Modems work on both the Physical and Data Link layers.&lt;/p>
&lt;p>&lt;img alt="Modem" src="https://jinying-che.github.io/images/modem.png">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="access-point">Access Point&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>A Wireless AP relays data &lt;strong>a wired network&lt;/strong> and &lt;strong>wireless devices&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It&amp;rsquo;s basically wireless &lt;strong>hub&lt;/strong> or &lt;strong>bridge&lt;/strong> that&amp;rsquo;s used by wireless device to connect to an existing wired network&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A Wireless AP connects directly to an organization&amp;rsquo;s router where the router is connected directly to a modem, which gives the wireless device access to the internet&lt;/p>
&lt;/li>
&lt;li>
&lt;p>An AP works at the second OSI layer, the Data Link layer&lt;/p>
&lt;p>&lt;img alt="Wireless Access Point" src="https://jinying-che.github.io/images/ap.png">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="reference">Reference:&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://blog.netwrix.com/2019/01/08/network-devices-explained/">https://blog.netwrix.com/2019/01/08/network-devices-explained/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Ethernet_hub">https://en.wikipedia.org/wiki/Ethernet_hub&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/OSI_model">https://en.wikipedia.org/wiki/OSI_model&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=OxiY4yf6GGg">https://www.youtube.com/watch?v=OxiY4yf6GGg&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=Mad4kQ5835Y">https://www.youtube.com/watch?v=Mad4kQ5835Y&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=1z0ULvg_pW8">https://www.youtube.com/watch?v=1z0ULvg_pW8&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Algorithm: How I leetcode</title><link>https://jinying-che.github.io/posts/algorithm/leetcode/</link><pubDate>Sat, 13 Feb 2021 16:31:28 +0800</pubDate><guid>https://jinying-che.github.io/posts/algorithm/leetcode/</guid><description>&lt;p>When do you play with &lt;a href="https://leetcode.com/">leetcode&lt;/a>? Personally, I open it only before the algorithm interview.&lt;/p>
&lt;p>It&amp;rsquo;s wrong actually, the algorithm is not only used in the interview but also really useful in the production, which also make you write the effective code in the daily work. Leetcode helps interview a lot indeed, I sometimes can see some guys who get the Google offer by leetcode, moreover, I believe more algorithm we learned, better engineer we can be.&lt;/p></description><content>&lt;p>When do you play with &lt;a href="https://leetcode.com/">leetcode&lt;/a>? Personally, I open it only before the algorithm interview.&lt;/p>
&lt;p>It&amp;rsquo;s wrong actually, the algorithm is not only used in the interview but also really useful in the production, which also make you write the effective code in the daily work. Leetcode helps interview a lot indeed, I sometimes can see some guys who get the Google offer by leetcode, moreover, I believe more algorithm we learned, better engineer we can be.&lt;/p>
&lt;p>This post is showing how I leetcode, it&amp;rsquo;s only my personal approach, I usually try to understand the one algorithm completely, then try to search by tag and resolve the problems from easy to hard.&lt;/p>
&lt;p>The general steps to resovle a problem:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Abstract the problem&lt;/strong>: Most questions are from some scenario in the real world, try to abstract the problem, transfer the problem to the computer world.&lt;/li>
&lt;li>&lt;strong>Map to the data structure and algorithm&lt;/strong>: Do a brainstorm, map the problem to any data structur and algorithm that you are familiar with. If lucky it&amp;rsquo;s exactly matched, apply it.
&lt;ol>
&lt;li>Don&amp;rsquo;t try to use smartest solution first, it&amp;rsquo;s probably time consuming, for example, maybe Brute Force at first then optimize it step by step.&lt;/li>
&lt;li>No any clue? congratulations! you get space to grow, don&amp;rsquo;t be too sad for the failure of one interview, the better future is waiting for you ahead.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>&lt;strong>Implemente the solution&lt;/strong>: there&amp;rsquo;s a gap between the idea and the code, no magic here, practice more to improve the code skills.&lt;/li>
&lt;li>verify with some test cases and edge cases&lt;/li>
&lt;/ol>
&lt;p>Enjoy the Algorithm, let&amp;rsquo;s leetcode with the popular algorithm list:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/studyplan/top-interview-150/">https://leetcode.com/studyplan/top-interview-150/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="data-structure">Data Structure&lt;/h3>
&lt;h4 id="array">Array&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/first-missing-positive/">41. First Missing Positive&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/first-missing-positive/discuss/1076050/Golang41one-general-way-on-geek-way">discussion&lt;/a>]&lt;/li>
&lt;/ul>
&lt;h4 id="linked-list">Linked List&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/reverse-linked-list/">206. Reverse Linked List&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/reverse-linked-list/discuss/1057045/golang206recursion-is-beautiful">discussion&lt;/a>]&lt;/li>
&lt;/ul>
&lt;h4 id="tree">Tree&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/invert-binary-tree/">226. Invert Binary Tree&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/maximum-depth-of-binary-tree/">104. maximum-depth-of-binary-tree&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;blockquote>
&lt;p>The solutions for following three problems are similiar, which all base on the inorder traversal with stack&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/validate-binary-search-tree/discuss/32112/Learn-one-iterative-inorder-traversal-apply-it-to-multiple-tree-questions-(Java-Solution)">Discussion - Learn one iterative inorder traversal, apply it to multiple tree questions (Java Solution)&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/binary-tree-inorder-traversal/">94. Binary Tree Inorder Traversal&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/validate-binary-search-tree/">98. Validate Binary Search Tree&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/kth-smallest-element-in-a-bst/">230. Kth Smallest Element in a BST&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="heap">Heap&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/top-k-frequent-elements/">347. Top K Frequent Elements&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/top-k-frequent-elements/discuss/1108972/Golang347-Implement-the-Min-Heap-on-my-own">disscussion: Implement the Min Heap on my own&lt;/a>]&lt;/li>
&lt;/ul>
&lt;h4 id="binary">Binary&lt;/h4>
&lt;p>To master binary related problems, understanding the binary operation is the key point: &lt;code>^&lt;/code>, &lt;code>|&lt;/code>, &lt;code>&amp;amp;&lt;/code>, &lt;code>&amp;gt;&amp;gt;&lt;/code> and &lt;code>&amp;lt;&amp;lt;&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/hamming-distance/description/">461. Hamming Distance&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="stack">Stack&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/valid-parentheses/description/">20. Valid Parentheses&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="algorithm">Algorithm&lt;/h3>
&lt;h4 id="recursion">Recursion&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/reverse-linked-list/">206. Reverse Linked List&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/reverse-linked-list/discuss/1057045/golang206recursion-is-beautiful">discussion&lt;/a>]&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/fibonacci-number/">509. Fibonacci Number&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/fibonacci-number/discuss/1057880/golang509four-ways-to-resolve-fibonacci-number">discussion&lt;/a>]&lt;/li>
&lt;/ul>
&lt;h4 id="dynamic-programming">Dynamic Programming&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/fibonacci-number/">509. Fibonacci Number&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/fibonacci-number/discuss/1057880/golang509four-ways-to-resolve-fibonacci-number">discussion&lt;/a>]&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/climbing-stairs/">70. Climbing Stairs&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/house-robber/">198. House Robber&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="binary-search">Binary Search&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://leetcode.com/problems/binary-search/">704. Binary Search&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/binary-search/discuss/1055849/golang704beautiful-code-of-binary-search">discussion&lt;/a>]&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/">34. Find First and Last Position of Element in Sorted Array&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/discuss/1056313/golang34easy-way-to-understand-with-two-binary-search">discussion&lt;/a>]&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://leetcode.com/problems/search-insert-position/">35. Search Insert Position&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="quick-sort">Quick Sort&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/kth-largest-element-in-an-array/">215. Kth Largest Element in an Array&lt;/a> &amp;ndash; &lt;a href="https://leetcode.com/problems/kth-largest-element-in-an-array/discuss/1108891/Golang215two-partition-schema-of-quick-select">[discussion: two partition schema]&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/submissions/detail/465797355/">347. Top K Frequent Elements&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="greedy">Greedy&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/partition-labels/">763. Partition Labels&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended/">1353. Maximum Number of Events That Can Be Attended&lt;/a> &amp;ndash; &lt;a href="https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended/solutions/4066650/1353-python-maximum-number-of-events-that-can-be-attended">[solution]&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="math">Math&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/count-primes/description/">204. Count Primes&lt;/a> &amp;ndash; &lt;a href="https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes">Sieve of Eratosthenes&lt;/a> [https://en.oi-wiki.org/math/sieve/]&lt;/li>
&lt;/ul>
&lt;h3 id="design">Design&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problems/lru-cache/">146. LRU Cache&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/lru-cache/solutions/4113594/python-146-lru-cache/">discussion&lt;/a>]&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/problems/lfu-cache/">460. LFU Cache&lt;/a> &amp;ndash; [&lt;a href="https://leetcode.com/problems/lfu-cache/discuss/1086255/Golang460two-ways-to-resolve-LFU-Cache">discussion&lt;/a>]&lt;/li>
&lt;/ul></content></item><item><title>TCP</title><link>https://jinying-che.github.io/posts/network/tcp/</link><pubDate>Mon, 01 Feb 2021 23:25:26 +0800</pubDate><guid>https://jinying-che.github.io/posts/network/tcp/</guid><description>&lt;p>TCP is really complex protocol and there&amp;rsquo;s a lot of tutorials online to learn TCP, however as time being, it&amp;rsquo;s probably being outdated, same as my post. Hence I would recommend the official &lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-16">RFC 793&lt;/a> as the only true source. Here&amp;rsquo;s a summary of &lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-16">RFC 793&lt;/a>.&lt;/p>
&lt;h3 id="tcp-header">TCP Header&lt;/h3>
&lt;p>&lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-16">TCP Header Format&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code> 0 1 2 3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Source Port | Destination Port |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Sequence Number |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Acknowledgment Number |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Data | |U|A|P|R|S|F| |
| Offset| Reserved |R|C|S|S|Y|I| Window |
| | |G|K|H|T|N|N| |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Checksum | Urgent Pointer |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Options | Padding |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| data |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/code>&lt;/pre>&lt;h3 id="tcp-state-machine">TCP State Machine&lt;/h3>
&lt;p>Be noted that 11 &lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-17">TCP Connection States Diagram&lt;/a> indicating state to state transformation not cliet to server communication.&lt;/p></description><content>&lt;p>TCP is really complex protocol and there&amp;rsquo;s a lot of tutorials online to learn TCP, however as time being, it&amp;rsquo;s probably being outdated, same as my post. Hence I would recommend the official &lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-16">RFC 793&lt;/a> as the only true source. Here&amp;rsquo;s a summary of &lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-16">RFC 793&lt;/a>.&lt;/p>
&lt;h3 id="tcp-header">TCP Header&lt;/h3>
&lt;p>&lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-16">TCP Header Format&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code> 0 1 2 3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Source Port | Destination Port |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Sequence Number |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Acknowledgment Number |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Data | |U|A|P|R|S|F| |
| Offset| Reserved |R|C|S|S|Y|I| Window |
| | |G|K|H|T|N|N| |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Checksum | Urgent Pointer |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Options | Padding |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| data |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/code>&lt;/pre>&lt;h3 id="tcp-state-machine">TCP State Machine&lt;/h3>
&lt;p>Be noted that 11 &lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-17">TCP Connection States Diagram&lt;/a> indicating state to state transformation not cliet to server communication.&lt;/p>
&lt;pre tabindex="0">&lt;code>
+---------+ ---------\ active OPEN
| CLOSED | \ -----------
+---------+&amp;lt;---------\ \ create TCB
| ^ \ \ snd SYN
passive OPEN | | CLOSE \ \
------------ | | ---------- \ \
create TCB | | delete TCB \ \
V | \ \
+---------+ CLOSE | \
| LISTEN | ---------- | |
+---------+ delete TCB | |
rcv SYN | | SEND | |
----------- | | ------- | V
+---------+ snd SYN,ACK / \ snd SYN +---------+
| |&amp;lt;----------------- ------------------&amp;gt;| |
| SYN | rcv SYN | SYN |
| RCVD |&amp;lt;-----------------------------------------------| SENT |
| | snd ACK | |
| |------------------ -------------------| |
+---------+ rcv ACK of SYN \ / rcv SYN,ACK +---------+
| -------------- | | -----------
| x | | snd ACK
| V V
| CLOSE +---------+
| ------- | ESTAB |
| snd FIN +---------+
| CLOSE | | rcv FIN
V ------- | | -------
+---------+ snd FIN / \ snd ACK +---------+
| FIN |&amp;lt;----------------- ------------------&amp;gt;| CLOSE |
| WAIT-1 |------------------ | WAIT |
+---------+ rcv FIN \ +---------+
| rcv ACK of FIN ------- | CLOSE |
| -------------- snd ACK | ------- |
V x V snd FIN V
+---------+ +---------+ +---------+
|FINWAIT-2| | CLOSING | | LAST-ACK|
+---------+ +---------+ +---------+
| rcv ACK of FIN | rcv ACK of FIN |
| rcv FIN -------------- | Timeout=2MSL -------------- |
| ------- x V ------------ x V
\ snd ACK +---------+delete TCB +---------+
------------------------&amp;gt;|TIME WAIT|------------------&amp;gt;| CLOSED |
+---------+ +---------+
&lt;/code>&lt;/pre>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Head&lt;/th>
&lt;th>Meaning&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>LISTEN&lt;/td>
&lt;td>represents waiting for a connection request from any remote TCP and port&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SYN-SENT&lt;/td>
&lt;td>represents waiting for a matching connection request after having sent a connection request&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SYN-RECEIVED&lt;/td>
&lt;td>represents waiting for a confirming connection request acknowledgment after having both received and sent a connection request&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ESTABLISHED&lt;/td>
&lt;td>represents an open connection, data received can be delivered to the user. The normal state for the data transfer phase of the connection&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FIN-WAIT-1&lt;/td>
&lt;td>represents waiting for a connection termination request from the remote TCP, or an acknowledgment of the connection termination request previously sent&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FIN-WAIT-2&lt;/td>
&lt;td>represents waiting for a connection termination request from the &lt;em>remote&lt;/em> TCP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CLOSE-WAIT&lt;/td>
&lt;td>represents waiting for a connection termination request from the &lt;em>local&lt;/em> user&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CLOSING&lt;/td>
&lt;td>represents waiting for a connection termination request acknowledgment from the remote TCP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>LAST-ACK&lt;/td>
&lt;td>represents waiting for an acknowledgment of the connection termination request previously sent to the remote TCP (which includes an acknowledgment of its connection termination request)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TIME-WAIT&lt;/td>
&lt;td>represents waiting for enough time to pass to be sure the remote TCP received the acknowledgment of its connection termination request&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CLOSED&lt;/td>
&lt;td>represents no connection state at all&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Here may be a more readable diagram.
&lt;img alt="tcp state Machine" src="https://jinying-che.github.io/images/tcpfsm.png">&lt;/p>
&lt;h4 id="tcp-open-three-way-handshake">TCP Open: Three-Way Handshake&lt;/h4>
&lt;p>&lt;img alt="tcp open" src="https://jinying-che.github.io/images/tcp_open.svg">&lt;/p>
&lt;p>&lt;img alt="tcp open" src="https://jinying-che.github.io/images/tcp_open_bytebytego.png">&lt;/p>
&lt;h4 id="tcp-close-four-way-handshake">TCP Close: Four-Way Handshake&lt;/h4>
&lt;p>&lt;img alt="tcp close" src="https://jinying-che.github.io/images/tcp_close_bytebytego.png">&lt;/p>
&lt;h3 id="reference">Reference&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="http://www.tcpipguide.com/free/t_TCPConnectionEstablishmentProcessTheThreeWayHandsh-3.htm">http://www.tcpipguide.com/free/t_TCPConnectionEstablishmentProcessTheThreeWayHandsh-3.htm&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.tcpipguide.com/free/t_TCPConnectionTermination-2.htm">http://www.tcpipguide.com/free/t_TCPConnectionTermination-2.htm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-16">RFC 793&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://draveness.me/whys-the-design-tcp-three-way-handshake/">https://draveness.me/whys-the-design-tcp-three-way-handshake/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.bytebytego.com/p/everything-you-always-wanted-to-know">https://blog.bytebytego.com/p/everything-you-always-wanted-to-know&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.alibabacloud.com/blog/tcp-syn-queue-and-accept-queue-overflow-explained_599203">Alibaba: TCP SYN Queue and Accept Queue Overflow Explained&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Setup Universal Ctags for Mac</title><link>https://jinying-che.github.io/posts/c/ctags/</link><pubDate>Sat, 23 Jan 2021 15:16:29 +0800</pubDate><guid>https://jinying-che.github.io/posts/c/ctags/</guid><description>&lt;p>At the Beginning of this year, I&amp;rsquo;m going to start reading &lt;em>Computer System A Programmer's Perspective&lt;/em>, this whole book introduces the different aspects of computer system basing on C language, and there&amp;rsquo;s also plenty of C demos provided in the &lt;a href="http://csapp.cs.cmu.edu/3e/code.html">web&lt;/a>, to navigate the code, I try to use &lt;strong>ctags&lt;/strong>.&lt;/p></description><content>&lt;p>At the Beginning of this year, I&amp;rsquo;m going to start reading &lt;em>Computer System A Programmer's Perspective&lt;/em>, this whole book introduces the different aspects of computer system basing on C language, and there&amp;rsquo;s also plenty of C demos provided in the &lt;a href="http://csapp.cs.cmu.edu/3e/code.html">web&lt;/a>, to navigate the code, I try to use &lt;strong>ctags&lt;/strong>.&lt;/p>
&lt;h3 id="what-is-universal-ctags">What is Universal Ctags?&lt;/h3>
&lt;p>&lt;a href="https://ctags.io/">Universal Ctags&lt;/a> (abbreviated as u-ctags) is a maintained implementation of ctags. ctags generates an index (or tag) file of language objects found in source files for programming languages. This index makes it easy for text editors and other tools to locate the indexed items.&lt;/p>
&lt;h3 id="install-in-mac">Install in Mac&lt;/h3>
&lt;p>&lt;strong>brew tap&lt;/strong>: A &lt;a href="https://docs.brew.sh/Taps">tap&lt;/a> is Homebrew-speak for a Git repository containing extra formulae.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>brew tap universal-ctags/universal-ctags
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brew install --HEAD universal-ctags
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configure-vimrc">Configure .vimrc&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#search the .tags in the current directory, will keep searching the upper directory if not found&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set tags&lt;span style="color:#f92672">=&lt;/span>./.tags;,.tags
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="setup-alias-for-ctags">Setup alias for ctags&lt;/h3>
&lt;p>Because there is already a &lt;strong>ctags&lt;/strong> command in Mac, which is &lt;strong>/usr/bin/ctags&lt;/strong>, we need to create an alias of &lt;code>ctags&lt;/code> for overwriting.&lt;/p>
&lt;p>Add this in &lt;strong>.zshrc&lt;/strong> (suppose to use &lt;strong>zsh&lt;/strong>)&lt;/p>
&lt;ul>
&lt;li>&lt;code>alias ctags=&amp;quot;/usr/local/bin/ctags&amp;quot;&lt;/code>
&lt;blockquote>
&lt;p>&lt;strong>&lt;code>which ctags&lt;/code>&lt;/strong> to verify&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h3 id="generate-tag-recursively">Generate tag recursively&lt;/h3>
&lt;p>In the root of the project:&lt;/p>
&lt;ul>
&lt;li>&lt;code>ctags -f .tags -R .&lt;/code>
&lt;ul>
&lt;li>&lt;strong>-f .tags&lt;/strong> indicates that the output file is &lt;strong>.tags&lt;/strong>&lt;/li>
&lt;li>&lt;strong>-R&lt;/strong> means &lt;strong>--recurse&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></content></item><item><title>How to profile Golang Program</title><link>https://jinying-che.github.io/posts/go/diagnostics/</link><pubDate>Mon, 30 Nov 2020 08:35:51 +0800</pubDate><guid>https://jinying-che.github.io/posts/go/diagnostics/</guid><description>&lt;p>First of all, this document is in progress and will keep updated.&lt;/p>
&lt;p>Diagnostic by the http call is usually a convinient way in pratice. What we need to do is only two steps before starting the program:&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;code>import _ &amp;quot;net/http/pprof&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>http.ListenAndServe(&amp;quot;the address that defined in advance&amp;quot;, better use privaty ServerMux instead of the default one)&lt;/code>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="profile">Profile&lt;/h2>
&lt;p>The port 6060 is an example that defined for the http listening. The default time is 30s that go pprof will collect the samples which used to profile without the specificatoin.(I have not find the way to specify btw)&lt;/p></description><content>&lt;p>First of all, this document is in progress and will keep updated.&lt;/p>
&lt;p>Diagnostic by the http call is usually a convinient way in pratice. What we need to do is only two steps before starting the program:&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;code>import _ &amp;quot;net/http/pprof&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>http.ListenAndServe(&amp;quot;the address that defined in advance&amp;quot;, better use privaty ServerMux instead of the default one)&lt;/code>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="profile">Profile&lt;/h2>
&lt;p>The port 6060 is an example that defined for the http listening. The default time is 30s that go pprof will collect the samples which used to profile without the specificatoin.(I have not find the way to specify btw)&lt;/p>
&lt;ul>
&lt;li>http://localhost:6060/debug/pprof/goroutine&lt;/li>
&lt;li>http://localhost:6060/debug/pprof/heap&lt;/li>
&lt;li>http://localhost:6060/debug/pprof/threadcreate&lt;/li>
&lt;li>http://localhost:6060/debug/pprof/block&lt;/li>
&lt;li>http://localhost:6060/debug/pprof/mutex&lt;/li>
&lt;li>http://localhost:6060/debug/pprof/profile&lt;/li>
&lt;/ul>
&lt;p>Here is a demo of the profilling.&lt;/p>
&lt;ul>
&lt;li>trigger:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>curl localhost:6060/debug/pprof/profile &amp;gt; profile.pprof&lt;/code> (the filename can arbitrary)&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>analyse:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>go tool pprof -http :6060 ./profile.pprof&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h2 id="trace">Trace&lt;/h2>
&lt;ul>
&lt;li>http://localhost:6060/debug/pprof/trace&lt;/li>
&lt;/ul>
&lt;p>Here is a demo of the trace.&lt;/p>
&lt;ul>
&lt;li>trigger:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>curl localhost:6060/debug/pprof/trace &amp;gt; profile.trace&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>analyse:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>go tool trace -http :6060 ./profile.trace&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="ref">Ref&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/google/pprof">https://github.com/google/pprof&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://golang.org/doc/diagnostics.html">https://golang.org/doc/diagnostics.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://golang.org/pkg/runtime/pprof/">https://golang.org/pkg/runtime/pprof/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jvns.ca/blog/2017/09/24/profiling-go-with-pprof/">https://jvns.ca/blog/2017/09/24/profiling-go-with-pprof/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>How does golang implement the Rate Limiter</title><link>https://jinying-che.github.io/posts/go/ratelimiter/</link><pubDate>Fri, 20 Nov 2020 12:04:09 +0800</pubDate><guid>https://jinying-che.github.io/posts/go/ratelimiter/</guid><description>&lt;h2 id="core-concept">Core concept&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>burst&lt;/strong>: the size of the bucket which is possible more than the limit&lt;/li>
&lt;li>&lt;strong>token&lt;/strong>: refer to &lt;a href="https://en.wikipedia.org/wiki/Token_bucket">https://en.wikipedia.org/wiki/Token_bucket&lt;/a>&lt;/li>
&lt;li>&lt;strong>limit&lt;/strong>: the number of tokens that is obtained per second&lt;/li>
&lt;/ul>
&lt;h2 id="core-function">Core function&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// reserveN is a helper method for AllowN, ReserveN, and WaitN.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// maxFutureReserve specifies the maximum reservation wait duration allowed.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// reserveN returns Reservation, not *Reservation, to avoid allocation in AllowN and WaitN.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">lim&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Limiter&lt;/span>) &lt;span style="color:#a6e22e">reserveN&lt;/span>(&lt;span style="color:#a6e22e">now&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Time&lt;/span>, &lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>, &lt;span style="color:#a6e22e">maxFutureReserve&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Duration&lt;/span>) &lt;span style="color:#a6e22e">Reservation&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">mu&lt;/span>.&lt;span style="color:#a6e22e">Lock&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">limit&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#a6e22e">Inf&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">mu&lt;/span>.&lt;span style="color:#a6e22e">Unlock&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">Reservation&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ok&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>: &lt;span style="color:#a6e22e">lim&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">tokens&lt;/span>: &lt;span style="color:#a6e22e">n&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">timeToAct&lt;/span>: &lt;span style="color:#a6e22e">now&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">now&lt;/span>, &lt;span style="color:#a6e22e">last&lt;/span>, &lt;span style="color:#a6e22e">tokens&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">advance&lt;/span>(&lt;span style="color:#a6e22e">now&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Calculate the remaining number of tokens resulting from the request.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">tokens&lt;/span> &lt;span style="color:#f92672">-=&lt;/span> float64(&lt;span style="color:#a6e22e">n&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Calculate the wait duration
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">waitDuration&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Duration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">tokens&lt;/span> &amp;lt; &lt;span style="color:#ae81ff">0&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">waitDuration&lt;/span> = &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">limit&lt;/span>.&lt;span style="color:#a6e22e">durationFromTokens&lt;/span>(&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">tokens&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Decide result
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">ok&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">burst&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a6e22e">waitDuration&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#a6e22e">maxFutureReserve&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Prepare reservation
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">Reservation&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ok&lt;/span>: &lt;span style="color:#a6e22e">ok&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>: &lt;span style="color:#a6e22e">lim&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">limit&lt;/span>: &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">limit&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">ok&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">tokens&lt;/span> = &lt;span style="color:#a6e22e">n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">timeToAct&lt;/span> = &lt;span style="color:#a6e22e">now&lt;/span>.&lt;span style="color:#a6e22e">Add&lt;/span>(&lt;span style="color:#a6e22e">waitDuration&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Update state
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">ok&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">last&lt;/span> = &lt;span style="color:#a6e22e">now&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">tokens&lt;/span> = &lt;span style="color:#a6e22e">tokens&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">lastEvent&lt;/span> = &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">timeToAct&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">last&lt;/span> = &lt;span style="color:#a6e22e">last&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">mu&lt;/span>.&lt;span style="color:#a6e22e">Unlock&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">r&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description><content>&lt;h2 id="core-concept">Core concept&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>burst&lt;/strong>: the size of the bucket which is possible more than the limit&lt;/li>
&lt;li>&lt;strong>token&lt;/strong>: refer to &lt;a href="https://en.wikipedia.org/wiki/Token_bucket">https://en.wikipedia.org/wiki/Token_bucket&lt;/a>&lt;/li>
&lt;li>&lt;strong>limit&lt;/strong>: the number of tokens that is obtained per second&lt;/li>
&lt;/ul>
&lt;h2 id="core-function">Core function&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// reserveN is a helper method for AllowN, ReserveN, and WaitN.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// maxFutureReserve specifies the maximum reservation wait duration allowed.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// reserveN returns Reservation, not *Reservation, to avoid allocation in AllowN and WaitN.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">lim&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Limiter&lt;/span>) &lt;span style="color:#a6e22e">reserveN&lt;/span>(&lt;span style="color:#a6e22e">now&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Time&lt;/span>, &lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>, &lt;span style="color:#a6e22e">maxFutureReserve&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Duration&lt;/span>) &lt;span style="color:#a6e22e">Reservation&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">mu&lt;/span>.&lt;span style="color:#a6e22e">Lock&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">limit&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#a6e22e">Inf&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">mu&lt;/span>.&lt;span style="color:#a6e22e">Unlock&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">Reservation&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ok&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>: &lt;span style="color:#a6e22e">lim&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">tokens&lt;/span>: &lt;span style="color:#a6e22e">n&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">timeToAct&lt;/span>: &lt;span style="color:#a6e22e">now&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">now&lt;/span>, &lt;span style="color:#a6e22e">last&lt;/span>, &lt;span style="color:#a6e22e">tokens&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">advance&lt;/span>(&lt;span style="color:#a6e22e">now&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Calculate the remaining number of tokens resulting from the request.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">tokens&lt;/span> &lt;span style="color:#f92672">-=&lt;/span> float64(&lt;span style="color:#a6e22e">n&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Calculate the wait duration
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">waitDuration&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Duration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">tokens&lt;/span> &amp;lt; &lt;span style="color:#ae81ff">0&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">waitDuration&lt;/span> = &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">limit&lt;/span>.&lt;span style="color:#a6e22e">durationFromTokens&lt;/span>(&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">tokens&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Decide result
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">ok&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">burst&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a6e22e">waitDuration&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#a6e22e">maxFutureReserve&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Prepare reservation
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">Reservation&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ok&lt;/span>: &lt;span style="color:#a6e22e">ok&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>: &lt;span style="color:#a6e22e">lim&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">limit&lt;/span>: &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">limit&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">ok&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">tokens&lt;/span> = &lt;span style="color:#a6e22e">n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">timeToAct&lt;/span> = &lt;span style="color:#a6e22e">now&lt;/span>.&lt;span style="color:#a6e22e">Add&lt;/span>(&lt;span style="color:#a6e22e">waitDuration&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Update state
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">ok&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">last&lt;/span> = &lt;span style="color:#a6e22e">now&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">tokens&lt;/span> = &lt;span style="color:#a6e22e">tokens&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">lastEvent&lt;/span> = &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">timeToAct&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">last&lt;/span> = &lt;span style="color:#a6e22e">last&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lim&lt;/span>.&lt;span style="color:#a6e22e">mu&lt;/span>.&lt;span style="color:#a6e22e">Unlock&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">r&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Redis</title><link>https://jinying-che.github.io/posts/db/redis/</link><pubDate>Mon, 16 Sep 2019 17:37:10 +0800</pubDate><guid>https://jinying-che.github.io/posts/db/redis/</guid><description>&lt;h2 id="data-structure">Data Structure&lt;/h2>
&lt;p>&lt;img alt="redis data structure" src="https://jinying-che.github.io/images/redis_data_structure.png">&lt;/p>
&lt;h2 id="redis配置">redis配置&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>redis初始并不设置所用内存大小，默认会使用全部物理内存，但有&lt;code>maxmemory&lt;/code>选项可以配置。&lt;/p>
&lt;pre tabindex="0">&lt;code># In short... if you have slaves attached it is suggested that you set a lower
# limit for maxmemory so that there is some free RAM on the system for slave
# output buffers (but this is not needed if the policy is &amp;#39;noeviction&amp;#39;).
#
# maxmemory &amp;lt;bytes&amp;gt;
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;h2 id="redis-命令">Redis 命令&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>###zrem&lt;/p>
&lt;p>这个命令的返回值很特别：&lt;/p>
&lt;ol>
&lt;li>zset中存在的元素被删除，则返回1&lt;/li>
&lt;li>zset中不存在的元素、不存在的zset的key，返回0&lt;/li>
&lt;li>key存在，但不是zset类型，报错&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;p>##LUA&lt;/p>
&lt;h2 id="碎片率">碎片率&lt;/h2>
&lt;blockquote>
&lt;pre>&lt;code>出现高内存碎片问题的情况：大量的更新操作，比如append、setrange；大量的过期键删除，释放的空间无法得到有效利用
解决办法：数据对齐，安全重启（高可用/主从切换）。
&lt;/code>&lt;/pre>
&lt;/blockquote>
&lt;h2 id="数据结构">数据结构&lt;/h2>
&lt;h4 id="列表list">列表（list）&lt;/h4>
&lt;ul>
&lt;li>压缩列表
&lt;ul>
&lt;li>每个数据节点会记录：前一个节点的长度（previous_entry_length）、编码（encoding）、节点的值（content）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>双向循环链表
&lt;ul>
&lt;li>会有单独的&lt;strong>list&lt;/strong>的对象，来记录链表的&lt;strong>头、尾、长度&lt;/strong>等信息&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="字典hash">字典（hash）&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>压缩列表&lt;/p></description><content>&lt;h2 id="data-structure">Data Structure&lt;/h2>
&lt;p>&lt;img alt="redis data structure" src="https://jinying-che.github.io/images/redis_data_structure.png">&lt;/p>
&lt;h2 id="redis配置">redis配置&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>redis初始并不设置所用内存大小，默认会使用全部物理内存，但有&lt;code>maxmemory&lt;/code>选项可以配置。&lt;/p>
&lt;pre tabindex="0">&lt;code># In short... if you have slaves attached it is suggested that you set a lower
# limit for maxmemory so that there is some free RAM on the system for slave
# output buffers (but this is not needed if the policy is &amp;#39;noeviction&amp;#39;).
#
# maxmemory &amp;lt;bytes&amp;gt;
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;h2 id="redis-命令">Redis 命令&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>###zrem&lt;/p>
&lt;p>这个命令的返回值很特别：&lt;/p>
&lt;ol>
&lt;li>zset中存在的元素被删除，则返回1&lt;/li>
&lt;li>zset中不存在的元素、不存在的zset的key，返回0&lt;/li>
&lt;li>key存在，但不是zset类型，报错&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;p>##LUA&lt;/p>
&lt;h2 id="碎片率">碎片率&lt;/h2>
&lt;blockquote>
&lt;pre>&lt;code>出现高内存碎片问题的情况：大量的更新操作，比如append、setrange；大量的过期键删除，释放的空间无法得到有效利用
解决办法：数据对齐，安全重启（高可用/主从切换）。
&lt;/code>&lt;/pre>
&lt;/blockquote>
&lt;h2 id="数据结构">数据结构&lt;/h2>
&lt;h4 id="列表list">列表（list）&lt;/h4>
&lt;ul>
&lt;li>压缩列表
&lt;ul>
&lt;li>每个数据节点会记录：前一个节点的长度（previous_entry_length）、编码（encoding）、节点的值（content）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>双向循环链表
&lt;ul>
&lt;li>会有单独的&lt;strong>list&lt;/strong>的对象，来记录链表的&lt;strong>头、尾、长度&lt;/strong>等信息&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="字典hash">字典（hash）&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>压缩列表&lt;/p>
&lt;ul>
&lt;li>将健值对依次放入压缩列表，查询复杂度为0(n)，需要遍历&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>散列表&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>解决冲突：&lt;strong>通过链表法解决，每个数据节点都有&lt;/strong>next&lt;/strong>指针，冲突的节点会从头部插入&lt;/p>
&lt;p>&lt;strong>rehash期间:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>字典的删除、查找、更新，会在两个哈希表上进行，插入操作只会在新表上进行&lt;/li>
&lt;li>渐进式rehash会维护一个游标（rehashidx），每次有请求时，会按顺序进行rehash，直到将旧的hash表重新映射到新的hash表&lt;/li>
&lt;li>负载因子：在进行&lt;strong>BGSAVE&lt;/strong>或者&lt;strong>BGREWRITEAOF&lt;/strong>，会fork子进程来后台处理，大多数操作系统都是通过写时复制的策略，即子进程在读操作时，会共享而不复制父进程的内存，只有在写时，才会复制，所以在此期间会尽量控制写操作，减少内存的复制，因此负载因子会升高&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;p>####集合 (set)&lt;/p>
&lt;ul>
&lt;li>有序数组&lt;/li>
&lt;li>散列表&lt;/li>
&lt;/ul>
&lt;h4 id="有序集合-sorted-set">有序集合 (sorted set)&lt;/h4>
&lt;ul>
&lt;li>压缩列表&lt;/li>
&lt;li>同时使用跳跃表和字典
&lt;ul>
&lt;li>查询一组数据(zrange)利用跳跃表&lt;/li>
&lt;li>查询单个数据用字典&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="事务">事务&lt;/h2>
&lt;ul>
&lt;li>redis的事务，是通过客户端的事务状态、服务端的队列，简单封装redis命令实现的&lt;/li>
&lt;li>事务中的命令要不就全部执行，或者都不执行
&lt;ul>
&lt;li>当入队的命令出错时，事务取消，都不执行&lt;/li>
&lt;li>当部分命令失败时，继续执行
&lt;ul>
&lt;li>redis不提供回滚机制&lt;/li>
&lt;li>部分出错的命令结果会返回给客户端，客户端会根据错误情况进行处理，保证业务逻辑正确&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="rdb">RDB&lt;/h2>
&lt;h2 id="aof">AOF&lt;/h2>
&lt;h2 id="referrence">Referrence&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.bytebytego.com/p/why-is-redis-so-fast">https://blog.bytebytego.com/p/why-is-redis-so-fast&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>HTTPS</title><link>https://jinying-che.github.io/posts/network/https/</link><pubDate>Mon, 10 Jun 2019 11:19:47 +0800</pubDate><guid>https://jinying-che.github.io/posts/network/https/</guid><description>&lt;h2 id="tldr">TL;DR&lt;/h2>
&lt;p>&lt;strong>HTTPS = HTTP Over TLS&lt;/strong>, when we talk about HTTPS, we actually talk about the TLS more specifically.&lt;/p>
&lt;h2 id="handshake">Handshake&lt;/h2>
&lt;p>The exact steps within a TLS handshake will vary depending upon the kind of key exchange algorithm used and the cipher suites supported by both sides. The RSA key exchange algorithm, while now considered not secure, was used in versions of TLS before 1.3.&lt;/p>
&lt;h4 id="handshake-tls-12">Handshake TLS 1.2&lt;/h4>
&lt;p>Basically it&amp;rsquo;s a &lt;em>3-Way TCP handshake&lt;/em> + &lt;em>4 Way TLS handshake&lt;/em>.
&lt;img alt="https handshake" src="https://jinying-che.github.io/images/https_handshake.png">&lt;/p></description><content>&lt;h2 id="tldr">TL;DR&lt;/h2>
&lt;p>&lt;strong>HTTPS = HTTP Over TLS&lt;/strong>, when we talk about HTTPS, we actually talk about the TLS more specifically.&lt;/p>
&lt;h2 id="handshake">Handshake&lt;/h2>
&lt;p>The exact steps within a TLS handshake will vary depending upon the kind of key exchange algorithm used and the cipher suites supported by both sides. The RSA key exchange algorithm, while now considered not secure, was used in versions of TLS before 1.3.&lt;/p>
&lt;h4 id="handshake-tls-12">Handshake TLS 1.2&lt;/h4>
&lt;p>Basically it&amp;rsquo;s a &lt;em>3-Way TCP handshake&lt;/em> + &lt;em>4 Way TLS handshake&lt;/em>.
&lt;img alt="https handshake" src="https://jinying-che.github.io/images/https_handshake.png">&lt;/p>
&lt;pre tabindex="0">&lt;code> Client Server
-------------------- TCP 3-Way Handshke -----------------
SYNC
SYNC + ACK
ACK
-------------------- TLS 4-Way Handshake ---------------
ClientHello --------&amp;gt;
ServerHello
Certificate*
ServerKeyExchange*
CertificateRequest*
&amp;lt;-------- ServerHelloDone
Certificate*
ClientKeyExchange
CertificateVerify*
[ChangeCipherSpec]
Finished --------&amp;gt;
[ChangeCipherSpec]
&amp;lt;-------- Finished
Application Data &amp;lt;-------&amp;gt; Application Data
&lt;/code>&lt;/pre>&lt;p>Understand the classic handshake in 4 general steps:&lt;/p>
&lt;ol>
&lt;li>TCP Handshake&lt;/li>
&lt;li>Certificate Check (&lt;strong>TCP&lt;/strong>: client says hello, server says hello)&lt;/li>
&lt;li>Key Exchange (&lt;strong>Asymmetric Encryption&lt;/strong>)
Basically there&amp;rsquo;re two way for key exchange, the key point is how to generate the &lt;strong>premaster secret&lt;/strong> which is used to generate master secret which is used for data transmission eventually:
&lt;ol>
&lt;li>client generates the premaster secret key, encrypts by the public key, send to server (RSA algorithm)&lt;/li>
&lt;li>client and server generate the same premaster secret seperately using client and server params (ECDHE algorithm )&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Data Transmission (&lt;strong>Symmetric Encryption&lt;/strong>)&lt;/li>
&lt;/ol>
&lt;h4 id="handshake-tls-13">Handshake TLS 1.3&lt;/h4>
&lt;p>TBD&lt;/p>
&lt;h2 id="man-in-the-middle-attacker">Man-In-The-Middle Attacker&lt;/h2>
&lt;p>Assume there&amp;rsquo;s an attacker who can detect the info during the TLS handshake, trying to defend the attacker is a better way to understand the HTTPS design more throughly.&lt;/p>
&lt;ol>
&lt;li>Attacker is disguised as server? Use &lt;strong>Certificate Authority (CA)&lt;/strong> to validate the server&lt;/li>
&lt;li>Attacker steal the transmission key (master secret)? Use &lt;strong>Asymmetric Encryption (one way encryption)&lt;/strong>, even if attacker get the public key, still he&amp;rsquo;s not able to know what client sends to server (e.g. premaster secret) as only the private key can decrypt&lt;/li>
&lt;li>Attacker get the leaked private key? Use ECDHE algoritm to generate the premaster secret instead of passing from client to server.&lt;/li>
&lt;/ol>
&lt;h2 id="ssl-vs-tls">SSL vs TLS&lt;/h2>
&lt;p>SSL(Secure Sockets Layer) was the original security protocol developed for HTTP. SSL was replaced by TLS(Transport Layer Security) some time ago. SSL handshakes are now called TLS handshakes, although the &amp;ldquo;SSL&amp;rdquo; name is still in wide use.&lt;/p>
&lt;blockquote>
&lt;p>SSL v3.1 = TLS v1.0&lt;/p>
&lt;/blockquote>
&lt;h2 id="referrence">Referrence&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.bytebytego.com/p/how-does-https-work-episode-6">https://blog.bytebytego.com/p/how-does-https-work-episode-6&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://datatracker.ietf.org/doc/html/rfc5246">RFC5246: TLS1.2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://datatracker.ietf.org/doc/html/rfc8446">RFC8446: TLS1.3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://datatracker.ietf.org/doc/html/rfc2818">RFC2818: HTTPS&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>MySQL Index</title><link>https://jinying-che.github.io/posts/db/mysql_index/</link><pubDate>Wed, 05 Jun 2019 11:48:53 +0800</pubDate><guid>https://jinying-che.github.io/posts/db/mysql_index/</guid><description>&lt;p>This post is based on MySQL &lt;strong>InnoDB&lt;/strong> Storage Engine.&lt;/p>
&lt;h2 id="type">Type&lt;/h2>
&lt;h4 id="1-cluster-index">1. Cluster Index&lt;/h4>
&lt;p>Each InnoDB table has a special index called the &lt;strong>clustered index&lt;/strong> that stores row data. Typically, the clustered index is synonymous with the &lt;strong>primary key&lt;/strong>.&lt;/p>
&lt;h4 id="2-secondery-index">2. Secondery Index&lt;/h4>
&lt;p>In InnoDB, each record in a &lt;strong>secondary index&lt;/strong> contains the primary key columns for the row, as well as the columns specified for the secondary index. InnoDB uses this primary key value to search for the row in the clustered index.&lt;/p></description><content>&lt;p>This post is based on MySQL &lt;strong>InnoDB&lt;/strong> Storage Engine.&lt;/p>
&lt;h2 id="type">Type&lt;/h2>
&lt;h4 id="1-cluster-index">1. Cluster Index&lt;/h4>
&lt;p>Each InnoDB table has a special index called the &lt;strong>clustered index&lt;/strong> that stores row data. Typically, the clustered index is synonymous with the &lt;strong>primary key&lt;/strong>.&lt;/p>
&lt;h4 id="2-secondery-index">2. Secondery Index&lt;/h4>
&lt;p>In InnoDB, each record in a &lt;strong>secondary index&lt;/strong> contains the primary key columns for the row, as well as the columns specified for the secondary index. InnoDB uses this primary key value to search for the row in the clustered index.&lt;/p>
&lt;p>Typical Quering Flow: select with index &amp;ndash;&amp;gt; secondary index -&amp;gt; primary index -&amp;gt; data row&lt;/p>
&lt;h2 id="data-structure">Data Structure&lt;/h2>
&lt;p>The index data is organized in &lt;strong>B+ Tree&lt;/strong> which is common data structure widely used in the relation databases. B+ Tree is upgrading from B Tree, it eliminates the drawback B-tree used for indexing by storing data pointers only at the leaf nodes of the tree.&lt;/p>
&lt;h3 id="b-tree-vs-b-tree">B+ Tree vs B Tree&lt;/h3>
&lt;p>&lt;img alt="b tree vs b+ tree" src="https://jinying-che.github.io/images/btree.svg">&lt;/p>
&lt;h5 id="similarity">Similarity&lt;/h5>
&lt;ol>
&lt;li>Both B Tree and B+ Tree are balanced tree. (Efficiency for quering, lower the tree height, less the disk access)&lt;/li>
&lt;li>All leaf nodes are at the same level.&lt;/li>
&lt;/ol>
&lt;h5 id="difference">Difference&lt;/h5>
&lt;ol>
&lt;li>&lt;strong>B Tree&lt;/strong> stores the data pointer (pointing to the cluster index) in all nodes, whereas, &lt;strong>B+ Tree&lt;/strong> only stores in leaf nodes. (less space cost means internal node is able to store more index, hence tree is lower and more efficient)&lt;/li>
&lt;li>All leaf nodes of &lt;strong>B+ Tree&lt;/strong> are linked together in a linked list. This makes &lt;strong>range queries&lt;/strong> efficient.&lt;/li>
&lt;li>In a &lt;strong>B+ Tree&lt;/strong>, every key appears twice, once in the internal nodes and once in the leaf nodes, whereas, in a &lt;strong>B Tree&lt;/strong>, it&amp;rsquo;s once.&lt;/li>
&lt;/ol>
&lt;h2 id="leftmost-prefix-index">Leftmost Prefix Index&lt;/h2>
&lt;p>If the table has a multiple-column index, any leftmost prefix of the index can be used by the optimizer to look up rows.&lt;/p>
&lt;h2 id="referrence">Referrence&lt;/h2>
&lt;ul>
&lt;li>MySQL 8.0 Reference Manual:
&lt;ul>
&lt;li>&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/mysql-indexes.html">https://dev.mysql.com/doc/refman/8.0/en/mysql-indexes.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-index-types.html">https://dev.mysql.com/doc/refman/8.0/en/innodb-index-types.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/sorted-index-builds.html">https://dev.mysql.com/doc/refman/8.0/en/sorted-index-builds.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></content></item><item><title>HTTP</title><link>https://jinying-che.github.io/posts/network/http/</link><pubDate>Wed, 10 Oct 2018 11:19:45 +0800</pubDate><guid>https://jinying-che.github.io/posts/network/http/</guid><description>&lt;blockquote>
&lt;p>HTTP位于网络的应用层，使用TCP/IP协议进行传输&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>TCP连接
&lt;ul>
&lt;li>HTTP/1.0：通过非标准字段&lt;code>Connection: keep-alive&lt;/code>保持TCP连接&lt;/li>
&lt;li>HTTP/1.1：允许TCP复用，但所有数据通信都是按次序的，请求要一个一个处理&lt;/li>
&lt;li>HTTP/2：&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="http09">HTTP/0.9&lt;/h2>
&lt;ul>
&lt;li>客户端请求，服务器回复完毕，TCP连接即关闭&lt;/li>
&lt;li>只有一个命令：&lt;code>GET&lt;/code>&lt;/li>
&lt;li>服务器只能回应HTML格式的字符串&lt;/li>
&lt;/ul>
&lt;h2 id="http10">HTTP/1.0&lt;/h2>
&lt;ul>
&lt;li>加入&lt;code>POST&lt;/code>、&lt;code>HEAD&lt;/code>命令&lt;/li>
&lt;li>协议分为头部和数据部，头部字段如：&lt;code>Content-Type&lt;/code>、&lt;code>Content-Encoding&lt;/code>等&lt;/li>
&lt;li>为了保持TCP的复用，引入头部字段：&lt;code>Connection: keep-alive&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="http11">HTTP/1.1&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>TCP默认为持久连接，由客户端和服务端主动关闭&lt;/p>
&lt;/li>
&lt;li>
&lt;p>引入管道机制，向TCP连接发送多个请求（而不用等待上一个请求处理之后，再发送）&lt;/p>
&lt;ul>
&lt;li>服务端可以区分多个请求的基础：&lt;code>Content-Length&lt;/code>字段，即知道每个请求的长度&lt;/li>
&lt;li>在1.0版中，&lt;code>Content-Length&lt;/code>字段不是必需的，因为浏览器发现服务器关闭了TCP连接，就表明收到的数据包已经全了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>引入流模式&lt;/p>
&lt;blockquote>
&lt;p>对于一些很耗时的动态操作来说，这意味着，服务器要等到所有操作完成，才能发送数据，显然这样的效率不高。更好的处理方法是，产生一块数据，就发送一块，采用&amp;quot;流模式&amp;quot;（stream）取代&amp;quot;缓存模式&amp;quot;（buffer）。&lt;/p>
&lt;p>因此，1.1版规定可以不使用&lt;code>Content-Length&lt;/code>字段，而使用&lt;a href="https://zh.wikipedia.org/wiki/%E5%88%86%E5%9D%97%E4%BC%A0%E8%BE%93%E7%BC%96%E7%A0%81">&amp;ldquo;分块传输编码&amp;rdquo;&lt;/a>（chunked transfer encoding）。只要请求或回应的头信息有&lt;code>Transfer-Encoding&lt;/code>字段，就表明回应将由数量未定的数据块组成。&lt;/p>
&lt;p>&lt;a href="http://www.ruanyifeng.com/blog/2016/08/http.html">《HTTP 协议入门》 阮一峰&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>当HTTP流水线启动时，后续请求都可以不用等待第一个请求的成功回应就被发送。然而HTTP流水线已被证明很难在现有的网络中实现，因为现有网络中有很多老旧的软件与现代版本的软件共存。因此，HTTP流水线已被在有多请求下表现得更稳健的HTTP/2的帧所取代。&lt;/p>
&lt;p>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Overview">《HTTP概述》 MDN&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>服务器只能按顺序处理请求，如果前面请求处理的慢，后面的需要排队，即&lt;a href="https://zh.wikipedia.org/wiki/%E9%98%9F%E5%A4%B4%E9%98%BB%E5%A1%9E">&amp;ldquo;队头堵塞&amp;rdquo;&lt;/a>（Head-of-line blocking）。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="http20">HTTP/2.0&lt;/h2>
&lt;blockquote>
&lt;p>2009年，谷歌公开了自行研发的 SPDY 协议，主要解决 HTTP/1.1 效率不高的问题。&lt;/p>
&lt;p>这个协议在Chrome浏览器上证明可行以后，就被当作 HTTP/2 的基础，主要特性都在 HTTP/2 之中得到继承。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>头部和数据部都是二进制，统称为“帧”&lt;/li>
&lt;li>全双工模式（双向、实时通信），客户端和服务端可同时发送多个请求和回应（解决阻塞问题）
&lt;ul>
&lt;li>实现的基础：由于HTTP/2不按照顺序发送，就需要对每个请求或回应作区分，即每个请求或回应的所有数据包都对应唯一ID&lt;/li>
&lt;li>客户端和服务器都可以发送信号（&lt;code>RST_STREAM&lt;/code>帧），取消这个数据流&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>头信息压缩&lt;/li>
&lt;li>服务器未经允许，主动推送数据到客户端&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Reference:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.ruanyifeng.com/blog/2016/08/http.html">《HTTP 协议入门》 阮一峰&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Overview">《HTTP概述》 MDN&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote></description><content>&lt;blockquote>
&lt;p>HTTP位于网络的应用层，使用TCP/IP协议进行传输&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>TCP连接
&lt;ul>
&lt;li>HTTP/1.0：通过非标准字段&lt;code>Connection: keep-alive&lt;/code>保持TCP连接&lt;/li>
&lt;li>HTTP/1.1：允许TCP复用，但所有数据通信都是按次序的，请求要一个一个处理&lt;/li>
&lt;li>HTTP/2：&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="http09">HTTP/0.9&lt;/h2>
&lt;ul>
&lt;li>客户端请求，服务器回复完毕，TCP连接即关闭&lt;/li>
&lt;li>只有一个命令：&lt;code>GET&lt;/code>&lt;/li>
&lt;li>服务器只能回应HTML格式的字符串&lt;/li>
&lt;/ul>
&lt;h2 id="http10">HTTP/1.0&lt;/h2>
&lt;ul>
&lt;li>加入&lt;code>POST&lt;/code>、&lt;code>HEAD&lt;/code>命令&lt;/li>
&lt;li>协议分为头部和数据部，头部字段如：&lt;code>Content-Type&lt;/code>、&lt;code>Content-Encoding&lt;/code>等&lt;/li>
&lt;li>为了保持TCP的复用，引入头部字段：&lt;code>Connection: keep-alive&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="http11">HTTP/1.1&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>TCP默认为持久连接，由客户端和服务端主动关闭&lt;/p>
&lt;/li>
&lt;li>
&lt;p>引入管道机制，向TCP连接发送多个请求（而不用等待上一个请求处理之后，再发送）&lt;/p>
&lt;ul>
&lt;li>服务端可以区分多个请求的基础：&lt;code>Content-Length&lt;/code>字段，即知道每个请求的长度&lt;/li>
&lt;li>在1.0版中，&lt;code>Content-Length&lt;/code>字段不是必需的，因为浏览器发现服务器关闭了TCP连接，就表明收到的数据包已经全了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>引入流模式&lt;/p>
&lt;blockquote>
&lt;p>对于一些很耗时的动态操作来说，这意味着，服务器要等到所有操作完成，才能发送数据，显然这样的效率不高。更好的处理方法是，产生一块数据，就发送一块，采用&amp;quot;流模式&amp;quot;（stream）取代&amp;quot;缓存模式&amp;quot;（buffer）。&lt;/p>
&lt;p>因此，1.1版规定可以不使用&lt;code>Content-Length&lt;/code>字段，而使用&lt;a href="https://zh.wikipedia.org/wiki/%E5%88%86%E5%9D%97%E4%BC%A0%E8%BE%93%E7%BC%96%E7%A0%81">&amp;ldquo;分块传输编码&amp;rdquo;&lt;/a>（chunked transfer encoding）。只要请求或回应的头信息有&lt;code>Transfer-Encoding&lt;/code>字段，就表明回应将由数量未定的数据块组成。&lt;/p>
&lt;p>&lt;a href="http://www.ruanyifeng.com/blog/2016/08/http.html">《HTTP 协议入门》 阮一峰&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>当HTTP流水线启动时，后续请求都可以不用等待第一个请求的成功回应就被发送。然而HTTP流水线已被证明很难在现有的网络中实现，因为现有网络中有很多老旧的软件与现代版本的软件共存。因此，HTTP流水线已被在有多请求下表现得更稳健的HTTP/2的帧所取代。&lt;/p>
&lt;p>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Overview">《HTTP概述》 MDN&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>服务器只能按顺序处理请求，如果前面请求处理的慢，后面的需要排队，即&lt;a href="https://zh.wikipedia.org/wiki/%E9%98%9F%E5%A4%B4%E9%98%BB%E5%A1%9E">&amp;ldquo;队头堵塞&amp;rdquo;&lt;/a>（Head-of-line blocking）。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="http20">HTTP/2.0&lt;/h2>
&lt;blockquote>
&lt;p>2009年，谷歌公开了自行研发的 SPDY 协议，主要解决 HTTP/1.1 效率不高的问题。&lt;/p>
&lt;p>这个协议在Chrome浏览器上证明可行以后，就被当作 HTTP/2 的基础，主要特性都在 HTTP/2 之中得到继承。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>头部和数据部都是二进制，统称为“帧”&lt;/li>
&lt;li>全双工模式（双向、实时通信），客户端和服务端可同时发送多个请求和回应（解决阻塞问题）
&lt;ul>
&lt;li>实现的基础：由于HTTP/2不按照顺序发送，就需要对每个请求或回应作区分，即每个请求或回应的所有数据包都对应唯一ID&lt;/li>
&lt;li>客户端和服务器都可以发送信号（&lt;code>RST_STREAM&lt;/code>帧），取消这个数据流&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>头信息压缩&lt;/li>
&lt;li>服务器未经允许，主动推送数据到客户端&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Reference:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.ruanyifeng.com/blog/2016/08/http.html">《HTTP 协议入门》 阮一峰&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Overview">《HTTP概述》 MDN&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote></content></item><item><title/><link>https://jinying-che.github.io/puml/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jinying-che.github.io/puml/readme/</guid><description>&lt;h1 id="plantuml">PlantUML&lt;/h1>
&lt;p>This folder stores all the PlantUML files dedicated for the blogs&lt;/p>
&lt;h3 id="how-to-make-plantuml">How to make PlantUML?&lt;/h3>
&lt;p>check &lt;a href="https://plantuml.com/">https://plantuml.com/&lt;/a>&lt;/p>
&lt;h3 id="how-to-make-plantuml-in-vim">How to make PlantUML in vim?&lt;/h3>
&lt;p>check &lt;a href="https://jekhokie.github.io/linux/vim/plantuml/2020/07/25/plantuml-using-vim.html">plantuml using vim&lt;/a>&lt;/p>
&lt;h4 id="tldr">TL;DR&lt;/h4>
&lt;ol>
&lt;li>Edit PlantUML in vim&lt;/li>
&lt;li>&lt;code>:PlantumlOpen&lt;/code> to preview the uml in brower&lt;/li>
&lt;li>Run &lt;code>:PlantumlSave static/images/git.svg&lt;/code> to export the uml to svg (or any other supported file type: &lt;em>png, svg, eps, pdf, vdx, xmi, scxml, html, txt, utxt, latex&lt;/em>)&lt;/li>
&lt;/ol>
&lt;h3 id="reference">Reference&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/weirongxu/plantuml-previewer.vim">https://github.com/weirongxu/plantuml-previewer.vim&lt;/a>&lt;/li>
&lt;/ul></description><content>&lt;h1 id="plantuml">PlantUML&lt;/h1>
&lt;p>This folder stores all the PlantUML files dedicated for the blogs&lt;/p>
&lt;h3 id="how-to-make-plantuml">How to make PlantUML?&lt;/h3>
&lt;p>check &lt;a href="https://plantuml.com/">https://plantuml.com/&lt;/a>&lt;/p>
&lt;h3 id="how-to-make-plantuml-in-vim">How to make PlantUML in vim?&lt;/h3>
&lt;p>check &lt;a href="https://jekhokie.github.io/linux/vim/plantuml/2020/07/25/plantuml-using-vim.html">plantuml using vim&lt;/a>&lt;/p>
&lt;h4 id="tldr">TL;DR&lt;/h4>
&lt;ol>
&lt;li>Edit PlantUML in vim&lt;/li>
&lt;li>&lt;code>:PlantumlOpen&lt;/code> to preview the uml in brower&lt;/li>
&lt;li>Run &lt;code>:PlantumlSave static/images/git.svg&lt;/code> to export the uml to svg (or any other supported file type: &lt;em>png, svg, eps, pdf, vdx, xmi, scxml, html, txt, utxt, latex&lt;/em>)&lt;/li>
&lt;/ol>
&lt;h3 id="reference">Reference&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/weirongxu/plantuml-previewer.vim">https://github.com/weirongxu/plantuml-previewer.vim&lt;/a>&lt;/li>
&lt;/ul></content></item></channel></rss>