<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on</title><link>https://jinying-che.github.io/tags/linux/</link><description>Recent content in linux on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 30 Sep 2023 15:25:41 +0800</lastBuildDate><atom:link href="https://jinying-che.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>File System</title><link>https://jinying-che.github.io/posts/file_system/</link><pubDate>Sat, 30 Sep 2023 15:25:41 +0800</pubDate><guid>https://jinying-che.github.io/posts/file_system/</guid><description>Architecture VFS The Virtual File System (also known as the Virtual Filesystem Switch) is the software layer in the kernel that provides the filesystem interface to userspace programs via system call. It also provides an abstraction within the kernel which allows different filesystem implementations to coexist.
A VFS specifies an interface (or a &amp;ldquo;contract&amp;rdquo;) between the kernel and a concrete file system. Therefore, it is easy to add support for new file system types to the kernel simply by fulfilling the contract.</description><content>&lt;h2 id="architecture">Architecture&lt;/h2>
&lt;p>&lt;img src="https://jinying-che.github.io/images/linux_file_system.svg" alt="file system">&lt;/p>
&lt;h2 id="vfs">VFS&lt;/h2>
&lt;p>The Virtual File System (also known as the Virtual Filesystem Switch) is the software layer in the kernel that provides the filesystem interface to userspace programs via system call. It also provides an abstraction within the kernel which allows different filesystem implementations to coexist.&lt;/p>
&lt;p>A VFS specifies an interface (or a &amp;ldquo;contract&amp;rdquo;) between the kernel and a concrete file system. Therefore, it is easy to add support for new file system types to the kernel simply by fulfilling the contract.&lt;/p>
&lt;h4 id="superblock">Superblock&lt;/h4>
&lt;p>The superblock records various information about the enclosing filesystem, such as block counts, inode counts, supported features, maintenance information, and more.&lt;/p>
&lt;p>Show the super block info in Linux:&lt;/p>
&lt;blockquote>
&lt;p>all examples in this post are from my vps (OS: Ubuntu 22.04.2 LTS)&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ df -h
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem Size Used Avail Use% Mounted on
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 96M 1.3M 95M 2% /run
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/vda1 24G 12G 11G 52% /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 479M &lt;span style="color:#ae81ff">0&lt;/span> 479M 0% /dev/shm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 5.0M &lt;span style="color:#ae81ff">0&lt;/span> 5.0M 0% /run/lock
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 96M 4.0K 96M 1% /run/user/0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ dumpe2fs /dev/vda1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dumpe2fs 1.46.5 &lt;span style="color:#f92672">(&lt;/span>30-Dec-2021&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem volume name: &amp;lt;none&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Last mounted on: /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem UUID: cc673143-6902-4174-990e-8cba0304cb7a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem magic number: 0xEF53
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem revision &lt;span style="color:#75715e">#: 1 (dynamic)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem features: has_journal ext_attr resize_inode dir_index filetype needs_recovery extent 64bit flex_bg sparse_super large_file huge_file dir_nlink extra_isize metadata_csum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem flags: signed_directory_hash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Default mount options: user_xattr acl discard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem state: clean
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Errors behavior: Continue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem OS type: Linux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Inode count: &lt;span style="color:#ae81ff">6537600&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Block count: &lt;span style="color:#ae81ff">6553339&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Reserved block count: &lt;span style="color:#ae81ff">327666&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Free blocks: &lt;span style="color:#ae81ff">3333553&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Free inodes: &lt;span style="color:#ae81ff">6325191&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>First block: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Block size: &lt;span style="color:#ae81ff">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Fragment size: &lt;span style="color:#ae81ff">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>Source Code&lt;/code>: &lt;a href="https://github.com/torvalds/linux/blob/b9ddbb0cde2adcedda26045cc58f31316a492215/include/linux/fs.h#L1188">super_block c source code&lt;/a>&lt;/p>
&lt;h4 id="directory-entry-dentry">Directory Entry (Dentry)&lt;/h4>
&lt;ol>
&lt;li>Dentry is used by VFS to represent information about the &lt;strong>directories and files&lt;/strong> inside the &lt;strong>memory&lt;/strong>&lt;/li>
&lt;li>Dentries live in RAM and are never saved to disc: they exist only for performance. (RAM cannot save all dentries -&amp;gt; LFU cache)&lt;/li>
&lt;li>An individual dentry usually has a pointer to an inode&lt;/li>
&lt;li>It&amp;rsquo;s a fast look-up mechanism to translate a pathname (filename) into a specific &lt;strong>dentry&lt;/strong> then &lt;strong>inode&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>&lt;code>Source Code&lt;/code>: &lt;a href="https://github.com/torvalds/linux/blob/b9ddbb0cde2adcedda26045cc58f31316a492215/include/linux/dcache.h#L82">dentry c source code&lt;/a>&lt;/p>
&lt;h4 id="index-node">Index Node&lt;/h4>
&lt;ol>
&lt;li>Index node(Inode) is a data structure that stores ownership, permissions, file size, and other metadata-related terms.&lt;/li>
&lt;li>They live either on the disc (for block device filesystems) or in the memory (for pseudo filesystems). Inodes that live on the disc are copied into the memory when required and changes to the inode are written back to disc.&lt;/li>
&lt;li>Every file and directory on Linux is represented by a unique inode number used by the system to identify it on the file system.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ls&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -i, --inode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># print the index number of each file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls -i workspace/main.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1067025&lt;/span> workspace/main.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls -i workspace
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1067025&lt;/span> main.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># stat - display file or file system status&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ stat workspace/main.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File: workspace/main.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Size: &lt;span style="color:#ae81ff">72&lt;/span> Blocks: &lt;span style="color:#ae81ff">8&lt;/span> IO Block: &lt;span style="color:#ae81ff">4096&lt;/span> regular file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Device: fc01h/64513d Inode: &lt;span style="color:#ae81ff">1067025&lt;/span> Links: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access: &lt;span style="color:#f92672">(&lt;/span>0644/-rw-r--r--&lt;span style="color:#f92672">)&lt;/span> Uid: &lt;span style="color:#f92672">(&lt;/span> 0/ root&lt;span style="color:#f92672">)&lt;/span> Gid: &lt;span style="color:#f92672">(&lt;/span> 0/ root&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access: 2023-10-09 22:12:30.884848072 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Modify: 2023-06-11 22:44:14.194331022 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Change: 2023-06-11 22:44:14.194331022 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Birth: 2023-06-11 22:44:14.194331022 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ stat workspace
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File: workspace
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Size: &lt;span style="color:#ae81ff">4096&lt;/span> Blocks: &lt;span style="color:#ae81ff">8&lt;/span> IO Block: &lt;span style="color:#ae81ff">4096&lt;/span> directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Device: fc01h/64513d Inode: &lt;span style="color:#ae81ff">1066674&lt;/span> Links: &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access: &lt;span style="color:#f92672">(&lt;/span>0755/drwxr-xr-x&lt;span style="color:#f92672">)&lt;/span> Uid: &lt;span style="color:#f92672">(&lt;/span> 0/ root&lt;span style="color:#f92672">)&lt;/span> Gid: &lt;span style="color:#f92672">(&lt;/span> 0/ root&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access: 2023-10-09 22:12:33.196939026 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Modify: 2023-10-09 22:12:32.612916118 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Change: 2023-10-09 22:12:32.612916118 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Birth: 2023-06-11 22:43:01.453639583 +0800
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>Source Code&lt;/code>: &lt;a href="https://github.com/torvalds/linux/blob/94f6f0550c625fab1f373bb86a6669b45e9748b3/include/linux/fs.h#L639">inode c source code&lt;/a>&lt;/p>
&lt;h4 id="file">File&lt;/h4>
&lt;ol>
&lt;li>The file object is the in-memory representation of an open file.&lt;/li>
&lt;li>The file object is initialized with a pointer to the dentry and a set of file operation member functions which are taken from the inode data.&lt;/li>
&lt;li>The file structure is placed into the file descriptor table for the process.&lt;/li>
&lt;li>Reading, writing and closing files are done by using the userspace &lt;strong>file descriptor&lt;/strong> to grab the appropriate file structure.&lt;/li>
&lt;/ol>
&lt;p>&lt;code>Source Code&lt;/code>: &lt;a href="https://github.com/torvalds/linux/blob/b9ddbb0cde2adcedda26045cc58f31316a492215/include/linux/fs.h#L992">file c source code&lt;/a>&lt;/p>
&lt;h2 id="what-happens-when-reading-a-file-in-linux">What happens when reading a file in Linux?&lt;/h2>
&lt;p>TBD Diagram to elaborate on the concepts above&lt;/p>
&lt;h2 id="block-layer">Block Layer&lt;/h2>
&lt;p>TBD&lt;/p>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;h4 id="1-df--du">1. df &amp;amp; du&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># df displays the amount of disk space available on the file system containing each file name argument&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ df -h
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filesystem Size Used Avail Use% Mounted on
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 96M 1.3M 95M 2% /run
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/vda1 24G 12G 11G 52% /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 479M &lt;span style="color:#ae81ff">0&lt;/span> 479M 0% /dev/shm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 5.0M &lt;span style="color:#ae81ff">0&lt;/span> 5.0M 0% /run/lock
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpfs 96M 4.0K 96M 1% /run/user/0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># du Summarize disk usage of the set of FILEs, recursively for directories.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/usr &amp;gt; du -h --max-depth&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e"># display the usage of first depth in a human readable format &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4.0K ./lib32
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>32M ./sbin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>465M ./src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4.0K ./lib64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>439M ./share
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># display the usage of this depth and sort the output in a human readable format&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ du -hs * | sort -rh | head -10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5.0G usr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3.9G var
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2.4G swapfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1.1G snap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="2-iostat-device-level">2. iostat (device level)&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Display a continuous device report of extended statistics at two second intervals.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># take note of the following statistics: &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># - %util: percentage of elapsed time during which I/O requests were issued to the device &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># - r/s, w/s: read/write requests per second for the device&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># - rKB/s, rWB/s: the number of sectors (kilobytes, megabytes) read/write for the device per second&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># - r_await, w_await: the average time (in milliseconds) for read/write requests issued to the device to be served. This includes the time spent by the requests in queue and the time spent servicing them.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ iostat -x -d &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Device r/s rkB/s rrqm/s %rrqm r_await rareq-sz w/s wkB/s wrqm/s %wrqm w_await wareq-sz d/s dkB/s drqm/s %drqm d_await dareq-sz f/s f_await aqu-sz %util
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>loop0 0.00 0.02 0.00 0.00 0.29 47.11 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>loop1 0.00 0.00 0.00 0.00 0.14 34.80 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sr0 0.00 0.00 0.00 0.00 0.00 0.12 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vda 0.24 6.06 0.09 28.32 0.37 25.79 2.18 15.93 0.48 17.94 0.38 7.32 0.01 8.63 0.00 0.00 2.14 1258.27 0.20 0.14 0.00 0.10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Device r/s rkB/s rrqm/s %rrqm r_await rareq-sz w/s wkB/s wrqm/s %wrqm w_await wareq-sz d/s dkB/s drqm/s %drqm d_await dareq-sz f/s f_await aqu-sz %util
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>loop0 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>loop1 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sr0 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vda 0.00 0.00 0.00 0.00 0.00 0.00 1.00 30.00 6.50 86.67 0.50 30.00 0.50 2.00 0.00 0.00 2.00 4.00 1.00 0.00 0.00 0.20
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="3-pidstat-process-level">3. pidstat (process level)&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># pidstat - Report statistics for Linux tasks.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -d report I/O statistics per second &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ pidstat -d &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:01 PM UID PID kB_rd/s kB_wr/s kB_ccwr/s iodelay Command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:01 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">387&lt;/span> 0.00 16.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> systemd-journal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:01 PM UID PID kB_rd/s kB_wr/s kB_ccwr/s iodelay Command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:02 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">387&lt;/span> 0.00 36.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> systemd-journal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:02 PM UID PID kB_rd/s kB_wr/s kB_ccwr/s iodelay Command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:03 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">387&lt;/span> 0.00 32.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> systemd-journal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:03 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">825&lt;/span> 0.00 4.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> sshd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ pidstat -d -p &lt;span style="color:#ae81ff">387&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e"># report I/O statistics for process 387 per second &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:24 PM UID PID kB_rd/s kB_wr/s kB_ccwr/s iodelay Command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:25 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">387&lt;/span> 0.00 16.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> systemd-journal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:26 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">387&lt;/span> 0.00 0.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> systemd-journal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:27 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">387&lt;/span> 0.00 32.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> systemd-journal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:11:28 PM &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">387&lt;/span> 0.00 0.00 0.00 &lt;span style="color:#ae81ff">0&lt;/span> systemd-journal
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="4-iotop">4. iotop&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># iotop - simple top-like I/O monitor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># NOTE: not handy as kernal config may need to update (at least the CONFIG_TASK_DELAY_ACCT, CONFIG_TASK_IO_ACCOUNTING, CON-FIG_TASKSTATS and CONFIG_VM_EVENT_COUNTERS options need to be enabled in your Linux kernel build configuration.)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ iotop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Total DISK READ : 0.00 B/s | Total DISK WRITE : 7.85 K/s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Actual DISK READ: 0.00 B/s | Actual DISK WRITE: 0.00 B/s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TID PRIO USER DISK READ DISK WRITE SWAPIN IO&amp;gt; COMMAND
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">15055&lt;/span> be/3 root 0.00 B/s 7.85 K/s 0.00 % 0.00 % systemd-journald
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="5-strace">5. strace&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># strace - trace system calls and signals&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># process 654373 is a prometheus node exporter, through the strace (system calls), it&amp;#39;s able to roughly understand how does node exporter work &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ strace -p &lt;span style="color:#ae81ff">654373&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>newfstatat&lt;span style="color:#f92672">(&lt;/span>AT_FDCWD, &lt;span style="color:#e6db74">&amp;#34;/proc&amp;#34;&lt;/span>, &lt;span style="color:#f92672">{&lt;/span>st_mode&lt;span style="color:#f92672">=&lt;/span>S_IFDIR|0555, st_size&lt;span style="color:#f92672">=&lt;/span>0, ...&lt;span style="color:#f92672">}&lt;/span>, 0&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>statfs&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/proc&amp;#34;&lt;/span>, &lt;span style="color:#f92672">{&lt;/span>f_type&lt;span style="color:#f92672">=&lt;/span>PROC_SUPER_MAGIC, f_bsize&lt;span style="color:#f92672">=&lt;/span>4096, f_blocks&lt;span style="color:#f92672">=&lt;/span>0, f_bfree&lt;span style="color:#f92672">=&lt;/span>0, f_bavail&lt;span style="color:#f92672">=&lt;/span>0, f_files&lt;span style="color:#f92672">=&lt;/span>0, f_ffree&lt;span style="color:#f92672">=&lt;/span>0, f_fsid&lt;span style="color:#f92672">={&lt;/span>val&lt;span style="color:#f92672">=[&lt;/span>0, 0&lt;span style="color:#f92672">]}&lt;/span>, f_namelen&lt;span style="color:#f92672">=&lt;/span>255, f_frsize&lt;span style="color:#f92672">=&lt;/span>4096, f_flags&lt;span style="color:#f92672">=&lt;/span>ST_VALID|ST_NOSUID|ST_NODEV|ST_NOEXEC|ST_RELATIME&lt;span style="color:#f92672">})&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>newfstatat&lt;span style="color:#f92672">(&lt;/span>AT_FDCWD, &lt;span style="color:#e6db74">&amp;#34;/proc/655152&amp;#34;&lt;/span>, &lt;span style="color:#f92672">{&lt;/span>st_mode&lt;span style="color:#f92672">=&lt;/span>S_IFDIR|0555, st_size&lt;span style="color:#f92672">=&lt;/span>0, ...&lt;span style="color:#f92672">}&lt;/span>, 0&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>openat&lt;span style="color:#f92672">(&lt;/span>AT_FDCWD, &lt;span style="color:#e6db74">&amp;#34;/proc/655152/stat&amp;#34;&lt;/span>, O_RDONLY|O_CLOEXEC&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fcntl&lt;span style="color:#f92672">(&lt;/span>8, F_GETFL&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> 0x8000 &lt;span style="color:#f92672">(&lt;/span>flags O_RDONLY|O_LARGEFILE&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fcntl&lt;span style="color:#f92672">(&lt;/span>8, F_SETFL, O_RDONLY|O_NONBLOCK|O_LARGEFILE&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>epoll_ctl&lt;span style="color:#f92672">(&lt;/span>4, EPOLL_CTL_ADD, 8, &lt;span style="color:#f92672">{&lt;/span>events&lt;span style="color:#f92672">=&lt;/span>EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, data&lt;span style="color:#f92672">={&lt;/span>u32&lt;span style="color:#f92672">=&lt;/span>1268860600, u64&lt;span style="color:#f92672">=&lt;/span>139673605326520&lt;span style="color:#f92672">}})&lt;/span> &lt;span style="color:#f92672">=&lt;/span> -1 EPERM &lt;span style="color:#f92672">(&lt;/span>Operation not permitted&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fcntl&lt;span style="color:#f92672">(&lt;/span>8, F_GETFL&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> 0x8800 &lt;span style="color:#f92672">(&lt;/span>flags O_RDONLY|O_NONBLOCK|O_LARGEFILE&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fcntl&lt;span style="color:#f92672">(&lt;/span>8, F_SETFL, O_RDONLY|O_LARGEFILE&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>read&lt;span style="color:#f92672">(&lt;/span>8, &lt;span style="color:#e6db74">&amp;#34;655152 (node_exporter) R 655107 &amp;#34;&lt;/span>..., 512&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">308&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>read&lt;span style="color:#f92672">(&lt;/span>8, &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>, 204&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>close&lt;span style="color:#f92672">(&lt;/span>8&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>openat&lt;span style="color:#f92672">(&lt;/span>AT_FDCWD, &lt;span style="color:#e6db74">&amp;#34;/proc/stat&amp;#34;&lt;/span>, O_RDONLY|O_CLOEXEC&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fcntl&lt;span style="color:#f92672">(&lt;/span>8, F_GETFL&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> 0x8000 &lt;span style="color:#f92672">(&lt;/span>flags O_RDONLY|O_LARGEFILE&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fcntl&lt;span style="color:#f92672">(&lt;/span>8, F_SETFL, O_RDONLY|O_NONBLOCK|O_LARGEFILE&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>epoll_ctl&lt;span style="color:#f92672">(&lt;/span>4, EPOLL_CTL_ADD, 8, &lt;span style="color:#f92672">{&lt;/span>events&lt;span style="color:#f92672">=&lt;/span>EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, data&lt;span style="color:#f92672">={&lt;/span>u32&lt;span style="color:#f92672">=&lt;/span>1268860600, u64&lt;span style="color:#f92672">=&lt;/span>139673605326520&lt;span style="color:#f92672">}})&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>read&lt;span style="color:#f92672">(&lt;/span>8, &lt;span style="color:#e6db74">&amp;#34;cpu 773459 68488 441098 3776333&amp;#34;&lt;/span>..., 512&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">512&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="6-lsof">6. lsof&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># lsof - lists on its standard output file information about files opened by processes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># An open file may be a regular file, a directory, a block special file, a character special file, an executing text reference, a library, a stream or a network file (Internet socket, NFS file or UNIX domain socket.)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># man lsof for more details &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ lsof -p &lt;span style="color:#ae81ff">654373&lt;/span> &lt;span style="color:#75715e"># list all files opened by node exporter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root cwd DIR 252,1 &lt;span style="color:#ae81ff">4096&lt;/span> &lt;span style="color:#ae81ff">1046028&lt;/span> /root/workspace/node_exporter-1.6.1.linux-amd64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root rtd DIR 252,1 &lt;span style="color:#ae81ff">4096&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root txt REG 252,1 &lt;span style="color:#ae81ff">20025119&lt;/span> &lt;span style="color:#ae81ff">1046289&lt;/span> /root/workspace/node_exporter-1.6.1.linux-amd64/node_exporter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root 0u CHR 136,5 0t0 &lt;span style="color:#ae81ff">8&lt;/span> /dev/pts/5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root 1u CHR 136,5 0t0 &lt;span style="color:#ae81ff">8&lt;/span> /dev/pts/5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root 2u CHR 136,5 0t0 &lt;span style="color:#ae81ff">8&lt;/span> /dev/pts/5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root 3u IPv6 &lt;span style="color:#ae81ff">10182875&lt;/span> 0t0 TCP *:9100 &lt;span style="color:#f92672">(&lt;/span>LISTEN&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root 4u a_inode 0,14 &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">12477&lt;/span> &lt;span style="color:#f92672">[&lt;/span>eventpoll&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root 5r FIFO 0,13 0t0 &lt;span style="color:#ae81ff">10182871&lt;/span> pipe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_expo &lt;span style="color:#ae81ff">655152&lt;/span> root 6w FIFO 0,13 0t0 &lt;span style="color:#ae81ff">10182871&lt;/span> pipe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="linux-storage-stack">Linux Storage Stack&lt;/h2>
&lt;p>&lt;img src="https://jinying-che.github.io/images/Linux-storage-stack-diagram_v6.2/linux_storage_stack.svg" alt="linux storage stack">
&lt;a href="https://www.thomas-krenn.com/en/wiki/Linux_Storage_Stack_Diagram">https://www.thomas-krenn.com/en/wiki/Linux_Storage_Stack_Diagram&lt;/a>&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://developer.ibm.com/tutorials/l-linux-filesystem/">https://developer.ibm.com/tutorials/l-linux-filesystem/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.kernel.org/doc/html/latest/filesystems/ext4/globals.html?highlight=file+system+super+block">super block &amp;ndash; kernel doc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.kernel.org/doc/html/latest/filesystems/vfs.html?highlight=inode">vfs overview &amp;ndash; kernel doc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://itslinuxfoss.com/what-is-superblock-inode-dentry-and-file/#:~:text=The%20superblock%20is%20the%20data,of%20bytes%20in%20different%20forms.">What is a Superblock, Dentry, Inode and a File?&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Memory</title><link>https://jinying-che.github.io/posts/memory/</link><pubDate>Thu, 28 Sep 2023 16:10:39 +0800</pubDate><guid>https://jinying-che.github.io/posts/memory/</guid><description>Virtual Memory Virtual memory is an abstraction for memory management by operation system Each process operates the virtual memory (virtual address), which is mapped to physical memory by memory management unit (MMU) in CPU The physical memory is only allocated to process when memory is firstly accessed. (e.g. mmap() and brk() in C just allocate the virtual memory first, hence you can see VIRT in top command is usually much higher than RES) Virtual maps to physical memory and disk (swap) Virtual memory for one process includes both user space and kernel space.</description><content>&lt;h2 id="virtual-memory">Virtual Memory&lt;/h2>
&lt;ol>
&lt;li>Virtual memory is an abstraction for memory management by operation system&lt;/li>
&lt;li>Each process operates the virtual memory (virtual address), which is mapped to physical memory by memory management unit (MMU) in CPU&lt;/li>
&lt;li>The physical memory is only allocated to process when memory is firstly accessed. (e.g. &lt;code>mmap()&lt;/code> and &lt;code>brk()&lt;/code> in C just allocate the virtual memory first, hence you can see &lt;code>VIRT&lt;/code> in &lt;code>top&lt;/code> command is usually much higher than &lt;code>RES&lt;/code>)&lt;/li>
&lt;li>Virtual maps to physical memory and disk (swap)&lt;/li>
&lt;li>Virtual memory for one process includes both user space and kernel space.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://jinying-che.github.io/images/virtual_memory.png" alt="virtual memory">&lt;/p>
&lt;h2 id="buffer-vs-cache">Buffer vs Cache&lt;/h2>
&lt;ul>
&lt;li>Buffer: the memory used for the disk (both read and write)&lt;/li>
&lt;li>Cache: the memory used for the file (both read and write)&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>Common Mistake: Buffer is for write only, whereas Cache is for read only --&amp;gt; WRONG!
&lt;/code>&lt;/pre>&lt;h2 id="reclaim-memory">Reclaim Memory&lt;/h2>
&lt;p>Operation system will try to reclaim the memory when the resource is lack:&lt;/p>
&lt;ol>
&lt;li>LRU（Least Recently Used）&lt;/li>
&lt;li>Swap the less used memory to disk&lt;/li>
&lt;li>OOM (Out of Memory): kill the process who takes up lots of memory&lt;/li>
&lt;/ol>
&lt;h2 id="allocating-kernel-memory-tbd">Allocating kernel memory (TBD)&lt;/h2>
&lt;h4 id="buddy-system">Buddy System&lt;/h4>
&lt;p>The buddy system is a memory allocation algorithm that works by dividing memory into blocks of a fixed size, with each block being a power of two in size.&lt;/p>
&lt;p>&lt;strong>Drawback&lt;/strong>: The main drawback in buddy system is internal fragmentation as larger block of memory is acquired then required. For example if a 36 kb request is made then it can only be satisfied by 64 kb segment and remaining memory is wasted.&lt;/p>
&lt;h4 id="slab-system">Slab System&lt;/h4>
&lt;p>The slab system is a memory allocation algorithm that is designed specifically for kernel memory. It works by dividing memory into fixed-size caches or slabs, each of which contains a set of objects of the same type&lt;/p>
&lt;h2 id="troubleshooting">TroubleShooting&lt;/h2>
&lt;h4 id="1-tophtop">1. top/htop&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># top, press M (order by memory)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ top
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%Cpu&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">)&lt;/span>: 0.7 us, 0.7 sy, 0.0 ni, 98.7 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MiB Mem : 35.8/957.5 &lt;span style="color:#f92672">[||||||||||||||||||||||||||||||||||||&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MiB Swap: 4.1/2400.0 &lt;span style="color:#f92672">[||||&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">428&lt;/span> root rt &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">289312&lt;/span> &lt;span style="color:#ae81ff">27100&lt;/span> &lt;span style="color:#ae81ff">9072&lt;/span> S 0.3 2.8 4:20.42 multipathd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">745&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">1209328&lt;/span> &lt;span style="color:#ae81ff">7900&lt;/span> &lt;span style="color:#ae81ff">1832&lt;/span> S 0.3 0.8 15:47.03 containerd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">359212&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">15424&lt;/span> &lt;span style="color:#ae81ff">9208&lt;/span> &lt;span style="color:#ae81ff">7600&lt;/span> S 0.3 0.9 0:00.01 sshd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">1&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">167692&lt;/span> &lt;span style="color:#ae81ff">8560&lt;/span> &lt;span style="color:#ae81ff">5560&lt;/span> S 0.0 0.9 1:30.35 systemd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">2&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> S 0.0 0.0 0:00.37 kthreadd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run &lt;code>man top&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>VIRT&lt;/code>: The total amount of virtual memory used by the task. It includes all code, data and shared libraries plus pages that have been swapped out and pages that have been mapped but not used.&lt;/li>
&lt;li>&lt;code>RES&lt;/code>: A subset of the virtual address space (VIRT) representing the non-swapped &lt;strong>physical memory&lt;/strong> a task is currently using.&lt;/li>
&lt;li>&lt;code>SHR&lt;/code>: A subset of resident memory (RES) that may be used by other processes.&lt;/li>
&lt;li>&lt;code>%MEM&lt;/code>: A task&amp;rsquo;s currently resident share of available physical memory.&lt;/li>
&lt;/ul>
&lt;h4 id="2-free">2. free&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># free displays the total amount of free and used physical and swap memory in the system, as well as the buffers and caches used by the kernel. The information is gathered by parsing /proc/meminfo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> total used free shared buff/cache available
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Mem: &lt;span style="color:#ae81ff">980508&lt;/span> &lt;span style="color:#ae81ff">183624&lt;/span> &lt;span style="color:#ae81ff">74136&lt;/span> &lt;span style="color:#ae81ff">348&lt;/span> &lt;span style="color:#ae81ff">722748&lt;/span> &lt;span style="color:#ae81ff">631876&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Swap: &lt;span style="color:#ae81ff">2457596&lt;/span> &lt;span style="color:#ae81ff">101948&lt;/span> &lt;span style="color:#ae81ff">2355648&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run &lt;code>man free&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>total&lt;/code>: Total installed memory (MemTotal and SwapTotal in /proc/meminfo)&lt;/li>
&lt;li>&lt;code>used&lt;/code>: Used memory (calculated as total - free - buffers - cache)&lt;/li>
&lt;li>&lt;code>free&lt;/code>: Unused memory (MemFree and SwapFree in /proc/meminfo)&lt;/li>
&lt;li>&lt;code>shared&lt;/code>: Memory used (mostly) by tmpfs (Shmem in /proc/meminfo)&lt;/li>
&lt;li>&lt;code>buffers&lt;/code>: Memory used by kernel buffers (Buffers in /proc/meminfo)&lt;/li>
&lt;li>&lt;code>cache&lt;/code>: Memory used by the page cache and slabs (Cached and SReclaimable in /proc/meminfo)&lt;/li>
&lt;li>&lt;code>buff/cache&lt;/code>: Sum of buffers and cache&lt;/li>
&lt;li>&lt;code>available&lt;/code>: Estimation of how much memory is available for starting new applications, without swapping.&lt;/li>
&lt;/ul>
&lt;h4 id="3-vmstat">3. vmstat&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># usage: vmstat [options] [delay [count]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ vmstat -t &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#75715e"># report virtual memory statistics per 2 second, total 5 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu----- -----timestamp-----
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r b swpd free buff cache si so bi bo in cs us sy id wa st UTC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">101948&lt;/span> &lt;span style="color:#ae81ff">72904&lt;/span> &lt;span style="color:#ae81ff">85464&lt;/span> &lt;span style="color:#ae81ff">641460&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#ae81ff">14&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-09-28 14:41:49
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">101948&lt;/span> &lt;span style="color:#ae81ff">72904&lt;/span> &lt;span style="color:#ae81ff">85472&lt;/span> &lt;span style="color:#ae81ff">641460&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">226&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span> &lt;span style="color:#ae81ff">85&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-09-28 14:41:51
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">101948&lt;/span> &lt;span style="color:#ae81ff">72904&lt;/span> &lt;span style="color:#ae81ff">85472&lt;/span> &lt;span style="color:#ae81ff">641460&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span> &lt;span style="color:#ae81ff">104&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">99&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-09-28 14:41:53
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">101948&lt;/span> &lt;span style="color:#ae81ff">72904&lt;/span> &lt;span style="color:#ae81ff">85472&lt;/span> &lt;span style="color:#ae81ff">641460&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">41&lt;/span> &lt;span style="color:#ae81ff">62&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-09-28 14:41:55
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">101948&lt;/span> &lt;span style="color:#ae81ff">72904&lt;/span> &lt;span style="color:#ae81ff">85472&lt;/span> &lt;span style="color:#ae81ff">641460&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span> &lt;span style="color:#ae81ff">39&lt;/span> &lt;span style="color:#ae81ff">76&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">99&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-09-28 14:41:57
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run &lt;code>man vmstat&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Memory&lt;/p>
&lt;ul>
&lt;li>These are affected by the &amp;ndash;unit option.&lt;/li>
&lt;li>swpd: the amount of swap memory used.&lt;/li>
&lt;li>free: the amount of idle memory.&lt;/li>
&lt;li>buff: the amount of memory used as buffers.&lt;/li>
&lt;li>cache: the amount of memory used as cache.&lt;/li>
&lt;li>inact: the amount of inactive memory. (-a option)&lt;/li>
&lt;li>active: the amount of active memory. (-a option)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Swap&lt;/p>
&lt;ul>
&lt;li>These are affected by the &amp;ndash;unit option.&lt;/li>
&lt;li>si: Amount of memory swapped in from disk (/s).&lt;/li>
&lt;li>so: Amount of memory swapped to disk (/s).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>IO&lt;/p>
&lt;ul>
&lt;li>bi: Blocks received from a block device (blocks/s).&lt;/li>
&lt;li>bo: Blocks sent to a block device (blocks/s).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>System&lt;/p>
&lt;ul>
&lt;li>in: The number of interrupts per second, including the clock.&lt;/li>
&lt;li>cs: The number of context switches per second.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>CPU&lt;/p>
&lt;ul>
&lt;li>These are percentages of total CPU time.&lt;/li>
&lt;li>us: Time spent running non-kernel code. (user time, including nice time)&lt;/li>
&lt;li>sy: Time spent running kernel code. (system time)&lt;/li>
&lt;li>id: Time spent idle. Prior to Linux 2.5.41, this includes IO-wait time.&lt;/li>
&lt;li>wa: Time spent waiting for IO. Prior to Linux 2.5.41, included in idle.&lt;/li>
&lt;li>st: Time stolen from a virtual machine. Prior to Linux 2.6.11, unknown.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="4-procmeminfo">4. /proc/meminfo&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># This file reports statistics about memory usage on the system.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat /proc/meminfo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># show the first several rows only&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MemTotal: &lt;span style="color:#ae81ff">980508&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MemFree: &lt;span style="color:#ae81ff">74136&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MemAvailable: &lt;span style="color:#ae81ff">634416&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Buffers: &lt;span style="color:#ae81ff">85092&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cached: &lt;span style="color:#ae81ff">571860&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SwapCached: &lt;span style="color:#ae81ff">9556&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Active: &lt;span style="color:#ae81ff">408724&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Inactive: &lt;span style="color:#ae81ff">305408&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Active&lt;span style="color:#f92672">(&lt;/span>anon&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#ae81ff">21352&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Inactive&lt;span style="color:#f92672">(&lt;/span>anon&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#ae81ff">45240&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Active&lt;span style="color:#f92672">(&lt;/span>file&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#ae81ff">387372&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Inactive&lt;span style="color:#f92672">(&lt;/span>file&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#ae81ff">260168&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Unevictable: &lt;span style="color:#ae81ff">27620&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Mlocked: &lt;span style="color:#ae81ff">27620&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SwapTotal: &lt;span style="color:#ae81ff">2457596&lt;/span> kB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="5-memleak">5. memleak&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># memleak - Print a summary of outstanding allocations and their call stacks to detect memory leaks. Uses Linux eBPF/bcc.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Install: https://github.com/iovisor/bcc/blob/master/INSTALL.md#installing-bcc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ /usr/sbin/memleak-bpfcc -p &lt;span style="color:#66d9ef">$(&lt;/span>pidof systemd&lt;span style="color:#66d9ef">)&lt;/span> &lt;span style="color:#75715e"># systemd no memory leak&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attaching to pid 212971, Ctrl+C to quit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>04:34:51&lt;span style="color:#f92672">]&lt;/span> Top &lt;span style="color:#ae81ff">10&lt;/span> stacks with outstanding allocations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>04:34:56&lt;span style="color:#f92672">]&lt;/span> Top &lt;span style="color:#ae81ff">10&lt;/span> stacks with outstanding allocations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>04:35:01&lt;span style="color:#f92672">]&lt;/span> Top &lt;span style="color:#ae81ff">10&lt;/span> stacks with outstanding allocations:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.geeksforgeeks.org/operating-system-allocating-kernel-memory-buddy-system-slab-system/">https://www.geeksforgeeks.org/operating-system-allocating-kernel-memory-buddy-system-slab-system/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.kernel.org/doc/html/next/admin-guide/mm/concepts.html">https://www.kernel.org/doc/html/next/admin-guide/mm/concepts.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/iovisor/bcc">BPF Compiler Collection&lt;/a>&lt;/li>
&lt;/ul></content></item></channel></rss>