<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Network on</title><link>https://chejinying.com/tech/tags/network/</link><description>Recent content in Network on</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 19 May 2024 11:10:54 +0800</lastBuildDate><atom:link href="https://chejinying.com/tech/tags/network/index.xml" rel="self" type="application/rss+xml"/><item><title>v2ray setup</title><link>https://chejinying.com/tech/posts/v2ray/</link><pubDate>Sun, 19 May 2024 11:10:54 +0800</pubDate><guid>https://chejinying.com/tech/posts/v2ray/</guid><description>&lt;p&gt;&lt;a href="https://github.com/v2fly/v2ray-core"&gt;V2Ray&lt;/a&gt; is a tool under Project V. Project V is a project that includes a set of tools for building specific network environments, and V2Ray is the core one.&lt;/p&gt;
&lt;h3 id="install"&gt;Install&lt;/h3&gt;
&lt;h4 id="server"&gt;Server&lt;/h4&gt;
&lt;p&gt;The v2ray server is usually hosted in a linux server, the &lt;a href="https://github.com/v2fly/fhs-install-v2ray"&gt;official way&lt;/a&gt; is to install with a script, which setups the systemd config as well.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# run with root privilege&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;bash &amp;lt;&lt;span class="o"&gt;(&lt;/span&gt;curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# output&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;installed: /usr/local/bin/v2ray
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;installed: /usr/local/share/v2ray/geoip.dat
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;installed: /usr/local/share/v2ray/geosite.dat
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;installed: /usr/local/etc/v2ray/config.json
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;installed: /var/log/v2ray/
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;installed: /var/log/v2ray/access.log
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;installed: /var/log/v2ray/error.log
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;installed: /etc/systemd/system/v2ray.service
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;installed: /etc/systemd/system/v2ray@.service
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id="client"&gt;Client&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# macos &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;brew install v2ray
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="run"&gt;Run&lt;/h3&gt;
&lt;h4 id="server-1"&gt;Server&lt;/h4&gt;
&lt;p&gt;For v2ray server, we use &lt;a href="https://systemd.io/"&gt;systemd&lt;/a&gt; to manage the v2ray process in &lt;code&gt;/usr/local/etc/v2ray/config.json&lt;/code&gt; which is empty after installation. We modify the config based on the &lt;a href="https://www.v2fly.org/en_US/guide/start.html#server"&gt;Novice Guide&lt;/a&gt;:&lt;/p&gt;</description></item><item><title>DNS</title><link>https://chejinying.com/tech/posts/network/dns/</link><pubDate>Wed, 20 Sep 2023 11:47:31 +0800</pubDate><guid>https://chejinying.com/tech/posts/network/dns/</guid><description>&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Domain_Name_System"&gt;Domain Name System (DNS)&lt;/a&gt; is the phonebook of the Internet. It translates human-readable domain names (google.com) to machine-readable IP addresses (142.251.46.238).&lt;/p&gt;
&lt;p&gt;DNS is not very complex but super useful.&lt;/p&gt;
&lt;h2 id="how-does-dns-work"&gt;How does DNS work?&lt;/h2&gt;
&lt;p&gt;&lt;img src="https://chejinying.com/tech/images/dns_architecture.svg" alt="dns architecutre"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://chejinying.com/tech/images/dns_flow.png" alt="dns flow"&gt;&lt;/p&gt;
&lt;p&gt;The basic flow to query dns level by level as follows, the previous server stores the next server address, e.g. Root Nameserver stores TLD Nameserver addresss.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Brower cache and OS cache&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DNS Resolver&lt;/strong&gt;: is responsible for initiating and sequencing the queries that ultimately lead to a full resolution (translation) of the resource sought. DNS resolvers are classified by a variety of query methods, such as &lt;strong&gt;recursive&lt;/strong&gt;, &lt;strong&gt;non-recursive&lt;/strong&gt;, and &lt;strong&gt;iterative&lt;/strong&gt;. A resolution process may use a combination of these methods.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Root Nameserver&lt;/strong&gt;: the first step in translating (resolving) human readable host names into IP addresses. It stores the IP addresses of TLD, There are &lt;strong&gt;13&lt;/strong&gt; logical Root Nameserver globally, e.g.
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-txt" data-lang="txt"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- l.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- m.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- a.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- b.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- c.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- d.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- e.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- f.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- g.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- h.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- i.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- j.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- k.root-servers.net.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TLD Nameserver&lt;/strong&gt; (Top Level Domain Server): It stores the IP addresses of authoritative name servers, e.g.
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-txt" data-lang="txt"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- .com
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- .org
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- .edu
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- .net
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- .us
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- .cn
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- ...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authoritative Nameserver&lt;/strong&gt;: it provides the actual anwser for the dns request.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="example"&gt;Example&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s try to trace the dns request for &lt;code&gt;jinying-che.github.io&lt;/code&gt; from my local laptop:&lt;/p&gt;</description></item><item><title>Iptables</title><link>https://chejinying.com/tech/posts/network/iptables/</link><pubDate>Thu, 26 Jan 2023 16:22:21 +0800</pubDate><guid>https://chejinying.com/tech/posts/network/iptables/</guid><description>&lt;p&gt;iptables is a user-space utility program that allows a system administrator to configure the IP packet filter rules of the Linux kernel firewall, implemented as different &lt;a href="https://www.netfilter.org/"&gt;Netfilter&lt;/a&gt; modules. The filters are organized in different tables, which contain chains of rules for how to treat network traffic packets.&lt;/p&gt;
&lt;h2 id="in-a-nutshell"&gt;In a nutshell:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Relationship: Tables -&amp;gt; Chains -&amp;gt; Rules
&lt;img src="https://chejinying.com/tech/images/iptable.png" alt="package flow through iptables"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="tables"&gt;Tables&lt;/h2&gt;
&lt;p&gt;There are five tables, the &lt;em&gt;Priority&lt;/em&gt; is: &lt;strong&gt;filter, nat, mangle, raw, security&lt;/strong&gt;&lt;/p&gt;</description></item><item><title>Container Networking</title><link>https://chejinying.com/tech/posts/network/container_networking/</link><pubDate>Thu, 26 Aug 2021 10:27:13 +0800</pubDate><guid>https://chejinying.com/tech/posts/network/container_networking/</guid><description>&lt;h1 id="before"&gt;Before&lt;/h1&gt;
&lt;hr&gt;
&lt;h3 id="veth"&gt;VETH&lt;/h3&gt;
&lt;p&gt;The veth devices are virtual Ethernet devices. They can act as tunnels between network namespaces to create a bridge to a physical network device in another namespace, but can also be used as standalone network devices.&lt;/p&gt;
&lt;p&gt;veth device pairs are useful for combining the network facilities of the kernel together in interesting ways. A particularly interesting use case is to place one end of a veth pair in one network namespace and the other end in another network namespace, thus allowing communication between network namespaces.&lt;/p&gt;</description></item><item><title>Network Hardware</title><link>https://chejinying.com/tech/posts/network/hardware/</link><pubDate>Mon, 05 Apr 2021 23:11:29 +0800</pubDate><guid>https://chejinying.com/tech/posts/network/hardware/</guid><description>&lt;p&gt;The hardware inlucded in this post are Hub, Switch, Router, Modem, AP&lt;/p&gt;
&lt;h1 id="1-physical-layer-of-osi"&gt;1. Physical Layer of OSI&lt;/h1&gt;
&lt;h2 id="hub-and-switch"&gt;Hub and Switch&lt;/h2&gt;
&lt;p&gt;The purpose of both is to connect the internal network (LAN), they do not know IP&lt;/p&gt;
&lt;h5 id="hub"&gt;Hub&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;It is not intelligent, what it knows is only the ports and the devices that is connected to the ports&lt;/li&gt;
&lt;li&gt;It does not filter any data or has intelligence as to where the data is supposed to be sent&lt;/li&gt;
&lt;li&gt;When a data packet comes into one port, it will rebroadcast the data to every port that has a device connected to it&lt;/li&gt;
&lt;li&gt;It operates at the &lt;a href="https://en.wikipedia.org/wiki/OSI_model#Layer_1:_Physical_layer"&gt;Physical Layer of OSI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="onu"&gt;ONU&lt;/h2&gt;
&lt;p&gt;ONU (Optical Network Unit) is a device that serves as the demarcation point between the PON and the customer&amp;rsquo;s premises. It converts optical signals transmitted via fiber optic cables into electrical signals that can be used by devices within the customer&amp;rsquo;s home or business. The ONU is typically installed on the exterior of a building or inside a utility closet.&lt;/p&gt;</description></item><item><title>TCP</title><link>https://chejinying.com/tech/posts/network/tcp/</link><pubDate>Mon, 01 Feb 2021 23:25:26 +0800</pubDate><guid>https://chejinying.com/tech/posts/network/tcp/</guid><description>&lt;p&gt;TCP is really complex protocol and there&amp;rsquo;s a lot of tutorials online to learn TCP, however as time being, it&amp;rsquo;s probably being outdated, same as my post. Hence I would recommend the official &lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-16"&gt;RFC 793&lt;/a&gt; as the only true source. Here&amp;rsquo;s a summary of &lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-16"&gt;RFC 793&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="tcp-header"&gt;TCP Header&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-16"&gt;TCP Header Format&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt; 0 1 2 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | Source Port | Destination Port |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | Sequence Number |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | Acknowledgment Number |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | Data | |U|A|P|R|S|F| |
 | Offset| Reserved |R|C|S|S|Y|I| Window |
 | | |G|K|H|T|N|N| |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | Checksum | Urgent Pointer |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | Options | Padding |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 | data |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="tcp-state-machine"&gt;TCP State Machine&lt;/h3&gt;
&lt;p&gt;Be noted that 11 &lt;a href="https://datatracker.ietf.org/doc/html/rfc793#autoid-17"&gt;TCP Connection States Diagram&lt;/a&gt; indicating state to state transformation not cliet to server communication.&lt;/p&gt;</description></item><item><title>HTTPS</title><link>https://chejinying.com/tech/posts/network/https/</link><pubDate>Mon, 10 Jun 2019 11:19:47 +0800</pubDate><guid>https://chejinying.com/tech/posts/network/https/</guid><description>&lt;h2 id="tldr"&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;HTTPS = HTTP Over TLS&lt;/strong&gt;, when we talk about HTTPS, we actually talk about the TLS more specifically.&lt;/p&gt;
&lt;h2 id="handshake"&gt;Handshake&lt;/h2&gt;
&lt;p&gt;The exact steps within a TLS handshake will vary depending upon the kind of key exchange algorithm used and the cipher suites supported by both sides. The RSA key exchange algorithm, while now considered not secure, was used in versions of TLS before 1.3.&lt;/p&gt;
&lt;h4 id="handshake-tls-12"&gt;Handshake TLS 1.2&lt;/h4&gt;
&lt;p&gt;Basically it&amp;rsquo;s a &lt;em&gt;3-Way TCP handshake&lt;/em&gt; + &lt;em&gt;4 Way TLS handshake&lt;/em&gt;.
&lt;img src="https://chejinying.com/tech/images/https_handshake.png" alt="https handshake"&gt;&lt;/p&gt;</description></item><item><title>HTTP</title><link>https://chejinying.com/tech/posts/network/http/</link><pubDate>Wed, 10 Oct 2018 11:19:45 +0800</pubDate><guid>https://chejinying.com/tech/posts/network/http/</guid><description>&lt;blockquote&gt;
&lt;p&gt;HTTP位于网络的应用层，使用TCP/IP协议进行传输&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;TCP连接
&lt;ul&gt;
&lt;li&gt;HTTP/1.0：通过非标准字段&lt;code&gt;Connection: keep-alive&lt;/code&gt;保持TCP连接&lt;/li&gt;
&lt;li&gt;HTTP/1.1：允许TCP复用，但所有数据通信都是按次序的，请求要一个一个处理&lt;/li&gt;
&lt;li&gt;HTTP/2：&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="http09"&gt;HTTP/0.9&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;客户端请求，服务器回复完毕，TCP连接即关闭&lt;/li&gt;
&lt;li&gt;只有一个命令：&lt;code&gt;GET&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;服务器只能回应HTML格式的字符串&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="http10"&gt;HTTP/1.0&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;加入&lt;code&gt;POST&lt;/code&gt;、&lt;code&gt;HEAD&lt;/code&gt;命令&lt;/li&gt;
&lt;li&gt;协议分为头部和数据部，头部字段如：&lt;code&gt;Content-Type&lt;/code&gt;、&lt;code&gt;Content-Encoding&lt;/code&gt;等&lt;/li&gt;
&lt;li&gt;为了保持TCP的复用，引入头部字段：&lt;code&gt;Connection: keep-alive&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="http11"&gt;HTTP/1.1&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;TCP默认为持久连接，由客户端和服务端主动关闭&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引入管道机制，向TCP连接发送多个请求（而不用等待上一个请求处理之后，再发送）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务端可以区分多个请求的基础：&lt;code&gt;Content-Length&lt;/code&gt;字段，即知道每个请求的长度&lt;/li&gt;
&lt;li&gt;在1.0版中，&lt;code&gt;Content-Length&lt;/code&gt;字段不是必需的，因为浏览器发现服务器关闭了TCP连接，就表明收到的数据包已经全了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引入流模式&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于一些很耗时的动态操作来说，这意味着，服务器要等到所有操作完成，才能发送数据，显然这样的效率不高。更好的处理方法是，产生一块数据，就发送一块，采用&amp;quot;流模式&amp;quot;（stream）取代&amp;quot;缓存模式&amp;quot;（buffer）。&lt;/p&gt;
&lt;p&gt;因此，1.1版规定可以不使用&lt;code&gt;Content-Length&lt;/code&gt;字段，而使用&lt;a href="https://zh.wikipedia.org/wiki/%E5%88%86%E5%9D%97%E4%BC%A0%E8%BE%93%E7%BC%96%E7%A0%81"&gt;&amp;ldquo;分块传输编码&amp;rdquo;&lt;/a&gt;（chunked transfer encoding）。只要请求或回应的头信息有&lt;code&gt;Transfer-Encoding&lt;/code&gt;字段，就表明回应将由数量未定的数据块组成。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ruanyifeng.com/blog/2016/08/http.html"&gt;《HTTP 协议入门》 阮一峰&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;当HTTP流水线启动时，后续请求都可以不用等待第一个请求的成功回应就被发送。然而HTTP流水线已被证明很难在现有的网络中实现，因为现有网络中有很多老旧的软件与现代版本的软件共存。因此，HTTP流水线已被在有多请求下表现得更稳健的HTTP/2的帧所取代。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Overview"&gt;《HTTP概述》 MDN&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;服务器只能按顺序处理请求，如果前面请求处理的慢，后面的需要排队，即&lt;a href="https://zh.wikipedia.org/wiki/%E9%98%9F%E5%A4%B4%E9%98%BB%E5%A1%9E"&gt;&amp;ldquo;队头堵塞&amp;rdquo;&lt;/a&gt;（Head-of-line blocking）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="http20"&gt;HTTP/2.0&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;2009年，谷歌公开了自行研发的 SPDY 协议，主要解决 HTTP/1.1 效率不高的问题。&lt;/p&gt;
&lt;p&gt;这个协议在Chrome浏览器上证明可行以后，就被当作 HTTP/2 的基础，主要特性都在 HTTP/2 之中得到继承。&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;头部和数据部都是二进制，统称为“帧”&lt;/li&gt;
&lt;li&gt;全双工模式（双向、实时通信），客户端和服务端可同时发送多个请求和回应（解决阻塞问题）
&lt;ul&gt;
&lt;li&gt;实现的基础：由于HTTP/2不按照顺序发送，就需要对每个请求或回应作区分，即每个请求或回应的所有数据包都对应唯一ID&lt;/li&gt;
&lt;li&gt;客户端和服务器都可以发送信号（&lt;code&gt;RST_STREAM&lt;/code&gt;帧），取消这个数据流&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;头信息压缩&lt;/li&gt;
&lt;li&gt;服务器未经允许，主动推送数据到客户端&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Reference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2016/08/http.html"&gt;《HTTP 协议入门》 阮一峰&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Overview"&gt;《HTTP概述》 MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;</description></item></channel></rss>