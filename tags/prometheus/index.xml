<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Prometheus on</title><link>https://chejinying.com/tech/tags/prometheus/</link><description>Recent content in Prometheus on</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 02 Oct 2024 09:52:53 +0800</lastBuildDate><atom:link href="https://chejinying.com/tech/tags/prometheus/index.xml" rel="self" type="application/rss+xml"/><item><title>rate vs irate</title><link>https://chejinying.com/tech/posts/rate_vs_irate/</link><pubDate>Wed, 02 Oct 2024 09:52:53 +0800</pubDate><guid>https://chejinying.com/tech/posts/rate_vs_irate/</guid><description>&lt;p&gt;&lt;img src="https://chejinying.com/tech/images/rate_vs_irate.png" alt="rate_vs_irate"&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rate&lt;/code&gt; and &lt;code&gt;irate&lt;/code&gt; are based on the &lt;strong&gt;counter&lt;/strong&gt; type metrics.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rate(v range-vector)&lt;/code&gt; calculates the per-second average rate of increase of the time series in the &lt;strong&gt;range vector&lt;/strong&gt;, for example, &lt;code&gt;rate(http_request_total{method=&amp;quot;post&amp;quot;}[1m])&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It&amp;rsquo;s a rate: &lt;code&gt;total(now) - total(now - 1m) / 60s&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s an average rate: over 1m&lt;/li&gt;
&lt;li&gt;Average is calculated over the time range, that&amp;rsquo;s why range vector is required.&lt;/li&gt;
&lt;li&gt;It provides a &lt;strong&gt;smoother&lt;/strong&gt; trend.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;irate(v range-vector)&lt;/code&gt; calculates the per-second instant rate of increase of the time series in the range vector.&lt;/p&gt;</description></item><item><title>Prometheus Overview</title><link>https://chejinying.com/tech/posts/prometheus/</link><pubDate>Sun, 31 Dec 2023 09:41:04 +0800</pubDate><guid>https://chejinying.com/tech/posts/prometheus/</guid><description>&lt;h2 id="architecture"&gt;Architecture&lt;/h2&gt;
&lt;p&gt;&lt;img src="https://chejinying.com/tech/images/prometheus.png" alt="Architecture"&gt;&lt;/p&gt;
&lt;h2 id="quick-start"&gt;Quick Start&lt;/h2&gt;
&lt;h2 id="data-model"&gt;Data Model&lt;/h2&gt;
&lt;p&gt;Every time series is uniquely identified by its &lt;strong&gt;metric name&lt;/strong&gt; and optional key-value pairs called &lt;strong&gt;labels&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Metric Name&lt;/li&gt;
&lt;li&gt;Metric Label
&lt;ul&gt;
&lt;li&gt;The change of any labels value, including adding or removing labels, will create a new time series.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="metric-type"&gt;Metric Type&lt;/h4&gt;
&lt;p&gt;Prometheus supports four types of metrics, which are - Counter - Gauge - Histogram - Summary&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Counter: a metric value that can only increase or reset
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# use a counter to represent the number of requests served, tasks completed, or errors&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- http_requests_total&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;handler&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/get_user_id&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;200&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- errors_total&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;runtime&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;severity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;critical&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Gauge: a number which can either go up or down
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# used for measured values like temperatures or current memory usage&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- memory_usage_bytes&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;process_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;web_server&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;10.0.0.1:8080&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;- queue_size&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;queue_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;low_priority&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;worker_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;background&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Histogram: used for any calculated value which is counted based on bucket values,
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;bucket&lt;/strong&gt; value determines the ordinate value (y coordinate of a standard two-dimensional graph)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cumulative&lt;/strong&gt; counters for the observation buckets, exposed as &lt;!-- raw HTML omitted --&gt;_bucket{le=&amp;quot;&amp;lt;&lt;strong&gt;upper&lt;/strong&gt; inclusive bound&amp;gt;&amp;quot;}&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# usually things like request durations or response sizes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# le=&amp;#34;0.3&amp;#34; means less or equal to 0.3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;http_latency_sum 134420.14452212452
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;http_latency_second_bucket&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;le&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;0.05&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; 11326.0
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;http_latency_second_bucket&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;le&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;0.1&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; 2.284831e+06
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;http_latency_second_bucket&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;le&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;0.15&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; 2.285367e+06
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;http_latency_second_bucket&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;le&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;0.25&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; 2.285592e+06
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;http_latency_second_bucket&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;le&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; 2.285613e+06
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;http_latency_second_bucket&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;le&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;+Inf&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; 2.285619e+06
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;http_latency_count 2.285619e+06
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# cumulative means that the count for le=”0.5” bucket also includes the count for le=”0.25” bucket.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Consider the following hypothetical distribution of observations for 200 observations.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌─────────────┬──────────────────────┬──────────────────┐
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ Bucket Size │ Cumulative Frequency │ Upper Bound │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ │ Count │ Percentile │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;├─────────────┼──────────────────────┼──────────────────┤
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ 50ms │ &lt;span class="m"&gt;20&lt;/span&gt; │ p10 │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ 100ms │ &lt;span class="m"&gt;70&lt;/span&gt; │ p35 │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ 250ms │ &lt;span class="m"&gt;120&lt;/span&gt; │ p60 │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ 500ms │ &lt;span class="m"&gt;150&lt;/span&gt; │ p75 │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ 1000ms │ &lt;span class="m"&gt;200&lt;/span&gt; │ p100 │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ INF │ &lt;span class="m"&gt;200&lt;/span&gt; │ p100 │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─────────────┴──────────────────────┴──────────────────┘
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Summary: measure events and are an alternative to histograms. They are cheaper but lose more data (it is highly recommended to use histograms over summaries whenever possible.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="storage"&gt;Storage&lt;/h2&gt;
&lt;p&gt;&lt;img src="https://chejinying.com/tech/images/tsdb_write.png" alt="workflow"&gt;&lt;/p&gt;</description></item></channel></rss>